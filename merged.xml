<?xml version="1.0" encoding="UTF-8"?>
<merged_files>

  <file path="LOCAL_DEV_README.md">
    <name>LOCAL_DEV_README.md</name>
    <size>1962</size>
    <modified>2025-03-13T08:46:58.264Z</modified>
    <content>
      # Broadcasting Coach - Local Development

This guide explains how to run the Broadcasting Coach application locally using Cloudflare Workers.

## Project Structure

The project is now set up with the following structure:

- `static/` - Contains all static assets (HTML, CSS, JavaScript files)
- `src/` - Contains the worker code
  - `src/index.js` - Main worker code that handles API requests and serves static files
- `wrangler.jsonc` - Cloudflare Workers configuration file

## How It Works

The application uses Cloudflare Workers with the following configuration:

1. **Static Assets**: Served directly from the `static/` directory using Cloudflare&apos;s built-in site functionality
2. **API Endpoints**: Handled by the worker code in `src/index.js`
   - `/api/generate-prompt` - Generates coaching prompts using AI
   - `/api/get-session-key` - Creates a session key for authentication

## Running Locally

To run the application locally:

```bash
./start-local.sh
```

This script will:
- Install dependencies if needed
- Start the local development server using Wrangler
- Make the application available at http://localhost:8787

## API Testing

You can test the API endpoints using curl or a tool like Postman:

```bash
# Get a session key
curl -X POST http://localhost:8787/api/get-session-key \
  -H &quot;Content-Type: application/json&quot; \
  -d &apos;{&quot;username&quot;:&quot;test_user&quot;,&quot;broadcaster&quot;:&quot;test_broadcaster&quot;}&apos;

# Generate a coaching prompt
curl -X POST http://localhost:8787/api/generate-prompt \
  -H &quot;Content-Type: application/json&quot; \
  -d &apos;{
    &quot;context&quot;: [{&quot;type&quot;:&quot;chat&quot;,&quot;text&quot;:&quot;User: Hello!&quot;,&quot;timestamp&quot;:&quot;2025-03-13T08:30:00Z&quot;}],
    &quot;broadcaster&quot;: &quot;test_broadcaster&quot;,
    &quot;preferences&quot;: &quot;Keep it fun and engaging&quot;,
    &quot;sessionKey&quot;: &quot;[SESSION_KEY_FROM_PREVIOUS_REQUEST]&quot;
  }&apos;
```

## Deploying to Production

To deploy the application to Cloudflare:

```bash
wrangler deploy
```

This will deploy your worker and static assets to Cloudflare&apos;s global network.

    </content>
  </file>
  <file path="README.md">
    <name>README.md</name>
    <size>3297</size>
    <modified>2025-03-14T08:33:32.053Z</modified>
    <content>
      # CB Broadcasting Real-Time Coach

A web application designed to assist Chaturbate broadcasters with real-time coaching prompts delivered via audio.

## Overview

Broadcasting Real-Time Coach is a single-page web application that helps broadcasters improve their streaming performance by providing real-time coaching suggestions. The app connects to Chaturbate&apos;s event API, monitors chat activity, and uses AI to generate contextually relevant prompts that are delivered to the broadcaster through audio.

## Features

- **QR Code Scanner**: Easily connect to your Chaturbate stream by scanning the event API QR code
- **Real-time Event Monitoring**: Track chat messages, tips, and user activity
- **AI-Powered Coaching**: Receive contextually relevant suggestions based on stream activity
- **Audio Prompts**: Get coaching suggestions delivered directly to your ear via text-to-speech
- **Customizable Settings**: Configure AI model, language, prompt delay, and personal preferences

## Requirements

- A modern web browser (Chrome, Firefox, Safari, Edge)
~~- An OpenRouter API key for AI functionality~~
- Uses Cloudflare Worker AI
- A Chaturbate account with access to the Events API
- A device with a camera for QR code scanning (typically a smartphone)
- Headphones or earbuds for private audio prompts

## Setup Instructions

1. Open the application in your web browser
2. Click the &quot;Settings&quot; button (⚙️) to configure the app:
   ~~- Enter your OpenRouter API key~~
   - Select your preferred AI model
   ~~- Enter your Chaturbate username~~
   - Your CB username is picked up from the QR Code
   - Choose your preferred language for audio prompts
   - Set the delay between prompts (in seconds)
   - Add any preferences or topics to avoid
3. Click &quot;Save Configuration&quot;
4. Start your Chaturbate broadcast on your computer
5. On your phone, click &quot;Scan QR Code&quot; and scan the QR code displayed on your broadcast page
6. Once connected, put in your earbuds to receive private coaching prompts

## Privacy &amp; Security

- Your ~~API keys and~~ preferences are stored locally in your browser
- No data is sent to any server except the Chaturbate API and ~~OpenRouter~~ CloudFlare API
- The app does not record or store your broadcasts

## Technical Details

- Built with HTML, CSS, and JavaScript
- Uses jsQR for QR code scanning
- Connects to Chaturbate&apos;s Events API using Server-Sent Events (SSE)
- Uses ~~OpenRouter~~ CloudFlare API for AI-generated coaching prompts
- Implements Web Speech API for text-to-speech functionality

## Usage Tips

- Position your phone where you can easily see it during your broadcast
- Use a single earbud to hear prompts while still being able to hear other sounds
- Adjust the prompt delay based on your preference (shorter for more frequent prompts, longer for fewer interruptions)
- Be specific in your preferences to get more relevant coaching suggestions

## Troubleshooting

- If the QR code scanner doesn&apos;t work, ensure you&apos;ve granted camera permissions to the app
- If you&apos;re not receiving audio prompts, check that your device&apos;s volume is turned up and audio is enabled in the app
- If the connection to the Events API fails, try refreshing the page and scanning the QR code again

    </content>
  </file>
  <file path="backend_testing.sh">
    <name>backend_testing.sh</name>
    <size>4438</size>
    <modified>2025-03-13T09:30:00.915Z</modified>
    <content>
      #!/bin/bash

# ==============================
# Backend Testing Script
# ==============================

# Load environment variables (if needed)
# Uncomment the following line if you have an .env file with environment variables.
# source .env

# Set environment (dev or live)
ENV=&quot;live&quot;  # Change to &quot;dev&quot; for local testing

if [ &quot;$ENV&quot; == &quot;dev&quot; ]; then
  BASE_URL=&quot;http://localhost:8787&quot;
else
  BASE_URL=&quot;https://broadcasting-coach.adult-webcam-faq.com&quot;
fi

echo &quot;Testing backend on $BASE_URL...&quot;

# Helper function to log test results
log_result() {
  local test_name=&quot;$1&quot;
  local result=&quot;$2&quot;

  if [ &quot;$result&quot; == &quot;PASS&quot; ]; then
    echo &quot;✅ TEST PASSED: $test_name&quot;
  else
    echo &quot;❌ TEST FAILED: $test_name&quot;
  fi
}

# ==============================
# Step 1: Get a Valid Session Key
# ==============================
echo &quot;Step 1: Getting a valid session key...&quot;
SESSION_KEY_RESPONSE=$(curl -s -X POST &quot;$BASE_URL/api/get-session-key&quot; \
  -H &quot;Content-Type: application/json&quot; \
  -d &apos;{
    &quot;username&quot;: &quot;test_user&quot;,
    &quot;broadcaster&quot;: &quot;streamer_abc&quot;
  }&apos;)

# Parse session key and timestamp using jq
SESSION_KEY=$(echo &quot;$SESSION_KEY_RESPONSE&quot; | jq -r &apos;.sessionKey&apos;)
EXPIRES_AT=$(echo &quot;$SESSION_KEY_RESPONSE&quot; | jq -r &apos;.expiresAt&apos;)

if [ &quot;$SESSION_KEY&quot; != &quot;null&quot; ] &amp;&amp; [ &quot;$EXPIRES_AT&quot; != &quot;null&quot; ]; then
  log_result &quot;Get Session Key&quot; &quot;PASS&quot;
  echo &quot;Session Key: $SESSION_KEY&quot;
  echo &quot;Expires At: $EXPIRES_AT&quot;
else
  log_result &quot;Get Session Key&quot; &quot;FAIL&quot;
  echo &quot;Response: $SESSION_KEY_RESPONSE&quot;
  exit 1
fi

# ==============================
# Step 2: Test Generate Prompt with Valid Session Key
# ==============================
echo &quot;Step 2: Testing generate-prompt with a valid session key...&quot;
VALID_PROMPT_RESPONSE=$(curl -s -X POST &quot;$BASE_URL/api/generate-prompt&quot; \
  -H &quot;Content-Type: application/json&quot; \
  -d &apos;{
    &quot;context&quot;: [
      { &quot;type&quot;: &quot;chat&quot;, &quot;text&quot;: &quot;john_doe says hello!&quot;, &quot;timestamp&quot;: &quot;2023-10-01T12:05:00Z&quot; }
    ],
    &quot;broadcaster&quot;: &quot;streamer_abc&quot;,
    &quot;preferences&quot;: &quot;&quot;,
    &quot;sessionKey&quot;: &quot;&apos;&quot;$SESSION_KEY&quot;&apos;&quot;
  }&apos;)

# Parse response fields
ACTION=$(echo &quot;$VALID_PROMPT_RESPONSE&quot; | jq -r &apos;.action&apos;)
CONTENT=$(echo &quot;$VALID_PROMPT_RESPONSE&quot; | jq -r &apos;.content&apos;)
NEW_SESSION_KEY=$(echo &quot;$VALID_PROMPT_RESPONSE&quot; | jq -r &apos;.sessionKey&apos;)

if [ &quot;$ACTION&quot; != &quot;null&quot; ] &amp;&amp; [ &quot;$CONTENT&quot; != &quot;null&quot; ] &amp;&amp; [ &quot;$NEW_SESSION_KEY&quot; != &quot;null&quot; ]; then
  log_result &quot;Generate Prompt (Valid Session Key)&quot; &quot;PASS&quot;
  echo &quot;Action: $ACTION&quot;
  echo &quot;Content: $CONTENT&quot;
  echo &quot;New Session Key: $NEW_SESSION_KEY&quot;
else
  log_result &quot;Generate Prompt (Valid Session Key)&quot; &quot;FAIL&quot;
  echo &quot;Response: $VALID_PROMPT_RESPONSE&quot;
  exit 1
fi

# ==============================
# Step 3: Test Generate Prompt with Invalid Session Key
# ==============================
echo &quot;Step 3: Testing generate-prompt with an invalid session key...&quot;
INVALID_PROMPT_RESPONSE=$(curl -s -X POST &quot;$BASE_URL/api/generate-prompt&quot; \
  -H &quot;Content-Type: application/json&quot; \
  -d &apos;{
    &quot;context&quot;: [
      { &quot;type&quot;: &quot;chat&quot;, &quot;text&quot;: &quot;john_doe says hello!&quot;, &quot;timestamp&quot;: &quot;2023-10-01T12:05:00Z&quot; }
    ],
    &quot;broadcaster&quot;: &quot;streamer_abc&quot;,
    &quot;preferences&quot;: &quot;&quot;,
    &quot;sessionKey&quot;: &quot;INVALID_SESSION_KEY&quot;
  }&apos;)

# Parse error message
ERROR_MESSAGE=$(echo &quot;$INVALID_PROMPT_RESPONSE&quot; | jq -r &apos;.error&apos;)

if [ &quot;$ERROR_MESSAGE&quot; == &quot;Invalid or missing session key&quot; ]; then
  log_result &quot;Generate Prompt (Invalid Session Key)&quot; &quot;PASS&quot;
  echo &quot;Error Message: $ERROR_MESSAGE&quot;
else
  log_result &quot;Generate Prompt (Invalid Session Key)&quot; &quot;FAIL&quot;
  echo &quot;Response: $INVALID_PROMPT_RESPONSE&quot;
  exit 1
fi

# ==============================
# Step 4: Test Generate Prompt with Missing Context
# ==============================
echo &quot;Step 4: Testing generate-prompt with missing context...&quot;
MISSING_CONTEXT_RESPONSE=$(curl -s -X POST &quot;$BASE_URL/api/generate-prompt&quot; \
  -H &quot;Content-Type: application/json&quot; \
  -d &apos;{
    &quot;context&quot;: [],
    &quot;broadcaster&quot;: &quot;streamer_abc&quot;,
    &quot;preferences&quot;: &quot;&quot;,
    &quot;sessionKey&quot;: &quot;&apos;&quot;$SESSION_KEY&quot;&apos;&quot;
  }&apos;)

# Parse error message
ERROR_MESSAGE=$(echo &quot;$MISSING_CONTEXT_RESPONSE&quot; | jq -r &apos;.error&apos;)

if [ &quot;$ERROR_MESSAGE&quot; == &quot;Invalid or missing context&quot; ]; then
  log_result &quot;Generate Prompt (Missing Context)&quot; &quot;PASS&quot;
  echo &quot;Error Message: $ERROR_MESSAGE&quot;
else
  log_result &quot;Generate Prompt (Missing Context)&quot; &quot;FAIL&quot;
  echo &quot;Response: $MISSING_CONTEXT_RESPONSE&quot;
  exit 1
fi

# ==============================
# Final Summary
# ==============================
echo &quot;All tests completed.&quot;


    </content>
  </file>
  <file path="code-review.md">
    <name>code-review.md</name>
    <size>9141</size>
    <modified>2025-03-14T08:39:18.844Z</modified>
    <content>
      # Code Review: Chaturbate Broadcasting Real-Time Coach

## Overview

This document provides a comprehensive code review of the Chaturbate Broadcasting Real-Time Coach application, a web-based tool designed to assist broadcasters with real-time coaching suggestions delivered via audio. The application connects to Chaturbate&apos;s event API, monitors chat activity, and uses AI to generate contextually relevant coaching prompts.

## Code-Documentation Alignment

### API Implementation

- **Code Status**: The codebase has been successfully updated to use Cloudflare Worker AI instead of OpenRouter.
- **Documentation Status**: README.md is partially updated with crossed-out OpenRouter references but should be fully cleaned up.
- **Action Needed**: Remove all crossed-out OpenRouter references and update the relevant sections to clearly reflect the Cloudflare Worker AI implementation.

### Feature Implementation

All features mentioned in the documentation are properly implemented in the code:
- QR code scanning (via `qr-scanner.js`)
- Real-time event monitoring (via `app.js`)
- AI-powered coaching (via `cloudflareWorker.js`)
- Audio prompts (via Web Speech API in `app.js`)
- Customizable settings (via `config.js`)

### Additional Undocumented Features

The following features are implemented in code but not prominently documented:
- Comprehensive user tracking and analytics (via `user-manager.js`)
- Data export/import functionality (via `data-manager.js`)
- Backup and restore capabilities
- User activity visualization and management interface

## Component Analysis

### Configuration Module (`config.js`)

- **Purpose**: Handles application configuration and settings management
- **Quality**: Well-structured with proper error handling
- **Implementation**: Successfully uses Cloudflare Worker API for session management
- **Notable Features**:
  - Persistent configuration via localStorage
  - Session key management
  - API connection testing
  - Data import/export UI integration

### QR Scanner Module (`qr-scanner.js`)

- **Purpose**: Handles scanning of Chaturbate event API QR codes
- **Quality**: Well-implemented with proper camera handling
- **Implementation**: Uses jsQR library for QR code detection
- **Notable Features**:
  - Automatic username extraction from scanned URL
  - Persistent storage of scanned URL for reconnection
  - Proper camera resource management (starting/stopping streams)

### Cloudflare Worker API Module (`api/cloudflareWorker.js`)

- **Purpose**: Handles communication with Cloudflare AI service
- **Quality**: Well-structured with proper error handling and session management
- **Implementation**: Uses relative API endpoints for backend communication
- **Notable Features**:
  - Session key management with expiration handling
  - Robust error handling for API communication
  - Proper debouncing of API requests

### Data Manager Module (`data-manager.js`)

- **Purpose**: Handles data validation and management for import/export features
- **Quality**: Comprehensive validation with thorough type checking
- **Implementation**: Clean utility functions with clear purposes
- **Notable Features**:
  - Structured data validation
  - ISO date validation
  - File size validation
  - Smart data merging capabilities

### User Manager Module (`user-manager.js`)

- **Purpose**: Tracks users and their interactions during broadcasts
- **Quality**: Comprehensive user management with proper data structures
- **Implementation**: Uses Map for efficient user lookup and storage
- **Notable Features**:
  - User activity tracking
  - Tip history management
  - Chat history management with size limits
  - Storage optimization with cleanup strategies
  - Import/export functionality with validation

### Application Module (`app.js`)

- **Purpose**: Main application logic and event handling
- **Quality**: Well-structured with clear separation of concerns
- **Implementation**: Properly integrates all other modules
- **Notable Features**:
  - Event API connection management
  - Real-time event processing
  - Text-to-speech integration
  - User interface updates
  - Dynamic UI creation for user tracking

## Recommendations

### Documentation Updates

1. Remove all crossed-out OpenRouter references from README.md
2. Update the &quot;Technical Details&quot; section to clearly state Cloudflare Worker AI usage
3. Update the &quot;Privacy &amp; Security&quot; section to remove OpenRouter mentions
4. Update the &quot;Requirements&quot; section to remove OpenRouter API key reference
5. Add documentation about the user tracking and analytics features
6. Document the data export/import functionality
7. Add information about backup and restore capabilities

### Code Improvements

1. **API Endpoint Configuration**: Consider moving the hardcoded API endpoints in `cloudflareWorker.js` to a central configuration file:
   ```javascript
   // Current implementation
   const AI_API_ENDPOINT = &apos;/api/generate-prompt&apos;; // Relative URL!
   const SESSION_KEY_ENDPOINT = &apos;/api/get-session-key&apos;; // Session key endpoint
   
   // Recommendation: Move to config.js as environment-specific values
   ```

2. **Error Handling**: While error handling is generally good, consider implementing a more centralized error tracking system:
   ```javascript
   // Add to a new error-logger.js module
   export function logError(module, error, context = {}) {
     console.error(`[${module}] Error:`, error, context);
     // Could also send to a monitoring service
   }
   ```

3. **User Interface**: Consider implementing a more formal component system rather than direct DOM manipulation:
   ```javascript
   // Current approach in app.js
   function setupUsersSection() {
     // Direct DOM manipulation
     usersSection = document.createElement(&apos;div&apos;);
     // ...
   }
   
   // Consider a more modular approach with templates/components
   ```

4. **Consistency in Module Structure**: Some modules use default exports, others use named exports. Consider standardizing:
   ```javascript
   // Current mixed approach
   export default UserManager;
   
   // vs.
   
   export { 
     initConfig, 
     loadConfig, 
     // ...
   };
   ```

### Technical Debt

1. **CloudflareWorkerAPI Usage**: There&apos;s inconsistency in how `CloudflareWorkerAPI` is imported and used:
   ```javascript
   // In app.js
   import * as CloudflareWorkerAPI from &apos;./api/cloudflareWorker.js&apos;;
   // Later usage
   CloudflareWorkerAPI.default.generateCoachingPrompt(...);
   
   // vs. in config.js
   import CloudflareWorkerAPI from &apos;./api/cloudflareWorker.js&apos;;
   // Later usage
   CloudflareWorkerAPI.getSessionKey(...);
   ```
   
   This inconsistency suggests a refactoring opportunity to standardize module exports and imports.

2. **Debouncing Implementation**: The `debouncedSave` function in `user-manager.js` creates a new timeout each time, which could be optimized:
   ```javascript
   // Current implementation
   debouncedSave() {
     clearTimeout(this.saveDebounceTimeout);
     this.saveDebounceTimeout = setTimeout(() =&gt; this.saveUsers(), 1000);
   }
   
   // Consider using a more robust debounce utility
   ```

## Performance Considerations

1. **LocalStorage Usage**: The application makes heavy use of localStorage for data persistence. For users with large histories, this could approach browser storage limits. Consider:
   - Implementing more aggressive data pruning strategies
   - Exploring IndexedDB for larger storage needs
   - Adding visual indicators of storage usage

2. **Real-time Processing**: The event polling mechanism could be optimized to reduce unnecessary processing:
   ```javascript
   // Current implementation in app.js
   if (jsonResponse.nextUrl) {
     getEvents(jsonResponse.nextUrl);
   } else {
     // If no nextUrl, wait a bit and retry with the same URL
     setTimeout(() =&gt; getEvents(url), 3000);
   }
   
   // Consider implementing exponential backoff for empty responses
   ```

## Security Considerations

1. **Session Key Management**: The application properly stores and refreshes session keys, but consider adding encryption for locally stored sensitive data.

2. **Input Validation**: While the application validates imported data, ensure that all user inputs (especially in chat processing) are properly sanitized before processing.

3. **Error Messages**: Some error messages might expose implementation details. Consider standardizing error messages for production use.

## Conclusion

The Chaturbate Broadcasting Real-Time Coach application is well-implemented with a clean, modular structure. The transition from OpenRouter to Cloudflare Worker AI has been successfully completed in the codebase, though documentation needs updating to reflect this change.

The application demonstrates good practices in terms of error handling, state management, and user interface updates. The additional user tracking and data management features provide valuable functionality beyond what&apos;s mentioned in the main documentation.

Addressing the documentation discrepancies and considering the suggested code improvements would further enhance the application&apos;s maintainability and user experience.

    </content>
  </file>
  <file path="code.js">
    <name>code.js</name>
    <size>2461</size>
    <modified>2025-03-19T07:02:07.164Z</modified>
    <content>
      #!/usr/bin/env node

const fs = require(&apos;fs&apos;);
const path = require(&apos;path&apos;);
const { execSync } = require(&apos;child_process&apos;);

const OUTPUT_FILE = &apos;merged.xml&apos;;

// Function to escape XML entities
function escapeXml(unsafe) {
  return unsafe.replace(/[&lt;&gt;&amp;&apos;&quot;]/g, function (c) {
    switch (c) {
      case &apos;&lt;&apos;: return &apos;&amp;lt;&apos;;
      case &apos;&gt;&apos;: return &apos;&amp;gt;&apos;;
      case &apos;&amp;&apos;: return &apos;&amp;amp;&apos;;
      case &apos;&quot;&apos;: return &apos;&amp;quot;&apos;;
      case &quot;&apos;&quot;: return &apos;&amp;apos;&apos;;
    }
  });
}

// Function to check if a file is ignored by .gitignore
function isIgnored(filePath) {
  try {
    execSync(`git check-ignore --quiet &quot;${filePath}&quot;`, { stdio: &apos;ignore&apos; });
    return true; // Ignored
  } catch (error) {
    return false; // Not ignored or git isn&apos;t available
  }
}

// Function to process a file
function processFile(filePath) {
  try {
    const stats = fs.statSync(filePath);
    const content = fs.readFileSync(filePath, &apos;utf8&apos;);
    const escapedContent = escapeXml(content);
    const relativePath = path.relative(process.cwd(), filePath);

    return `
  &lt;file path=&quot;${relativePath}&quot;&gt;
    &lt;name&gt;${path.basename(filePath)}&lt;/name&gt;
    &lt;size&gt;${stats.size}&lt;/size&gt;
    &lt;modified&gt;${stats.mtime.toISOString()}&lt;/modified&gt;
    &lt;content&gt;
      ${escapedContent}
    &lt;/content&gt;
  &lt;/file&gt;`;
  } catch (error) {
    console.error(`Error processing file ${filePath}: ${error}`);
    return &apos;&apos;; // Return empty string to avoid breaking the merge
  }
}


// Function to recursively get files
function getFiles(dir) {
  const files = [];

  function traverse(currentDir) {
    const entries = fs.readdirSync(currentDir, { withFileTypes: true });

    for (const entry of entries) {
      const fullPath = path.join(currentDir, entry.name);

      if (entry.isDirectory()) {
        if (!entry.name.startsWith(&apos;.&apos;)) { // Ignore hidden directories
          traverse(fullPath);
        }
      } else {
        if (!entry.name.startsWith(&apos;.&apos;) &amp;&amp; !isIgnored(fullPath)) { // Ignore hidden files and git ignored files
          files.push(fullPath);
        }
      }
    }
  }

  traverse(dir);
  return files;
}


// Main function
function main() {
  const files = getFiles(&apos;.&apos;);

  let xmlContent = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;merged_files&gt;\n&apos;;

  for (const file of files) {
    xmlContent += processFile(file);
  }

  xmlContent += &apos;\n&lt;/merged_files&gt;&apos;;

  fs.writeFileSync(OUTPUT_FILE, xmlContent);
  console.log(`Successfully merged files into ${OUTPUT_FILE}`);
}


main();
    </content>
  </file>
  <file path="concatenate-output.xml">
    <name>concatenate-output.xml</name>
    <size>54</size>
    <modified>2025-03-19T07:00:45.119Z</modified>
    <content>
      &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;merged_files&gt;

    </content>
  </file>
  <file path="concatenate.sh">
    <name>concatenate.sh</name>
    <size>1383</size>
    <modified>2025-03-19T07:00:51.303Z</modified>
    <content>
      #!/bin/bash

# Output file name
OUTPUT_FILE=&quot;merged.xml&quot;

# Start XML document
echo &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&apos; &gt; &quot;$OUTPUT_FILE&quot;
echo &apos;&lt;merged_files&gt;&apos; &gt;&gt; &quot;$OUTPUT_FILE&quot;

# Function to process a file
process_file() {
  local file=&quot;$1&quot;
  local relative_path=$(pwd)/$(echo &quot;$file&quot; | sed &apos;s/^\.\///&apos;) # Get relative path

  echo &quot;  &lt;file path=\&quot;$relative_path\&quot;&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;
  echo &quot;    &lt;name&gt;$(basename &quot;$file&quot;)&lt;/name&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;
  echo &quot;    &lt;size&gt;$(stat -c %s &quot;$file&quot;)&lt;/size&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;
  echo &quot;    &lt;modified&gt;$(date -r &quot;$file&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;)&lt;/modified&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;
  echo &quot;    &lt;content&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;

  # Escape XML entities within the file content
  cat &quot;$file&quot; |
    sed &apos;s/&amp;/\&amp;amp;/g; s/&lt;/\&amp;lt;/g; s/&gt;/\&amp;gt;/g; s/&quot;/\&amp;quot;/g; s/&apos;&quot;&apos;&quot;&apos;/\&amp;apos;/g&apos; &gt;&gt; &quot;$OUTPUT_FILE&quot;  #Crucially escape XML characters

  echo &quot;    &lt;/content&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;
  echo &quot;  &lt;/file&gt;&quot; &gt;&gt; &quot;$OUTPUT_FILE&quot;
}


# Find all files, excluding those ignored by .gitignore, hidden files, and hidden folders
find . -not -path &apos;*/.*&apos; -not -path &apos;.*&apos; -type f -print0 | while IFS= read -r -d $&apos;\0&apos; file; do
  # Check if file is ignored by .gitignore using git check-ignore
  if ! git check-ignore --quiet &quot;$file&quot;; then
    process_file &quot;$file&quot;
  fi
done

# End XML document
echo &apos;&lt;/merged_files&gt;&apos; &gt;&gt; &quot;$OUTPUT_FILE&quot;

echo &quot;Successfully merged files into $OUTPUT_FILE&quot;
    </content>
  </file>
  <file path="gitlog.txt">
    <name>gitlog.txt</name>
    <size>3246</size>
    <modified>2025-03-14T06:25:22.433Z</modified>
    <content>
      commit b5a6feb3347c558de0e66822437169b2683b6bbe
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 17:46:59 2025 +0800

    The test API button is working in local dev

commit 3d109bd4510bfd1b0024b84e09ded0176fb4bada
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 17:45:49 2025 +0800

    refactored to only a worker

commit 472fbfd0107c19f8dd4e7e09437cd9cd3cfc7f46
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 15:38:38 2025 +0800

    merge

commit 3bd2738834d62fa77be866c774e3896e01dac022
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 15:36:58 2025 +0800

    cors problem

commit 40ab71a74bf6a61d16b2672d7433d5a47d2de182
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 14:41:10 2025 +0800

    automated testing

commit 3d8a13cb6147e8ec4ad08a0a224d711e88c92e6c
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 14:36:50 2025 +0800

    ignore not

commit 95b60e3bdd3bda07171470620d75743e450f8695
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 14:36:44 2025 +0800

    wrangler

commit 0ec2e74ae63634776bc4d35a231cbb21c2474ad8
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 14:08:07 2025 +0800

    validation

commit 34bf9a58575c357badcd6ff6c7da89a9872b161f
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 14:06:49 2025 +0800

    session keys

commit 283c976ff6f616b59cad03c5895afedb66935e76
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 13:54:16 2025 +0800

    inline prompt

commit 43cd62b771ac885252a6ae230d0d9b4821dbc243
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 13:40:38 2025 +0800

    switch to embedded prompt

commit aa43ac1ce3c08a3d3814397c427823118b4dd4b1
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 13:22:57 2025 +0800

    prompt

commit 81831b0a46a19b4cbf7bae01eb1137c7e1b33e88
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 13:16:46 2025 +0800

    migrate prompt to backend

commit 432aeb418b4c56c80e3be80dc85d46e5c681e3de
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 13:04:23 2025 +0800

    use promptTemplate.txt

commit 745214bd3646831a0d5557061558c5445fff37e4
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 13:04:09 2025 +0800

    .gitignore .wrangler

commit ff95716b04be9c528e145e876125838a66d3f91f
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 12:31:44 2025 +0800

    backend

commit e2971ae4d60087067a7bb16b9f511e319dd16b72
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 12:25:33 2025 +0800

    first round working worker

commit 93489c1f963932e7096dbad49f788dc5ed2d2a10
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 12:13:19 2025 +0800

    create empty worker in backend

commit d47622d11bee1e02c15f2a83008a4829791be7d2
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 11:59:06 2025 +0800

    start backend development

commit 7feba2af329b49697e91f7a489ea7f3f23060ba5
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 11:33:25 2025 +0800

    Ai generated documents

commit 66bd2f296f8023cb5ce9045ff80563f28ca7ffd5
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 11:12:06 2025 +0800

    refactored

commit 42955a52cef9be16982b4477f701400e073c2b5f
Author: Your Name &lt;you@example.com&gt;
Date:   Thu Mar 13 10:48:35 2025 +0800

    first commit

    </content>
  </file>
  <file path="merged.xml">
    <name>merged.xml</name>
    <size>70</size>
    <modified>2025-03-19T07:01:04.693Z</modified>
    <content>
      &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;merged_files&gt;
&lt;/merged_files&gt;

    </content>
  </file>
  <file path="package-lock.json">
    <name>package-lock.json</name>
    <size>107797</size>
    <modified>2025-03-19T06:07:02.077Z</modified>
    <content>
      {
	&quot;name&quot;: &quot;broadcasting-coach&quot;,
	&quot;version&quot;: &quot;1.0.0&quot;,
	&quot;lockfileVersion&quot;: 3,
	&quot;requires&quot;: true,
	&quot;packages&quot;: {
		&quot;&quot;: {
			&quot;name&quot;: &quot;broadcasting-coach&quot;,
			&quot;version&quot;: &quot;1.0.0&quot;,
			&quot;license&quot;: &quot;ISC&quot;,
			&quot;devDependencies&quot;: {
				&quot;@cloudflare/vitest-pool-workers&quot;: &quot;^0.7.5&quot;,
				&quot;vitest&quot;: &quot;~3.0.7&quot;,
				&quot;wrangler&quot;: &quot;^4.1.0&quot;
			}
		},
		&quot;node_modules/@cloudflare/kv-asset-handler&quot;: {
			&quot;version&quot;: &quot;0.4.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/kv-asset-handler/-/kv-asset-handler-0.4.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-+tv3z+SPp+gqTIcImN9o0hqE9xyfQjI1XD9pL6NuKjua9B1y7mNYv0S9cP+QEbA4ppVgGZEmKOvHX5G5Ei1CVA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT OR Apache-2.0&quot;,
			&quot;dependencies&quot;: {
				&quot;mime&quot;: &quot;^3.0.0&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18.0.0&quot;
			}
		},
		&quot;node_modules/@cloudflare/unenv-preset&quot;: {
			&quot;version&quot;: &quot;2.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/unenv-preset/-/unenv-preset-2.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-nyzYnlZjjV5xT3LizahG1Iu6mnrCaxglJ04rZLpDwlDVDZ7v46lNsfxhV3A/xtfgQuSHmLnc6SVI+KwBpc3Lwg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT OR Apache-2.0&quot;,
			&quot;peerDependencies&quot;: {
				&quot;unenv&quot;: &quot;2.0.0-rc.14&quot;,
				&quot;workerd&quot;: &quot;^1.20250124.0&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;workerd&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/@cloudflare/vitest-pool-workers&quot;: {
			&quot;version&quot;: &quot;0.7.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/vitest-pool-workers/-/vitest-pool-workers-0.7.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-y5N2PXsuT1sjzSV03COtedET/nh3k6k8vmXfX01r8uXcw9hUZvafG5HoAiRfdrLmRpk/I7FS7D/qglPO13l/bg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;birpc&quot;: &quot;0.2.14&quot;,
				&quot;cjs-module-lexer&quot;: &quot;^1.2.3&quot;,
				&quot;devalue&quot;: &quot;^4.3.0&quot;,
				&quot;esbuild&quot;: &quot;0.17.19&quot;,
				&quot;miniflare&quot;: &quot;3.20250310.0&quot;,
				&quot;semver&quot;: &quot;^7.7.1&quot;,
				&quot;wrangler&quot;: &quot;3.114.1&quot;,
				&quot;zod&quot;: &quot;^3.22.3&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;@vitest/runner&quot;: &quot;2.0.x - 3.0.x&quot;,
				&quot;@vitest/snapshot&quot;: &quot;2.0.x - 3.0.x&quot;,
				&quot;vitest&quot;: &quot;2.0.x - 3.0.x&quot;
			}
		},
		&quot;node_modules/@cloudflare/vitest-pool-workers/node_modules/@cloudflare/kv-asset-handler&quot;: {
			&quot;version&quot;: &quot;0.3.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/kv-asset-handler/-/kv-asset-handler-0.3.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-YLPHc8yASwjNkmcDMQMY35yiWjoKAKnhUbPRszBRS0YgH+IXtsMp61j+yTcnCE3oO2DgP0U3iejLC8FTtKDC8Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT OR Apache-2.0&quot;,
			&quot;dependencies&quot;: {
				&quot;mime&quot;: &quot;^3.0.0&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16.13&quot;
			}
		},
		&quot;node_modules/@cloudflare/vitest-pool-workers/node_modules/wrangler&quot;: {
			&quot;version&quot;: &quot;3.114.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/wrangler/-/wrangler-3.114.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-GuS6SrnAZZDiNb20Vf2Ww0KCfnctHUEzi5GyML1i2brfQPI6BikgI/W/u6XDtYtah0OkbIWIiNJ+SdhWT7KEcw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT OR Apache-2.0&quot;,
			&quot;dependencies&quot;: {
				&quot;@cloudflare/kv-asset-handler&quot;: &quot;0.3.4&quot;,
				&quot;@cloudflare/unenv-preset&quot;: &quot;2.0.2&quot;,
				&quot;@esbuild-plugins/node-globals-polyfill&quot;: &quot;0.2.3&quot;,
				&quot;@esbuild-plugins/node-modules-polyfill&quot;: &quot;0.2.2&quot;,
				&quot;blake3-wasm&quot;: &quot;2.1.5&quot;,
				&quot;esbuild&quot;: &quot;0.17.19&quot;,
				&quot;miniflare&quot;: &quot;3.20250310.0&quot;,
				&quot;path-to-regexp&quot;: &quot;6.3.0&quot;,
				&quot;unenv&quot;: &quot;2.0.0-rc.14&quot;,
				&quot;workerd&quot;: &quot;1.20250310.0&quot;
			},
			&quot;bin&quot;: {
				&quot;wrangler&quot;: &quot;bin/wrangler.js&quot;,
				&quot;wrangler2&quot;: &quot;bin/wrangler.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16.17.0&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;fsevents&quot;: &quot;~2.3.2&quot;,
				&quot;sharp&quot;: &quot;^0.33.5&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;@cloudflare/workers-types&quot;: &quot;^4.20250310.0&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;@cloudflare/workers-types&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/@cloudflare/workerd-darwin-64&quot;: {
			&quot;version&quot;: &quot;1.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-darwin-64/-/workerd-darwin-64-1.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-LkLJO6F8lRNaCbK5sQCITi66SyCirDpffRuI5/5iILDJWQU4KVvAOKPvHrd4E5h/WDm9FGd22zMJwky7SxaNjg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/@cloudflare/workerd-darwin-arm64&quot;: {
			&quot;version&quot;: &quot;1.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-darwin-arm64/-/workerd-darwin-arm64-1.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-WythDJQbsU3Ii1hhA7pJZLBQlHezeYWAnaMnv3gS2Exj45oF8G4chFvrO7zCzjlcJXwSeBTtQRJqxw9AiUDhyA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/@cloudflare/workerd-linux-64&quot;: {
			&quot;version&quot;: &quot;1.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-linux-64/-/workerd-linux-64-1.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-LbP769tT4/5QBHSj4lCt99QIKTi6cU+wYhLfF7rEtYHBnZS2+nIw9xttAzxeERx/aFrU+mxLcYPFV8fUeVxGng==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/@cloudflare/workerd-linux-arm64&quot;: {
			&quot;version&quot;: &quot;1.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-linux-arm64/-/workerd-linux-arm64-1.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-FzWeKM6id20EMZACaDg0Kkvg1C4lvXZgLBXVI6h6xaXTNFReoyEp4v4eMrRTuja5ec5k+m5iGKjP4/bMWJp9ew==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/@cloudflare/workerd-windows-64&quot;: {
			&quot;version&quot;: &quot;1.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-windows-64/-/workerd-windows-64-1.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-04OgaDzm8/8nkjF3tovB+WywZLjSdAHCQT2omXKCwH3EDd1kpd8vvzE1pErtdIyKCOf9/sArY4BhPdxRj7ijlg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/@cspotcode/source-map-support&quot;: {
			&quot;version&quot;: &quot;0.8.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@jridgewell/trace-mapping&quot;: &quot;0.3.9&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@emnapi/runtime&quot;: {
			&quot;version&quot;: &quot;1.3.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.3.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-kEBmG8KyqtxJZv+ygbEim+KCGtIq1fC22Ms3S4ziXmYKm8uyoLX0MHONVKwp+9opg390VaKRNt4a7A9NwmpNhw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;tslib&quot;: &quot;^2.4.0&quot;
			}
		},
		&quot;node_modules/@esbuild-plugins/node-globals-polyfill&quot;: {
			&quot;version&quot;: &quot;0.2.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild-plugins/node-globals-polyfill/-/node-globals-polyfill-0.2.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-r3MIryXDeXDOZh7ih1l/yE9ZLORCd5e8vWg02azWRGj5SPTuoh69A2AIyn0Z31V/kHBfZ4HgWJ+OK3GTTwLmnw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;ISC&quot;,
			&quot;peerDependencies&quot;: {
				&quot;esbuild&quot;: &quot;*&quot;
			}
		},
		&quot;node_modules/@esbuild-plugins/node-modules-polyfill&quot;: {
			&quot;version&quot;: &quot;0.2.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild-plugins/node-modules-polyfill/-/node-modules-polyfill-0.2.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-LXV7QsWJxRuMYvKbiznh+U1ilIop3g2TeKRzUxOG5X3YITc8JyyTa90BmLwqqv0YnX4v32CSlG+vsziZp9dMvA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;ISC&quot;,
			&quot;dependencies&quot;: {
				&quot;escape-string-regexp&quot;: &quot;^4.0.0&quot;,
				&quot;rollup-plugin-node-polyfills&quot;: &quot;^0.2.1&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;esbuild&quot;: &quot;*&quot;
			}
		},
		&quot;node_modules/@esbuild/aix-ppc64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-kfYGy8IdzTGy+z0vFGvExZtxkFlA4zAxgKEahG9KE1ScBjpQnFsNOX8KTU5ojNru5ed5CVoJYXFtoxaq5nFbjQ==&quot;,
			&quot;cpu&quot;: [
				&quot;ppc64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;aix&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/@esbuild/android-arm&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-rIKddzqhmav7MSmoFCmDIb6e2W57geRsM94gV2l38fzhXMwq7hZoClug9USI2pFRGL06f4IOPHHpFNOkWieR8A==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/android-arm64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-KBMWvEZooR7+kzY0BtbTQn0OAYY7CsiydT63pVEaPtVYF0hXbUaOyZog37DKxK7NF3XacBJOpYT4adIJh+avxA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/android-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-uUTTc4xGNDT7YSArp/zbtmbhO0uEEK9/ETW29Wk1thYUJBz3IVnvgEiEwEa9IeLyvnpKrWK64Utw2bgUmDveww==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/darwin-arm64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-80wEoCfF/hFKM6WE1FyBHc9SfUblloAWx6FJkFWTWiCoht9Mc0ARGEM47e67W9rI09YoUxJL68WHfDRYEAvOhg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/darwin-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-IJM4JJsLhRYr9xdtLytPLSH9k/oxR3boaUIYiHkAawtwNOXKE8KoU8tMvryogdcT8AU+Bflmh81Xn6Q0vTZbQw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/freebsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-pBwbc7DufluUeGdjSU5Si+P3SoMF5DQ/F/UmTSb8HXO80ZEAJmrykPyzo1IfNbAoaqw48YRpv8shwd1NoI0jcQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/freebsd-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-4lu+n8Wk0XlajEhbEffdy2xy53dpR06SlzvhGByyg36qJw6Kpfk7cp45DR/62aPH9mtJRmIyrXAS5UWBrJT6TQ==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-arm&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-cdmT3KxjlOQ/gZ2cjfrQOtmhG4HJs6hhvm3mWSRDPtZ/lP5oe8FWceS10JaSJC13GBd4eH/haHnqf7hhGNLerA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-arm64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ct1Tg3WGwd3P+oZYqic+YZF4snNl2bsnMKRkb3ozHmnM0dGWuxcPTTntAF6bOP0Sp4x0PjSF+4uHQ1xvxfRKqg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-ia32&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-w4IRhSy1VbsNxHRQpeGCHEmibqdTUx61Vc38APcsRbuVgK0OPEnQ0YD39Brymn96mOx48Y2laBQGqgZ0j9w6SQ==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-loong64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-2iAngUbBPMq439a+z//gE+9WBldoMp1s5GWsUSgqHLzLJ9WoZLZhpwWuym0u0u/4XmZ3gpHmzV84PonE+9IIdQ==&quot;,
			&quot;cpu&quot;: [
				&quot;loong64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-mips64el&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-LKJltc4LVdMKHsrFe4MGNPp0hqDFA1Wpt3jE1gEyM3nKUvOiO//9PheZZHfYRfYl6AwdTH4aTcXSqBerX0ml4A==&quot;,
			&quot;cpu&quot;: [
				&quot;mips64el&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-ppc64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-/c/DGybs95WXNS8y3Ti/ytqETiW7EU44MEKuCAcpPto3YjQbyK3IQVKfF6nbghD7EcLUGl0NbiL5Rt5DMhn5tg==&quot;,
			&quot;cpu&quot;: [
				&quot;ppc64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-riscv64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-FC3nUAWhvFoutlhAkgHf8f5HwFWUL6bYdvLc/TTuxKlvLi3+pPzdZiFKSWz/PF30TB1K19SuCxDTI5KcqASJqA==&quot;,
			&quot;cpu&quot;: [
				&quot;riscv64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-s390x&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-IbFsFbxMWLuKEbH+7sTkKzL6NJmG2vRyy6K7JJo55w+8xDk7RElYn6xvXtDW8HCfoKBFK69f3pgBJSUSQPr+4Q==&quot;,
			&quot;cpu&quot;: [
				&quot;s390x&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/linux-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-68ngA9lg2H6zkZcyp22tsVt38mlhWde8l3eJLWkyLrp4HwMUr3c1s/M2t7+kHIhvMjglIBrFpncX1SzMckomGw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/netbsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-O96poM2XGhLtpTh+s4+nP7YCCAfb4tJNRVZHfIE7dgmax+yMP2WgMd2OecBuaATHKTHsLWHQeuaxMRnCsH8+5g==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;netbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/@esbuild/netbsd-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-CwFq42rXCR8TYIjIfpXCbRX0rp1jo6cPIUPSaWwzbVI4aOfX96OXY8M6KNmtPcg7QjYeDmN+DD0Wp3LaBOLf4Q==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;netbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/openbsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Na9T3szbXezdzM/Kfs3GcRQNjHzM6GzFBeU1/6IV/npKP5ORtp9zbQjvkDJ47s6BCgaAZnnnu/cY1x342+MvZg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;openbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/@esbuild/openbsd-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-cnq5brJYrSZ2CF6c35eCmviIN3k3RczmHz8eYaVlNasVqsNY+JKohZU5MKmaOI+KkllCdzOKKdPs762VCPC20g==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;openbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/sunos-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-vCRT7yP3zX+bKWFeP/zdS6SqdWB8OIpaRq/mbXQxTGHnIxspRtigpkUcDMlSCOejlHowLqII7K2JKevwyRP2rg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;sunos&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/win32-arm64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-yYx+8jwowUstVdorcMdNlzklLYhPxjniHWFKgRqH7IFlUEa0Umu3KuYplf1HUZZ422e3NU9F4LGb+4O0Kdcaag==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/win32-ia32&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-eggDKanJszUtCdlVs0RB+h35wNlb5v4TWEkq4vZcmVt5u/HiDZrTXe2bWFQUez3RgNHwx/x4sk5++4NSSicKkw==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@esbuild/win32-x64&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-lAhycmKnVOuRYNtRtatQR1LPQf2oYCkRGkSFnseDAKPl8lu5SOsK/e1sXe5a0Pc5kHIHe6P2I/ilntNv2xf3cA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/@fastify/busboy&quot;: {
			&quot;version&quot;: &quot;2.1.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@fastify/busboy/-/busboy-2.1.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-vBZP4NlzfOlerQTnba4aqZoMhE/a9HY7HRqoOPaETQcSQuWEIyZMHGfVu6w9wGtGK5fED5qRs2DteVCjOH60sA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=14&quot;
			}
		},
		&quot;node_modules/@img/sharp-darwin-arm64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-UT4p+iz/2H4twwAoLCqfA9UH5pI6DggwKEGuaPy7nCVQ8ZsiY5PIcrRvD1DzuY3qYL07NtIQcWnBSY/heikIFQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-darwin-arm64&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-darwin-x64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-fyHac4jIc1ANYGRDxtiqelIbdWkIuQaI84Mv45KvGRRxSAa7o7d1ZKAOBaYbnepLC1WqxfpimdeWfvqqSGwR2Q==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-darwin-x64&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-darwin-arm64&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-XblONe153h0O2zuFfTAbQYAX2JhYmDHeWikp1LM9Hul9gVPjFY427k6dFEcOL72O01QxQsWi761svJ/ev9xEDg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-darwin-x64&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-xnGR8YuZYfJGmWPvmlunFaWJsb9T/AO2ykoP3Fz/0X5XV2aoYBPkX6xqCQvUTKKiLddarLaxpzNe+b1hjeWHAQ==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-linux-arm&quot;: {
			&quot;version&quot;: &quot;1.0.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.0.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-gvcC4ACAOPRNATg/ov8/MnbxFDJqf/pDePbBnuBDcjsI8PssmjoKMAz4LtLaVi+OnSb5FK/yIOamqDwGmXW32g==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-linux-arm64&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-9B+taZ8DlyyqzZQnoeIvDVR/2F4EbMepXMc/NdVbkzsJbzkUjhXv/70GQJ7tdLA4YJgNP25zukcxpX2/SueNrA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-linux-s390x&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-u7Wz6ntiSSgGSGcjZ55im6uvTrOxSIS8/dgoVMoiGE9I6JAfU50yH5BoDlYA1tcuGS7g/QNtetJnxA6QEsCVTA==&quot;,
			&quot;cpu&quot;: [
				&quot;s390x&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-linux-x64&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-MmWmQ3iPFZr0Iev+BAgVMb3ZyC4KeFc3jFxnNbEPas60e1cIfevbtuyf9nDGIzOaW9PdnDciJm+wFFaTlj5xYw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-linuxmusl-arm64&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-9Ti+BbTYDcsbp4wfYib8Ctm1ilkugkA/uscUn6UXK1ldpC1JjiXbLfFZtRlBhjPZ5o1NCLiDbg8fhUPKStHoTA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-libvips-linuxmusl-x64&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-viYN1KX9m+/hGkJtvYYp+CCLgnJXwiQB39damAO7WMdKWlIhmYTfHjwSbQeUK/20vY154mwezd9HflVFM1wVSw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-linux-arm&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-JTS1eldqZbJxjvKaAkxhZmBqPRGmxgu+qFKSInv8moZ2AmT5Yib3EQ1c6gp493HvrvV8QgdOXdyaIBrhvFhBMQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-linux-arm&quot;: &quot;1.0.5&quot;
			}
		},
		&quot;node_modules/@img/sharp-linux-arm64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-JMVv+AMRyGOHtO1RFBiJy/MBsgz0x4AWrT6QoEVVTyh1E39TrCUpTRI7mx9VksGX4awWASxqCYLCV4wBZHAYxA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-linux-arm64&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-linux-s390x&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-y/5PCd+mP4CA/sPDKl2961b+C9d+vPAveS33s6Z3zfASk2j5upL6fXVPZi7ztePZ5CuH+1kW8JtvxgbuXHRa4Q==&quot;,
			&quot;cpu&quot;: [
				&quot;s390x&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-linux-s390x&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-linux-x64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-opC+Ok5pRNAzuvq1AG0ar+1owsu842/Ab+4qvU879ippJBHvyY5n2mxF1izXqkPYlGuP/M556uh53jRLJmzTWA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-linux-x64&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-linuxmusl-arm64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-XrHMZwGQGvJg2V/oRSUfSAfjfPxO+4DkiRh6p2AFjLQztWUuY/o8Mq0eMQVIY7HJ1CDQUJlxGGZRw1a5bqmd1g==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-linuxmusl-arm64&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-linuxmusl-x64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-WT+d/cgqKkkKySYmqoZ8y3pxx7lx9vVejxW/W4DOFMYVSkErR+w7mf2u8m/y4+xHe7yY9DAXQMWQhpnMuFfScw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-libvips-linuxmusl-x64&quot;: &quot;1.0.4&quot;
			}
		},
		&quot;node_modules/@img/sharp-wasm32&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ykUW4LVGaMcU9lu9thv85CbRMAwfeadCJHRsg2GmeRa/cJxsVY9Rbd57JcMxBkKHag5U/x7TSBpScF4U8ElVzg==&quot;,
			&quot;cpu&quot;: [
				&quot;wasm32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0 AND LGPL-3.0-or-later AND MIT&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;@emnapi/runtime&quot;: &quot;^1.2.0&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-win32-ia32&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-T36PblLaTwuVJ/zw/LaH0PdZkRz5rd3SmMHX8GSmR7vtNSP5Z6bQkExdSK7xGWyxLw4sUknBuugTelgw2faBbQ==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0 AND LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@img/sharp-win32-x64&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-MpY/o8/8kj+EcnxwvrP4aTJSWw/aZ7JIGR4aBeZkZw5B7/Jn+tY9/VNwtcoGmdT7GfggGIU4kygOMSbYnOrAbg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0 AND LGPL-3.0-or-later&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			}
		},
		&quot;node_modules/@jridgewell/resolve-uri&quot;: {
			&quot;version&quot;: &quot;3.1.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=6.0.0&quot;
			}
		},
		&quot;node_modules/@jridgewell/sourcemap-codec&quot;: {
			&quot;version&quot;: &quot;1.5.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/@jridgewell/trace-mapping&quot;: {
			&quot;version&quot;: &quot;0.3.9&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@jridgewell/resolve-uri&quot;: &quot;^3.0.3&quot;,
				&quot;@jridgewell/sourcemap-codec&quot;: &quot;^1.4.10&quot;
			}
		},
		&quot;node_modules/@rollup/rollup-android-arm-eabi&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-uYQ2WfPaqz5QtVgMxfN6NpLD+no0MYHDBywl7itPYd3K5TjjSghNKmX8ic9S8NU8w81NVhJv/XojcHptRly7qQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-android-arm64&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-FtKddj9XZudurLhdJnBl9fl6BwCJ3ky8riCXjEw3/UIbjmIY58ppWwPEvU3fNu+W7FUsAsB1CdH+7EQE6CXAPA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-darwin-arm64&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Uk+GjOJR6CY844/q6r5DR/6lkPFOw0hjfOIzVx22THJXMxktXG6CbejseJFznU8vHcEBLpiXKY3/6xc+cBm65Q==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-darwin-x64&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-3IrHjfAS6Vkp+5bISNQnPogRAW5GAV1n+bNCrDwXmfMHbPl5EhTmWtfmwlJxFRUCBZ+tZ/OxDyU08aF6NI/N5Q==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-freebsd-arm64&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-sxjoD/6F9cDLSELuLNnY0fOrM9WA0KrM0vWm57XhrIMf5FGiN8D0l7fn+bpUeBSU7dCgPV2oX4zHAsAXyHFGcQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-freebsd-x64&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-2mpHCeRuD1u/2kruUiHSsnjWtHjqVbzhBkNVQ1aVD63CcexKVcQGwJ2g5VphOd84GvxfSvnnlEyBtQCE5hxVVw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-arm-gnueabihf&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-mrA0v3QMy6ZSvEuLs0dMxcO2LnaCONs1Z73GUDBHWbY8tFFocM6yl7YyMu7rz4zS81NDSqhrUuolyZXGi8TEqg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-arm-musleabihf&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-DnYhhzcvTAKNexIql8pFajr0PiDGrIsBYPRvCKlA5ixSS3uwo/CWNZxB09jhIapEIg945KOzcYEAGGSmTSpk7A==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-arm64-gnu&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-uagpnH2M2g2b5iLsCTZ35CL1FgyuzzJQ8L9VtlJ+FckBXroTwNOaD0z0/UF+k5K3aNQjbm8LIVpxykUOQt1m/A==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-arm64-musl&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-XQxVOCd6VJeHQA/7YcqyV0/88N6ysSVzRjJ9I9UA/xXpEsjvAgDTgH3wQYz5bmr7SPtVK2TsP2fQ2N9L4ukoUg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-loongarch64-gnu&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-5pMT5PzfgwcXEwOaSrqVsz/LvjDZt+vQ8RT/70yhPU06PTuq8WaHhfT1LW+cdD7mW6i/J5/XIkX/1tCAkh1W6g==&quot;,
			&quot;cpu&quot;: [
				&quot;loong64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-powerpc64le-gnu&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-c+zkcvbhbXF98f4CtEIP1EBA/lCic5xB0lToneZYvMeKu5Kamq3O8gqrxiYYLzlZH6E3Aq+TSW86E4ay8iD8EA==&quot;,
			&quot;cpu&quot;: [
				&quot;ppc64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-riscv64-gnu&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-s91fuAHdOwH/Tad2tzTtPX7UZyytHIRR6V4+2IGlV0Cej5rkG0R61SX4l4y9sh0JBibMiploZx3oHKPnQBKe4g==&quot;,
			&quot;cpu&quot;: [
				&quot;riscv64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-s390x-gnu&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-hQRkPQPLYJZYGP+Hj4fR9dDBMIM7zrzJDWFEMPdTnTy95Ljnv0/4w/ixFw3pTBMEuuEuoqtBINYND4M7ujcuQw==&quot;,
			&quot;cpu&quot;: [
				&quot;s390x&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-x64-gnu&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Pim1T8rXOri+0HmV4CdKSGrqcBWX0d1HoPnQ0uw0bdp1aP5SdQVNBy8LjYncvnLgu3fnnCt17xjWGd4cqh8/hA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-linux-x64-musl&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-QysqXzYiDvQWfUiTm8XmJNO2zm9yC9P/2Gkrwg2dH9cxotQzunBHYr6jk4SujCTqnfGxduOmQcI7c2ryuW8XVg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-win32-arm64-msvc&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-OUOlGqPkVJCdJETKOCEf1mw848ZyJ5w50/rZ/3IBQVdLfR5jk/6Sr5m3iO2tdPgwo0x7VcncYuOvMhBWZq8ayg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-win32-ia32-msvc&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-2/lsgejMrtwQe44glq7AFFHLfJBPafpsTa6JvP2NGef/ifOa4KBoglVf7AKN7EV9o32evBPRqfg96fEHzWo5kw==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			]
		},
		&quot;node_modules/@rollup/rollup-win32-x64-msvc&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-PIQeY5XDkrOysbQblSW7v3l1MDZzkTEzAfTPkj5VAu3FW8fS4ynyLg2sINp0fp3SjZ8xkRYpLqoKcYqAkhU1dw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			]
		},
		&quot;node_modules/@types/estree&quot;: {
			&quot;version&quot;: &quot;1.0.6&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/@vitest/expect&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/expect/-/expect-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Xu6TTIavTvSSS6LZaA3EebWFr6tsoXPetOWNMOlc7LO88QVVBwq2oQWBoDiLCN6YTvNYsGSjqOO8CAdjom5DCQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@vitest/spy&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/utils&quot;: &quot;3.0.8&quot;,
				&quot;chai&quot;: &quot;^5.2.0&quot;,
				&quot;tinyrainbow&quot;: &quot;^2.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/@vitest/mocker&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/mocker/-/mocker-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-n3LjS7fcW1BCoF+zWZxG7/5XvuYH+lsFg+BDwwAz0arIwHQJFUEsKBQ0BLU49fCxuM/2HSeBPHQD8WjgrxMfow==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@vitest/spy&quot;: &quot;3.0.8&quot;,
				&quot;estree-walker&quot;: &quot;^3.0.3&quot;,
				&quot;magic-string&quot;: &quot;^0.30.17&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;msw&quot;: &quot;^2.4.9&quot;,
				&quot;vite&quot;: &quot;^5.0.0 || ^6.0.0&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;msw&quot;: {
					&quot;optional&quot;: true
				},
				&quot;vite&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/@vitest/pretty-format&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-BNqwbEyitFhzYMYHUVbIvepOyeQOSFA/NeJMIP9enMntkkxLgOcgABH6fjyXG85ipTgvero6noreavGIqfJcIg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;tinyrainbow&quot;: &quot;^2.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/@vitest/runner&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/runner/-/runner-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-c7UUw6gEcOzI8fih+uaAXS5DwjlBaCJUo7KJ4VvJcjL95+DSR1kova2hFuRt3w41KZEFcOEiq098KkyrjXeM5w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@vitest/utils&quot;: &quot;3.0.8&quot;,
				&quot;pathe&quot;: &quot;^2.0.3&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/@vitest/snapshot&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/snapshot/-/snapshot-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-x8IlMGSEMugakInj44nUrLSILh/zy1f2/BgH0UeHpNyOocG18M9CWVIFBaXPt8TrqVZWmcPjwfG/ht5tnpba8A==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@vitest/pretty-format&quot;: &quot;3.0.8&quot;,
				&quot;magic-string&quot;: &quot;^0.30.17&quot;,
				&quot;pathe&quot;: &quot;^2.0.3&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/@vitest/spy&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/spy/-/spy-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-MR+PzJa+22vFKYb934CejhR4BeRpMSoxkvNoDit68GQxRLSf11aT6CTj3XaqUU9rxgWJFnqicN/wxw6yBRkI1Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;tinyspy&quot;: &quot;^3.0.2&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/@vitest/utils&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@vitest/utils/-/utils-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-nkBC3aEhfX2PdtQI/QwAWp8qZWwzASsU4Npbcd5RdMPBSSLCpkZp52P3xku3s3uA0HIEhGvEcF8rNkBsz9dQ4Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@vitest/pretty-format&quot;: &quot;3.0.8&quot;,
				&quot;loupe&quot;: &quot;^3.1.3&quot;,
				&quot;tinyrainbow&quot;: &quot;^2.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/acorn&quot;: {
			&quot;version&quot;: &quot;8.14.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/acorn/-/acorn-8.14.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;acorn&quot;: &quot;bin/acorn&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=0.4.0&quot;
			}
		},
		&quot;node_modules/acorn-walk&quot;: {
			&quot;version&quot;: &quot;8.3.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-cjkyv4OtNCIeqhHrfS81QWXoCBPExR/J62oyEqepVw8WaQeSqpW2uhuLPh1m9eWhDuOo/jUXVTlifvesOWp/4A==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=0.4.0&quot;
			}
		},
		&quot;node_modules/as-table&quot;: {
			&quot;version&quot;: &quot;1.0.55&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/as-table/-/as-table-1.0.55.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-xvsWESUJn0JN421Xb9MQw6AsMHRCUknCe0Wjlxvjud80mU4E6hQf1A6NzQKcYNmYw62MfzEtXc+badstZP3JpQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;printable-characters&quot;: &quot;^1.0.42&quot;
			}
		},
		&quot;node_modules/assertion-error&quot;: {
			&quot;version&quot;: &quot;2.0.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/birpc&quot;: {
			&quot;version&quot;: &quot;0.2.14&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/birpc/-/birpc-0.2.14.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-37FHE8rqsYM5JEKCnXFyHpBCzvgHEExwVVTq+nUmloInU7l8ezD1TpOhKpS8oe1DTYFqEK27rFZVKG43oTqXRA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/sponsors/antfu&quot;
			}
		},
		&quot;node_modules/blake3-wasm&quot;: {
			&quot;version&quot;: &quot;2.1.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/blake3-wasm/-/blake3-wasm-2.1.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-F1+K8EbfOZE49dtoPtmxUQrpXaBIl3ICvasLh+nJta0xkz+9kF/7uet9fLnwKqhDrmj6g+6K3Tw9yQPUg2ka5g==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/cac&quot;: {
			&quot;version&quot;: &quot;6.7.14&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/cac/-/cac-6.7.14.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=8&quot;
			}
		},
		&quot;node_modules/chai&quot;: {
			&quot;version&quot;: &quot;5.2.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/chai/-/chai-5.2.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-mCuXncKXk5iCLhfhwTc0izo0gtEmpz5CtG2y8GiOINBlMVS6v8TMRc5TaLWKS6692m9+dVVfzgeVxR5UxWHTYw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;assertion-error&quot;: &quot;^2.0.1&quot;,
				&quot;check-error&quot;: &quot;^2.1.1&quot;,
				&quot;deep-eql&quot;: &quot;^5.0.1&quot;,
				&quot;loupe&quot;: &quot;^3.1.0&quot;,
				&quot;pathval&quot;: &quot;^2.0.0&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			}
		},
		&quot;node_modules/check-error&quot;: {
			&quot;version&quot;: &quot;2.1.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/check-error/-/check-error-2.1.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;= 16&quot;
			}
		},
		&quot;node_modules/cjs-module-lexer&quot;: {
			&quot;version&quot;: &quot;1.4.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/color&quot;: {
			&quot;version&quot;: &quot;4.2.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/color/-/color-4.2.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;color-convert&quot;: &quot;^2.0.1&quot;,
				&quot;color-string&quot;: &quot;^1.9.0&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12.5.0&quot;
			}
		},
		&quot;node_modules/color-convert&quot;: {
			&quot;version&quot;: &quot;2.0.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;color-name&quot;: &quot;~1.1.4&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=7.0.0&quot;
			}
		},
		&quot;node_modules/color-name&quot;: {
			&quot;version&quot;: &quot;1.1.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true
		},
		&quot;node_modules/color-string&quot;: {
			&quot;version&quot;: &quot;1.9.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;color-name&quot;: &quot;^1.0.0&quot;,
				&quot;simple-swizzle&quot;: &quot;^0.2.2&quot;
			}
		},
		&quot;node_modules/cookie&quot;: {
			&quot;version&quot;: &quot;0.5.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;= 0.6&quot;
			}
		},
		&quot;node_modules/data-uri-to-buffer&quot;: {
			&quot;version&quot;: &quot;2.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-2.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ND9qDTLc6diwj+Xe5cdAgVTbLVdXbtxTJRXRhli8Mowuaan+0EJOtdqJ0QCHNSSPyoXGx9HX2/VMnKeC34AChA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/debug&quot;: {
			&quot;version&quot;: &quot;4.4.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/debug/-/debug-4.4.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;ms&quot;: &quot;^2.1.3&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=6.0&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;supports-color&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/deep-eql&quot;: {
			&quot;version&quot;: &quot;5.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=6&quot;
			}
		},
		&quot;node_modules/defu&quot;: {
			&quot;version&quot;: &quot;6.1.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/defu/-/defu-6.1.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-mEQCMmwJu317oSz8CwdIOdwf3xMif1ttiM8LTufzc3g6kR+9Pe236twL8j3IYT1F7GfRgGcW6MWxzZjLIkuHIg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/detect-libc&quot;: {
			&quot;version&quot;: &quot;2.0.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-bwy0MGW55bG41VqxxypOsdSdGqLwXPI/focwgTYCFMbdUiBAxLg9CFzG08sz2aqzknwiX7Hkl0bQENjg8iLByw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=8&quot;
			}
		},
		&quot;node_modules/devalue&quot;: {
			&quot;version&quot;: &quot;4.3.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/devalue/-/devalue-4.3.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-UH8EL6H2ifcY8TbD2QsxwCC/pr5xSwPvv85LrLXVihmHVC3T3YqTCIwnR5ak0yO1KYqlxrPVOA/JVZJYPy2ATg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/es-module-lexer&quot;: {
			&quot;version&quot;: &quot;1.6.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.6.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-qqnD1yMU6tk/jnaMosogGySTZP8YtUgAffA9nMN+E/rjxcfRQ6IEk7IiozUjgxKoFHBGjTLnrHB/YC45r/59EQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/esbuild&quot;: {
			&quot;version&quot;: &quot;0.17.19&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/esbuild/-/esbuild-0.17.19.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-XQ0jAPFkK/u3LcVRcvVHQcTIqD6E2H1fvZMA5dQPSOWb3suUbWbfbRf94pjc0bNzRYLfIrDRQXr7X+LHIm5oHw==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;esbuild&quot;: &quot;bin/esbuild&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@esbuild/android-arm&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/android-arm64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/android-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/darwin-arm64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/darwin-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/freebsd-arm64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/freebsd-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-arm&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-arm64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-ia32&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-loong64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-mips64el&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-ppc64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-riscv64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-s390x&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/linux-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/netbsd-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/openbsd-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/sunos-x64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/win32-arm64&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/win32-ia32&quot;: &quot;0.17.19&quot;,
				&quot;@esbuild/win32-x64&quot;: &quot;0.17.19&quot;
			}
		},
		&quot;node_modules/escape-string-regexp&quot;: {
			&quot;version&quot;: &quot;4.0.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=10&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/sponsors/sindresorhus&quot;
			}
		},
		&quot;node_modules/estree-walker&quot;: {
			&quot;version&quot;: &quot;3.0.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@types/estree&quot;: &quot;^1.0.0&quot;
			}
		},
		&quot;node_modules/exit-hook&quot;: {
			&quot;version&quot;: &quot;2.2.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/exit-hook/-/exit-hook-2.2.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-eNTPlAD67BmP31LDINZ3U7HSF8l57TxOY2PmBJ1shpCvpnxBF93mWCE8YHBnXs8qiUZJc9WDcWIeC3a2HIAMfw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=6&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/sponsors/sindresorhus&quot;
			}
		},
		&quot;node_modules/expect-type&quot;: {
			&quot;version&quot;: &quot;1.2.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/expect-type/-/expect-type-1.2.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-80F22aiJ3GLyVnS/B3HzgR6RelZVumzj9jkL0Rhz4h0xYbNW9PjlQz5h3J/SShErbXBc295vseR4/MIbVmUbeA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=12.0.0&quot;
			}
		},
		&quot;node_modules/exsolve&quot;: {
			&quot;version&quot;: &quot;1.0.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/exsolve/-/exsolve-1.0.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-xsZH6PXaER4XoV+NiT7JHp1bJodJVT+cxeSH1G0f0tlT0lJqYuHUP3bUx2HtfTDvOagMINYp8rsqusxud3RXhw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/fsevents&quot;: {
			&quot;version&quot;: &quot;2.3.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^8.16.0 || ^10.6.0 || &gt;=11.0.0&quot;
			}
		},
		&quot;node_modules/get-source&quot;: {
			&quot;version&quot;: &quot;2.0.12&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/get-source/-/get-source-2.0.12.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-X5+4+iD+HoSeEED+uwrQ07BOQr0kEDFMVqqpBuI+RaZBpBpHCuXxo70bjar6f0b0u/DQJsJ7ssurpP0V60Az+w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Unlicense&quot;,
			&quot;dependencies&quot;: {
				&quot;data-uri-to-buffer&quot;: &quot;^2.0.0&quot;,
				&quot;source-map&quot;: &quot;^0.6.1&quot;
			}
		},
		&quot;node_modules/glob-to-regexp&quot;: {
			&quot;version&quot;: &quot;0.4.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;BSD-2-Clause&quot;
		},
		&quot;node_modules/is-arrayish&quot;: {
			&quot;version&quot;: &quot;0.3.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true
		},
		&quot;node_modules/loupe&quot;: {
			&quot;version&quot;: &quot;3.1.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/loupe/-/loupe-3.1.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-kkIp7XSkP78ZxJEsSxW3712C6teJVoeHHwgo9zJ380de7IYyJ2ISlxojcH2pC5OFLewESmnRi/+XCDIEEVyoug==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/magic-string&quot;: {
			&quot;version&quot;: &quot;0.30.17&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@jridgewell/sourcemap-codec&quot;: &quot;^1.5.0&quot;
			}
		},
		&quot;node_modules/mime&quot;: {
			&quot;version&quot;: &quot;3.0.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/mime/-/mime-3.0.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;mime&quot;: &quot;cli.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=10.0.0&quot;
			}
		},
		&quot;node_modules/miniflare&quot;: {
			&quot;version&quot;: &quot;3.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/miniflare/-/miniflare-3.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-TQAxoo2ZiQYjiOJoK3bbcyjKD/u1E3akYOeSHc2Zcp1sLVydrgzSjmxtrn65/3BfDIrUgfYHyy9wspT6wzBy/A==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@cspotcode/source-map-support&quot;: &quot;0.8.1&quot;,
				&quot;acorn&quot;: &quot;8.14.0&quot;,
				&quot;acorn-walk&quot;: &quot;8.3.2&quot;,
				&quot;exit-hook&quot;: &quot;2.2.1&quot;,
				&quot;glob-to-regexp&quot;: &quot;0.4.1&quot;,
				&quot;stoppable&quot;: &quot;1.1.0&quot;,
				&quot;undici&quot;: &quot;^5.28.5&quot;,
				&quot;workerd&quot;: &quot;1.20250310.0&quot;,
				&quot;ws&quot;: &quot;8.18.0&quot;,
				&quot;youch&quot;: &quot;3.2.3&quot;,
				&quot;zod&quot;: &quot;3.22.3&quot;
			},
			&quot;bin&quot;: {
				&quot;miniflare&quot;: &quot;bootstrap.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16.13&quot;
			}
		},
		&quot;node_modules/miniflare/node_modules/zod&quot;: {
			&quot;version&quot;: &quot;3.22.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/zod/-/zod-3.22.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-EjIevzuJRiRPbVH4mGc8nApb/lVLKVpmUhAaR5R5doKGfAnGJ6Gr3CViAVjP+4FWSxCsybeWQdcgCtbX+7oZug==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/sponsors/colinhacks&quot;
			}
		},
		&quot;node_modules/ms&quot;: {
			&quot;version&quot;: &quot;2.1.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/ms/-/ms-2.1.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/mustache&quot;: {
			&quot;version&quot;: &quot;4.2.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;mustache&quot;: &quot;bin/mustache&quot;
			}
		},
		&quot;node_modules/nanoid&quot;: {
			&quot;version&quot;: &quot;3.3.9&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/nanoid/-/nanoid-3.3.9.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-SppoicMGpZvbF1l3z4x7No3OlIjP7QJvC9XR7AhZr1kL133KHnKPztkKDc+Ir4aJ/1VhTySrtKhrsycmrMQfvg==&quot;,
			&quot;dev&quot;: true,
			&quot;funding&quot;: [
				{
					&quot;type&quot;: &quot;github&quot;,
					&quot;url&quot;: &quot;https://github.com/sponsors/ai&quot;
				}
			],
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;nanoid&quot;: &quot;bin/nanoid.cjs&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^10 || ^12 || ^13.7 || ^14 || &gt;=15.0.1&quot;
			}
		},
		&quot;node_modules/ohash&quot;: {
			&quot;version&quot;: &quot;2.0.11&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/ohash/-/ohash-2.0.11.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-RdR9FQrFwNBNXAr4GixM8YaRZRJ5PUWbKYbE5eOsrwAjJW0q2REGcf79oYPsLyskQCZG1PLN+S/K1V00joZAoQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/path-to-regexp&quot;: {
			&quot;version&quot;: &quot;6.3.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.3.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Yhpw4T9C6hPpgPeA28us07OJeqZ5EzQTkbfwuhsUg0c237RomFoETJgmp2sa3F/41gfLE6G5cqcYwznmeEeOlQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/pathe&quot;: {
			&quot;version&quot;: &quot;2.0.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/pathval&quot;: {
			&quot;version&quot;: &quot;2.0.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/pathval/-/pathval-2.0.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;= 14.16&quot;
			}
		},
		&quot;node_modules/picocolors&quot;: {
			&quot;version&quot;: &quot;1.1.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;ISC&quot;
		},
		&quot;node_modules/postcss&quot;: {
			&quot;version&quot;: &quot;8.5.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==&quot;,
			&quot;dev&quot;: true,
			&quot;funding&quot;: [
				{
					&quot;type&quot;: &quot;opencollective&quot;,
					&quot;url&quot;: &quot;https://opencollective.com/postcss/&quot;
				},
				{
					&quot;type&quot;: &quot;tidelift&quot;,
					&quot;url&quot;: &quot;https://tidelift.com/funding/github/npm/postcss&quot;
				},
				{
					&quot;type&quot;: &quot;github&quot;,
					&quot;url&quot;: &quot;https://github.com/sponsors/ai&quot;
				}
			],
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;nanoid&quot;: &quot;^3.3.8&quot;,
				&quot;picocolors&quot;: &quot;^1.1.1&quot;,
				&quot;source-map-js&quot;: &quot;^1.2.1&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^10 || ^12 || &gt;=14&quot;
			}
		},
		&quot;node_modules/printable-characters&quot;: {
			&quot;version&quot;: &quot;1.0.42&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/printable-characters/-/printable-characters-1.0.42.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-dKp+C4iXWK4vVYZmYSd0KBH5F/h1HoZRsbJ82AVKRO3PEo8L4lBS/vLwhVtpwwuYcoIsVY+1JYKR268yn480uQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Unlicense&quot;
		},
		&quot;node_modules/rollup&quot;: {
			&quot;version&quot;: &quot;4.35.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/rollup/-/rollup-4.35.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-kg6oI4g+vc41vePJyO6dHt/yl0Rz3Thv0kJeVQ3D1kS3E5XSuKbPc29G4IpT/Kv1KQwgHVcN+HtyS+HYLNSvQg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@types/estree&quot;: &quot;1.0.6&quot;
			},
			&quot;bin&quot;: {
				&quot;rollup&quot;: &quot;dist/bin/rollup&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18.0.0&quot;,
				&quot;npm&quot;: &quot;&gt;=8.0.0&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@rollup/rollup-android-arm-eabi&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-android-arm64&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-darwin-arm64&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-darwin-x64&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-freebsd-arm64&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-freebsd-x64&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-arm-gnueabihf&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-arm-musleabihf&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-arm64-gnu&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-arm64-musl&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-loongarch64-gnu&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-powerpc64le-gnu&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-riscv64-gnu&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-s390x-gnu&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-x64-gnu&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-linux-x64-musl&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-win32-arm64-msvc&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-win32-ia32-msvc&quot;: &quot;4.35.0&quot;,
				&quot;@rollup/rollup-win32-x64-msvc&quot;: &quot;4.35.0&quot;,
				&quot;fsevents&quot;: &quot;~2.3.2&quot;
			}
		},
		&quot;node_modules/rollup-plugin-inject&quot;: {
			&quot;version&quot;: &quot;3.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/rollup-plugin-inject/-/rollup-plugin-inject-3.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ptg9PQwzs3orn4jkgXJ74bfs5vYz1NCZlSQMBUA0wKcGp5i5pA1AO3fOUEte8enhGUC+iapTCzEWw2jEFFUO/w==&quot;,
			&quot;deprecated&quot;: &quot;This package has been deprecated and is no longer maintained. Please use @rollup/plugin-inject.&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;estree-walker&quot;: &quot;^0.6.1&quot;,
				&quot;magic-string&quot;: &quot;^0.25.3&quot;,
				&quot;rollup-pluginutils&quot;: &quot;^2.8.1&quot;
			}
		},
		&quot;node_modules/rollup-plugin-inject/node_modules/estree-walker&quot;: {
			&quot;version&quot;: &quot;0.6.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/estree-walker/-/estree-walker-0.6.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-SqmZANLWS0mnatqbSfRP5g8OXZC12Fgg1IwNtLsyHDzJizORW4khDfjPqJZsemPWBB2uqykUah5YpQ6epsqC/w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/rollup-plugin-inject/node_modules/magic-string&quot;: {
			&quot;version&quot;: &quot;0.25.9&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;sourcemap-codec&quot;: &quot;^1.4.8&quot;
			}
		},
		&quot;node_modules/rollup-plugin-node-polyfills&quot;: {
			&quot;version&quot;: &quot;0.2.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/rollup-plugin-node-polyfills/-/rollup-plugin-node-polyfills-0.2.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-4kCrKPTJ6sK4/gLL/U5QzVT8cxJcofO0OU74tnB19F40cmuAKSzH5/siithxlofFEjwvw1YAhPmbvGNA6jEroA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;rollup-plugin-inject&quot;: &quot;^3.0.0&quot;
			}
		},
		&quot;node_modules/rollup-pluginutils&quot;: {
			&quot;version&quot;: &quot;2.8.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/rollup-pluginutils/-/rollup-pluginutils-2.8.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-EEp9NhnUkwY8aif6bxgovPHMoMoNr2FulJziTndpt5H9RdwC47GSGuII9XxpSdzVGM0GWrNPHV6ie1LTNJPaLQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;estree-walker&quot;: &quot;^0.6.1&quot;
			}
		},
		&quot;node_modules/rollup-pluginutils/node_modules/estree-walker&quot;: {
			&quot;version&quot;: &quot;0.6.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/estree-walker/-/estree-walker-0.6.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-SqmZANLWS0mnatqbSfRP5g8OXZC12Fgg1IwNtLsyHDzJizORW4khDfjPqJZsemPWBB2uqykUah5YpQ6epsqC/w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/semver&quot;: {
			&quot;version&quot;: &quot;7.7.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/semver/-/semver-7.7.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;ISC&quot;,
			&quot;bin&quot;: {
				&quot;semver&quot;: &quot;bin/semver.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=10&quot;
			}
		},
		&quot;node_modules/sharp&quot;: {
			&quot;version&quot;: &quot;0.33.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/sharp/-/sharp-0.33.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-haPVm1EkS9pgvHrQ/F3Xy+hgcuMV0Wm9vfIBSiwZ05k+xgb0PkBQpGsAA/oWdDobNaZTH5ppvHtzCFbnSEwHVw==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;color&quot;: &quot;^4.2.3&quot;,
				&quot;detect-libc&quot;: &quot;^2.0.3&quot;,
				&quot;semver&quot;: &quot;^7.6.3&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.17.0 || ^20.3.0 || &gt;=21.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/libvips&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@img/sharp-darwin-arm64&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-darwin-x64&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-libvips-darwin-arm64&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-libvips-darwin-x64&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-libvips-linux-arm&quot;: &quot;1.0.5&quot;,
				&quot;@img/sharp-libvips-linux-arm64&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-libvips-linux-s390x&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-libvips-linux-x64&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-libvips-linuxmusl-arm64&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-libvips-linuxmusl-x64&quot;: &quot;1.0.4&quot;,
				&quot;@img/sharp-linux-arm&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-linux-arm64&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-linux-s390x&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-linux-x64&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-linuxmusl-arm64&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-linuxmusl-x64&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-wasm32&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-win32-ia32&quot;: &quot;0.33.5&quot;,
				&quot;@img/sharp-win32-x64&quot;: &quot;0.33.5&quot;
			}
		},
		&quot;node_modules/siginfo&quot;: {
			&quot;version&quot;: &quot;2.0.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;ISC&quot;
		},
		&quot;node_modules/simple-swizzle&quot;: {
			&quot;version&quot;: &quot;0.2.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;dependencies&quot;: {
				&quot;is-arrayish&quot;: &quot;^0.3.1&quot;
			}
		},
		&quot;node_modules/source-map&quot;: {
			&quot;version&quot;: &quot;0.6.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;BSD-3-Clause&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=0.10.0&quot;
			}
		},
		&quot;node_modules/source-map-js&quot;: {
			&quot;version&quot;: &quot;1.2.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;BSD-3-Clause&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=0.10.0&quot;
			}
		},
		&quot;node_modules/sourcemap-codec&quot;: {
			&quot;version&quot;: &quot;1.4.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==&quot;,
			&quot;deprecated&quot;: &quot;Please use @jridgewell/sourcemap-codec instead&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/stackback&quot;: {
			&quot;version&quot;: &quot;0.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/stacktracey&quot;: {
			&quot;version&quot;: &quot;2.1.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/stacktracey/-/stacktracey-2.1.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Kpij9riA+UNg7TnphqjH7/CzctQ/owJGNbFkfEeve4Z4uxT5+JapVLFXcsurIfN34gnTWZNJ/f7NMG0E8JDzTw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Unlicense&quot;,
			&quot;dependencies&quot;: {
				&quot;as-table&quot;: &quot;^1.0.36&quot;,
				&quot;get-source&quot;: &quot;^2.0.12&quot;
			}
		},
		&quot;node_modules/std-env&quot;: {
			&quot;version&quot;: &quot;3.8.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/std-env/-/std-env-3.8.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-vj5lIj3Mwf9D79hBkltk5qmkFI+biIKWS2IBxEyEU3AX1tUf7AoL8nSazCOiiqQsGKIq01SClsKEzweu34uwvA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/stoppable&quot;: {
			&quot;version&quot;: &quot;1.1.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=4&quot;,
				&quot;npm&quot;: &quot;&gt;=6&quot;
			}
		},
		&quot;node_modules/tinybench&quot;: {
			&quot;version&quot;: &quot;2.9.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/tinyexec&quot;: {
			&quot;version&quot;: &quot;0.3.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/tinyexec/-/tinyexec-0.3.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/tinypool&quot;: {
			&quot;version&quot;: &quot;1.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/tinypool/-/tinypool-1.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-al6n+QEANGFOMf/dmUMsuS5/r9B06uwlyNjZZql/zv8J7ybHCgoihBNORZCY2mzUuAnomQa2JdhyHKzZxPCrFA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.0.0 || &gt;=20.0.0&quot;
			}
		},
		&quot;node_modules/tinyrainbow&quot;: {
			&quot;version&quot;: &quot;2.0.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/tinyrainbow/-/tinyrainbow-2.0.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-op4nsTR47R6p0vMUUoYl/a+ljLFVtlfaXkLQmqfLR1qHma1h/ysYk4hEXZ880bf2CYgTskvTa/e196Vd5dDQXw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=14.0.0&quot;
			}
		},
		&quot;node_modules/tinyspy&quot;: {
			&quot;version&quot;: &quot;3.0.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/tinyspy/-/tinyspy-3.0.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-n1cw8k1k0x4pgA2+9XrOkFydTerNcJ1zWCO5Nn9scWHTD+5tp8dghT2x1uduQePZTZgd3Tupf+x9BxJjeJi77Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=14.0.0&quot;
			}
		},
		&quot;node_modules/tslib&quot;: {
			&quot;version&quot;: &quot;2.8.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;0BSD&quot;,
			&quot;optional&quot;: true
		},
		&quot;node_modules/ufo&quot;: {
			&quot;version&quot;: &quot;1.5.4&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/ufo/-/ufo-1.5.4.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-UsUk3byDzKd04EyoZ7U4DOlxQaD14JUKQl6/P7wiX4FNvUfm3XL246n9W5AmqwW5RSFJ27NAuM0iLscAOYUiGQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;
		},
		&quot;node_modules/undici&quot;: {
			&quot;version&quot;: &quot;5.28.5&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/undici/-/undici-5.28.5.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-zICwjrDrcrUE0pyyJc1I2QzBkLM8FINsgOrt6WjA+BgajVq9Nxu2PbFFXUrAggLfDXlZGZBVZYw7WNV5KiBiBA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@fastify/busboy&quot;: &quot;^2.0.0&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=14.0&quot;
			}
		},
		&quot;node_modules/unenv&quot;: {
			&quot;version&quot;: &quot;2.0.0-rc.14&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/unenv/-/unenv-2.0.0-rc.14.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-od496pShMen7nOy5VmVJCnq8rptd45vh6Nx/r2iPbrba6pa6p+tS2ywuIHRZ/OBvSbQZB0kWvpO9XBNVFXHD3Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;defu&quot;: &quot;^6.1.4&quot;,
				&quot;exsolve&quot;: &quot;^1.0.1&quot;,
				&quot;ohash&quot;: &quot;^2.0.10&quot;,
				&quot;pathe&quot;: &quot;^2.0.3&quot;,
				&quot;ufo&quot;: &quot;^1.5.4&quot;
			}
		},
		&quot;node_modules/vite&quot;: {
			&quot;version&quot;: &quot;6.2.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/vite/-/vite-6.2.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-n2GnqDb6XPhlt9B8olZPrgMD/es/Nd1RdChF6CBD/fHW6pUyUTt2sQW2fPRX5GiD9XEa6+8A6A4f2vT6pSsE7Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;esbuild&quot;: &quot;^0.25.0&quot;,
				&quot;postcss&quot;: &quot;^8.5.3&quot;,
				&quot;rollup&quot;: &quot;^4.30.1&quot;
			},
			&quot;bin&quot;: {
				&quot;vite&quot;: &quot;bin/vite.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.0.0 || ^20.0.0 || &gt;=22.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/vitejs/vite?sponsor=1&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;fsevents&quot;: &quot;~2.3.3&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;@types/node&quot;: &quot;^18.0.0 || ^20.0.0 || &gt;=22.0.0&quot;,
				&quot;jiti&quot;: &quot;&gt;=1.21.0&quot;,
				&quot;less&quot;: &quot;*&quot;,
				&quot;lightningcss&quot;: &quot;^1.21.0&quot;,
				&quot;sass&quot;: &quot;*&quot;,
				&quot;sass-embedded&quot;: &quot;*&quot;,
				&quot;stylus&quot;: &quot;*&quot;,
				&quot;sugarss&quot;: &quot;*&quot;,
				&quot;terser&quot;: &quot;^5.16.0&quot;,
				&quot;tsx&quot;: &quot;^4.8.1&quot;,
				&quot;yaml&quot;: &quot;^2.4.2&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;@types/node&quot;: {
					&quot;optional&quot;: true
				},
				&quot;jiti&quot;: {
					&quot;optional&quot;: true
				},
				&quot;less&quot;: {
					&quot;optional&quot;: true
				},
				&quot;lightningcss&quot;: {
					&quot;optional&quot;: true
				},
				&quot;sass&quot;: {
					&quot;optional&quot;: true
				},
				&quot;sass-embedded&quot;: {
					&quot;optional&quot;: true
				},
				&quot;stylus&quot;: {
					&quot;optional&quot;: true
				},
				&quot;sugarss&quot;: {
					&quot;optional&quot;: true
				},
				&quot;terser&quot;: {
					&quot;optional&quot;: true
				},
				&quot;tsx&quot;: {
					&quot;optional&quot;: true
				},
				&quot;yaml&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/vite-node&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/vite-node/-/vite-node-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-6PhR4H9VGlcwXZ+KWCdMqbtG649xCPZqfI9j2PsK1FcXgEzro5bGHcVKFCTqPLaNKZES8Evqv4LwvZARsq5qlg==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;cac&quot;: &quot;^6.7.14&quot;,
				&quot;debug&quot;: &quot;^4.4.0&quot;,
				&quot;es-module-lexer&quot;: &quot;^1.6.0&quot;,
				&quot;pathe&quot;: &quot;^2.0.3&quot;,
				&quot;vite&quot;: &quot;^5.0.0 || ^6.0.0&quot;
			},
			&quot;bin&quot;: {
				&quot;vite-node&quot;: &quot;vite-node.mjs&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.0.0 || ^20.0.0 || &gt;=22.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/android-arm&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-dp+MshLYux6j/JjdqVLnMglQlFu+MuVeNrmT5nk6q07wNhCdSnB7QZj+7G8VMUGh1q+vj2Bq8kRsuyA00I/k+Q==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/android-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-50tM0zCJW5kGqgG7fQ7IHvQOcAn9TKiVRuQ/lN0xR+T2lzEFvAi1ZcS8DiksFcEpf1t/GYOeOfCAgDHFpkiSmA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/android-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-GCj6WfUtNldqUzYkN/ITtlhwQqGWu9S45vUXs7EIYf+7rCiiqH9bCloatO9VhxsL0Pji+PF4Lz2XXCES+Q8hDw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/darwin-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-5hEZKPf+nQjYoSr/elb62U19/l1mZDdqidGfmFutVUjjUZrOazAtwK+Kr+3y0C/oeJfLlxo9fXb1w7L+P7E4FQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/darwin-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-hxVnwL2Dqs3fM1IWq8Iezh0cX7ZGdVhbTfnOy5uURtao5OIVCEyj9xIzemDi7sRvKsuSdtCAhMKarxqtlyVyfA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/freebsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-1MrCZs0fZa2g8E+FUo2ipw6jw5qqQiH+tERoS5fAfKnRx6NXH31tXBKI3VpmLijLH6yriMZsxJtaXUyFt/8Y4A==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/freebsd-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-0IZWLiTyz7nm0xuIs0q1Y3QWJC52R8aSXxe40VUxm6BB1RNmkODtW6LHvWRrGiICulcX7ZvyH6h5fqdLu4gkww==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-arm&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-NdKOhS4u7JhDKw9G3cY6sWqFcnLITn6SqivVArbzIaf3cemShqfLGHYMx8Xlm/lBit3/5d7kXvriTUGa5YViuQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-jaN3dHi0/DDPelk0nLcXRm1q7DNJpjXy7yWaWvbfkPvI+7XNSc/lDOnCLN7gzsyzgu6qSAmgSvP9oXAhP973uQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-ia32&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-OJykPaF4v8JidKNGz8c/q1lBO44sQNUQtq1KktJXdBLn1hPod5rE/Hko5ugKKZd+D2+o1a9MFGUEIUwO2YfgkQ==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-loong64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-nGfornQj4dzcq5Vp835oM/o21UMlXzn79KobKlcs3Wz9smwiifknLy4xDCLUU0BWp7b/houtdrgUz7nOGnfIYg==&quot;,
			&quot;cpu&quot;: [
				&quot;loong64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-mips64el&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-1osBbPEFYwIE5IVB/0g2X6i1qInZa1aIoj1TdL4AaAb55xIIgbg8Doq6a5BzYWgr+tEcDzYH67XVnTmUzL+nXg==&quot;,
			&quot;cpu&quot;: [
				&quot;mips64el&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-ppc64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-/6VBJOwUf3TdTvJZ82qF3tbLuWsscd7/1w+D9LH0W/SqUgM5/JJD0lrJ1fVIfZsqB6RFmLCe0Xz3fmZc3WtyVg==&quot;,
			&quot;cpu&quot;: [
				&quot;ppc64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-riscv64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-nSut/Mx5gnilhcq2yIMLMe3Wl4FK5wx/o0QuuCLMtmJn+WeWYoEGDN1ipcN72g1WHsnIbxGXd4i/MF0gTcuAjQ==&quot;,
			&quot;cpu&quot;: [
				&quot;riscv64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-s390x&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-cEECeLlJNfT8kZHqLarDBQso9a27o2Zd2AQ8USAEoGtejOrCYHNtKP8XQhMDJMtthdF4GBmjR2au3x1udADQQQ==&quot;,
			&quot;cpu&quot;: [
				&quot;s390x&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/linux-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-xbfUhu/gnvSEg+EGovRc+kjBAkrvtk38RlerAzQxvMzlB4fXpCFCeUAYzJvrnhFtdeyVCDANSjJvOvGYoeKzFA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/netbsd-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-X53z6uXip6KFXBQ+Krbx25XHV/NCbzryM6ehOAeAil7X7oa4XIq+394PWGnwaSQ2WRA0KI6PUO6hTO5zeF5ijA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;netbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/openbsd-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-T3H78X2h1tszfRSf+txbt5aOp/e7TAz3ptVKu9Oyir3IAOFPGV6O9c2naym5TOriy1l0nNf6a4X5UXRZSGX/dw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;openbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/sunos-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-2H3RUvcmULO7dIE5EWJH8eubZAI4xw54H1ilJnRNZdeo8dTADEZ21w6J22XBkXqGJbe0+wnNJtw3UXRoLJnFEg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;sunos&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/win32-arm64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-GE7XvrdOzrb+yVKB9KsRMq+7a2U/K5Cf/8grVFRAGJmfADr/e/ODQ134RK2/eeHqYV5eQRFxb1hY7Nr15fv1NQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/win32-ia32&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-uOxSJCIcavSiT6UnBhBzE8wy3n0hOkJsBOzy7HDAuTDE++1DJMRRVCPGisULScHL+a/ZwdXPpXD3IyFKjA7K8A==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/@esbuild/win32-x64&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-Y1EQdcfwMSeQN/ujR5VayLOJ1BHaK+ssyk0AEzPjC+t1lITgsnccPqFjb6V+LsTp/9Iov4ysfjxLaGJ9RPtkVg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/vite/node_modules/esbuild&quot;: {
			&quot;version&quot;: &quot;0.25.1&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/esbuild/-/esbuild-0.25.1.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-BGO5LtrGC7vxnqucAe/rmvKdJllfGaYWdyABvyMoXQlfYMb2bbRuReWR5tEGE//4LcNJj9XrkovTqNYRFZHAMQ==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;esbuild&quot;: &quot;bin/esbuild&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@esbuild/aix-ppc64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/android-arm&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/android-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/android-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/darwin-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/darwin-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/freebsd-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/freebsd-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-arm&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-ia32&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-loong64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-mips64el&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-ppc64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-riscv64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-s390x&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/linux-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/netbsd-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/netbsd-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/openbsd-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/openbsd-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/sunos-x64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/win32-arm64&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/win32-ia32&quot;: &quot;0.25.1&quot;,
				&quot;@esbuild/win32-x64&quot;: &quot;0.25.1&quot;
			}
		},
		&quot;node_modules/vitest&quot;: {
			&quot;version&quot;: &quot;3.0.8&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/vitest/-/vitest-3.0.8.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-dfqAsNqRGUc8hB9OVR2P0w8PZPEckti2+5rdZip0WIz9WW0MnImJ8XiR61QhqLa92EQzKP2uPkzenKOAHyEIbA==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@vitest/expect&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/mocker&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/pretty-format&quot;: &quot;^3.0.8&quot;,
				&quot;@vitest/runner&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/snapshot&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/spy&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/utils&quot;: &quot;3.0.8&quot;,
				&quot;chai&quot;: &quot;^5.2.0&quot;,
				&quot;debug&quot;: &quot;^4.4.0&quot;,
				&quot;expect-type&quot;: &quot;^1.1.0&quot;,
				&quot;magic-string&quot;: &quot;^0.30.17&quot;,
				&quot;pathe&quot;: &quot;^2.0.3&quot;,
				&quot;std-env&quot;: &quot;^3.8.0&quot;,
				&quot;tinybench&quot;: &quot;^2.9.0&quot;,
				&quot;tinyexec&quot;: &quot;^0.3.2&quot;,
				&quot;tinypool&quot;: &quot;^1.0.2&quot;,
				&quot;tinyrainbow&quot;: &quot;^2.0.0&quot;,
				&quot;vite&quot;: &quot;^5.0.0 || ^6.0.0&quot;,
				&quot;vite-node&quot;: &quot;3.0.8&quot;,
				&quot;why-is-node-running&quot;: &quot;^2.3.0&quot;
			},
			&quot;bin&quot;: {
				&quot;vitest&quot;: &quot;vitest.mjs&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;^18.0.0 || ^20.0.0 || &gt;=22.0.0&quot;
			},
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://opencollective.com/vitest&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;@edge-runtime/vm&quot;: &quot;*&quot;,
				&quot;@types/debug&quot;: &quot;^4.1.12&quot;,
				&quot;@types/node&quot;: &quot;^18.0.0 || ^20.0.0 || &gt;=22.0.0&quot;,
				&quot;@vitest/browser&quot;: &quot;3.0.8&quot;,
				&quot;@vitest/ui&quot;: &quot;3.0.8&quot;,
				&quot;happy-dom&quot;: &quot;*&quot;,
				&quot;jsdom&quot;: &quot;*&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;@edge-runtime/vm&quot;: {
					&quot;optional&quot;: true
				},
				&quot;@types/debug&quot;: {
					&quot;optional&quot;: true
				},
				&quot;@types/node&quot;: {
					&quot;optional&quot;: true
				},
				&quot;@vitest/browser&quot;: {
					&quot;optional&quot;: true
				},
				&quot;@vitest/ui&quot;: {
					&quot;optional&quot;: true
				},
				&quot;happy-dom&quot;: {
					&quot;optional&quot;: true
				},
				&quot;jsdom&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/why-is-node-running&quot;: {
			&quot;version&quot;: &quot;2.3.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;siginfo&quot;: &quot;^2.0.0&quot;,
				&quot;stackback&quot;: &quot;0.0.2&quot;
			},
			&quot;bin&quot;: {
				&quot;why-is-node-running&quot;: &quot;cli.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=8&quot;
			}
		},
		&quot;node_modules/workerd&quot;: {
			&quot;version&quot;: &quot;1.20250310.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/workerd/-/workerd-1.20250310.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-bAaZ9Bmts3mArbIrXYAtr+ZRsAJAAUEsCtvwfBavIYXaZ5sgdEOJBEiBbvsHp6CsVObegOM85tIWpYLpbTxQrQ==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;bin&quot;: {
				&quot;workerd&quot;: &quot;bin/workerd&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@cloudflare/workerd-darwin-64&quot;: &quot;1.20250310.0&quot;,
				&quot;@cloudflare/workerd-darwin-arm64&quot;: &quot;1.20250310.0&quot;,
				&quot;@cloudflare/workerd-linux-64&quot;: &quot;1.20250310.0&quot;,
				&quot;@cloudflare/workerd-linux-arm64&quot;: &quot;1.20250310.0&quot;,
				&quot;@cloudflare/workerd-windows-64&quot;: &quot;1.20250310.0&quot;
			}
		},
		&quot;node_modules/wrangler&quot;: {
			&quot;version&quot;: &quot;4.1.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/wrangler/-/wrangler-4.1.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-HcQZ2YappySGipEDEdbjMq01g3v+mv+xZYZSzwPTmRsoTfnbL5yteObshcK1JX9jdx7Qw23Ywd/4BPa1JyKIUQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT OR Apache-2.0&quot;,
			&quot;dependencies&quot;: {
				&quot;@cloudflare/kv-asset-handler&quot;: &quot;0.4.0&quot;,
				&quot;@cloudflare/unenv-preset&quot;: &quot;2.0.2&quot;,
				&quot;blake3-wasm&quot;: &quot;2.1.5&quot;,
				&quot;esbuild&quot;: &quot;0.24.2&quot;,
				&quot;miniflare&quot;: &quot;4.20250317.0&quot;,
				&quot;path-to-regexp&quot;: &quot;6.3.0&quot;,
				&quot;unenv&quot;: &quot;2.0.0-rc.14&quot;,
				&quot;workerd&quot;: &quot;1.20250317.0&quot;
			},
			&quot;bin&quot;: {
				&quot;wrangler&quot;: &quot;bin/wrangler.js&quot;,
				&quot;wrangler2&quot;: &quot;bin/wrangler.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18.0.0&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;fsevents&quot;: &quot;~2.3.2&quot;,
				&quot;sharp&quot;: &quot;^0.33.5&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;@cloudflare/workers-types&quot;: &quot;^4.20250317.0&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;@cloudflare/workers-types&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/wrangler/node_modules/@cloudflare/workerd-darwin-64&quot;: {
			&quot;version&quot;: &quot;1.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-darwin-64/-/workerd-darwin-64-1.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ZnpF+MP/azHJ7sUOW9Ut/5pqeijsEOSmRUpONDXImv/DiHgtCd2BA/He11srp8nG2XeWav3jk+Ob84NKrrXXHg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@cloudflare/workerd-darwin-arm64&quot;: {
			&quot;version&quot;: &quot;1.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-darwin-arm64/-/workerd-darwin-arm64-1.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ypn2/SIK7LAouYx5oB0NNhzb3h+ZdXtDh94VCcsNV81xAVdDXKp6xvTnqY8CWjGfuKWJocbRZVZvU+Lquhuujg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@cloudflare/workerd-linux-64&quot;: {
			&quot;version&quot;: &quot;1.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-linux-64/-/workerd-linux-64-1.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-KfAHN9VHF2NxGjDjj7udLAatZ72GIg4xmN9r2AZ6N1/hsGDlbn+NbVkSJtWjpXBcCoWYxQqtAdpHyO4eb7nIvQ==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@cloudflare/workerd-linux-arm64&quot;: {
			&quot;version&quot;: &quot;1.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-linux-arm64/-/workerd-linux-arm64-1.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-o7a3poQ4vzw553xGudUWm8yGsfdRWSGxqDEdYyuzT5k3z4qjsYMGsZgW9Yw8x3f1SSpPgYpdLlc8IKg9n7eukA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@cloudflare/workerd-windows-64&quot;: {
			&quot;version&quot;: &quot;1.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@cloudflare/workerd-windows-64/-/workerd-windows-64-1.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-tfDSioKY5OKP0nZ7Mkc6bLcwY2fIrROwoq2WjekQ62x91KRbKCJwjkOSvyFJYbshDATK90GutYoblqV80e34jw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/aix-ppc64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==&quot;,
			&quot;cpu&quot;: [
				&quot;ppc64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;aix&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/android-arm&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/android-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/android-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;android&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/darwin-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/darwin-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;darwin&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/freebsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/freebsd-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;freebsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-arm&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==&quot;,
			&quot;cpu&quot;: [
				&quot;arm&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-ia32&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-loong64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==&quot;,
			&quot;cpu&quot;: [
				&quot;loong64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-mips64el&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==&quot;,
			&quot;cpu&quot;: [
				&quot;mips64el&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-ppc64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==&quot;,
			&quot;cpu&quot;: [
				&quot;ppc64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-riscv64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==&quot;,
			&quot;cpu&quot;: [
				&quot;riscv64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-s390x&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==&quot;,
			&quot;cpu&quot;: [
				&quot;s390x&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/linux-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;linux&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/netbsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;netbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/netbsd-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;netbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/openbsd-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;openbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/openbsd-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;openbsd&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/sunos-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;sunos&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/win32-arm64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==&quot;,
			&quot;cpu&quot;: [
				&quot;arm64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/win32-ia32&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==&quot;,
			&quot;cpu&quot;: [
				&quot;ia32&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/@esbuild/win32-x64&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==&quot;,
			&quot;cpu&quot;: [
				&quot;x64&quot;
			],
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;optional&quot;: true,
			&quot;os&quot;: [
				&quot;win32&quot;
			],
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/esbuild&quot;: {
			&quot;version&quot;: &quot;0.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/esbuild/-/esbuild-0.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;bin&quot;: {
				&quot;esbuild&quot;: &quot;bin/esbuild&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@esbuild/aix-ppc64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/android-arm&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/android-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/android-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/darwin-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/darwin-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/freebsd-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/freebsd-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-arm&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-ia32&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-loong64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-mips64el&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-ppc64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-riscv64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-s390x&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/linux-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/netbsd-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/netbsd-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/openbsd-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/openbsd-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/sunos-x64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/win32-arm64&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/win32-ia32&quot;: &quot;0.24.2&quot;,
				&quot;@esbuild/win32-x64&quot;: &quot;0.24.2&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/miniflare&quot;: {
			&quot;version&quot;: &quot;4.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/miniflare/-/miniflare-4.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-fCyFTa3G41Vyo24QUZD5xgdm+6RMKT6VC3vk9Usmr+Pwf/15HcH1AVLPVgzmJaJosWVb8r4S0HQ9a/+bmmZx0Q==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;@cspotcode/source-map-support&quot;: &quot;0.8.1&quot;,
				&quot;acorn&quot;: &quot;8.14.0&quot;,
				&quot;acorn-walk&quot;: &quot;8.3.2&quot;,
				&quot;exit-hook&quot;: &quot;2.2.1&quot;,
				&quot;glob-to-regexp&quot;: &quot;0.4.1&quot;,
				&quot;stoppable&quot;: &quot;1.1.0&quot;,
				&quot;undici&quot;: &quot;^5.28.5&quot;,
				&quot;workerd&quot;: &quot;1.20250317.0&quot;,
				&quot;ws&quot;: &quot;8.18.0&quot;,
				&quot;youch&quot;: &quot;3.2.3&quot;,
				&quot;zod&quot;: &quot;3.22.3&quot;
			},
			&quot;bin&quot;: {
				&quot;miniflare&quot;: &quot;bootstrap.js&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=18.0.0&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/workerd&quot;: {
			&quot;version&quot;: &quot;1.20250317.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/workerd/-/workerd-1.20250317.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-m+aqA4RS/jsIaml0KuTi96UBlkx1vC0mcLClGKPFNPiMStK75hVQxUhupXEMI4knHtb/vgNQyPFMKAJtxW5c6w==&quot;,
			&quot;dev&quot;: true,
			&quot;hasInstallScript&quot;: true,
			&quot;license&quot;: &quot;Apache-2.0&quot;,
			&quot;bin&quot;: {
				&quot;workerd&quot;: &quot;bin/workerd&quot;
			},
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=16&quot;
			},
			&quot;optionalDependencies&quot;: {
				&quot;@cloudflare/workerd-darwin-64&quot;: &quot;1.20250317.0&quot;,
				&quot;@cloudflare/workerd-darwin-arm64&quot;: &quot;1.20250317.0&quot;,
				&quot;@cloudflare/workerd-linux-64&quot;: &quot;1.20250317.0&quot;,
				&quot;@cloudflare/workerd-linux-arm64&quot;: &quot;1.20250317.0&quot;,
				&quot;@cloudflare/workerd-windows-64&quot;: &quot;1.20250317.0&quot;
			}
		},
		&quot;node_modules/wrangler/node_modules/zod&quot;: {
			&quot;version&quot;: &quot;3.22.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/zod/-/zod-3.22.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-EjIevzuJRiRPbVH4mGc8nApb/lVLKVpmUhAaR5R5doKGfAnGJ6Gr3CViAVjP+4FWSxCsybeWQdcgCtbX+7oZug==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/sponsors/colinhacks&quot;
			}
		},
		&quot;node_modules/ws&quot;: {
			&quot;version&quot;: &quot;8.18.0&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/ws/-/ws-8.18.0.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;engines&quot;: {
				&quot;node&quot;: &quot;&gt;=10.0.0&quot;
			},
			&quot;peerDependencies&quot;: {
				&quot;bufferutil&quot;: &quot;^4.0.1&quot;,
				&quot;utf-8-validate&quot;: &quot;&gt;=5.0.2&quot;
			},
			&quot;peerDependenciesMeta&quot;: {
				&quot;bufferutil&quot;: {
					&quot;optional&quot;: true
				},
				&quot;utf-8-validate&quot;: {
					&quot;optional&quot;: true
				}
			}
		},
		&quot;node_modules/youch&quot;: {
			&quot;version&quot;: &quot;3.2.3&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/youch/-/youch-3.2.3.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-ZBcWz/uzZaQVdCvfV4uk616Bbpf2ee+F/AvuKDR5EwX/Y4v06xWdtMluqTD7+KlZdM93lLm9gMZYo0sKBS0pgw==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;dependencies&quot;: {
				&quot;cookie&quot;: &quot;^0.5.0&quot;,
				&quot;mustache&quot;: &quot;^4.2.0&quot;,
				&quot;stacktracey&quot;: &quot;^2.1.8&quot;
			}
		},
		&quot;node_modules/zod&quot;: {
			&quot;version&quot;: &quot;3.24.2&quot;,
			&quot;resolved&quot;: &quot;https://registry.npmjs.org/zod/-/zod-3.24.2.tgz&quot;,
			&quot;integrity&quot;: &quot;sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ==&quot;,
			&quot;dev&quot;: true,
			&quot;license&quot;: &quot;MIT&quot;,
			&quot;funding&quot;: {
				&quot;url&quot;: &quot;https://github.com/sponsors/colinhacks&quot;
			}
		}
	}
}

    </content>
  </file>
  <file path="package.json">
    <name>package.json</name>
    <size>411</size>
    <modified>2025-03-19T06:07:02.016Z</modified>
    <content>
      {
	&quot;name&quot;: &quot;broadcasting-coach&quot;,
	&quot;version&quot;: &quot;1.0.0&quot;,
	&quot;description&quot;: &quot;Real-time coaching app&quot;,
	&quot;main&quot;: &quot;src/index.js&quot;,
	&quot;scripts&quot;: {
		&quot;deploy&quot;: &quot;wrangler deploy&quot;,
		&quot;dev&quot;: &quot;wrangler dev&quot;,
		&quot;start&quot;: &quot;wrangler dev&quot;,
		&quot;test&quot;: &quot;vitest&quot;
	},
	&quot;devDependencies&quot;: {
		&quot;@cloudflare/vitest-pool-workers&quot;: &quot;^0.7.5&quot;,
		&quot;vitest&quot;: &quot;~3.0.7&quot;,
		&quot;wrangler&quot;: &quot;^4.1.0&quot;
	},
	&quot;keywords&quot;: [],
	&quot;author&quot;: &quot;&quot;,
	&quot;license&quot;: &quot;ISC&quot;
}

    </content>
  </file>
  <file path="server.js">
    <name>server.js</name>
    <size>2383</size>
    <modified>2025-03-13T08:43:42.315Z</modified>
    <content>
      // Simple Express server for development
const express = require(&apos;express&apos;);
const path = require(&apos;path&apos;);
const fs = require(&apos;fs&apos;);
const app = express();
const PORT = 8787;

// Serve static files from the root directory
app.use(express.static(&apos;./&apos;));

// API endpoints
app.post(&apos;/api/get-session-key&apos;, (req, res) =&gt; {
  // A mocked version of the sessionKey API for local development
  const { username, broadcaster } = req.body;
  
  if (!username || !broadcaster) {
    return res.status(400).json({ error: &apos;Missing username or broadcaster name&apos; });
  }
  
  // Generate a mock session key
  const sessionKey = `mock-${Date.now()}-${Math.random().toString(36).substring(2, 15)}`;
  const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now
  
  res.json({
    sessionKey,
    expiresAt
  });
});

app.post(&apos;/api/generate-prompt&apos;, (req, res) =&gt; {
  // A mocked version of the AI prompt API for local development
  const { context, broadcaster, preferences } = req.body;
  
  if (!Array.isArray(context) || context.length === 0) {
    return res.status(400).json({ error: &apos;Invalid or missing context&apos; });
  }
  
  if (!broadcaster) {
    return res.status(400).json({ error: &apos;Invalid or missing broadcaster&apos; });
  }
  
  // Mock AI response
  const mockResponses = [
    { action: &apos;say&apos;, content: &apos;Thanks for the tip! What would you like to see next?&apos; },
    { action: &apos;say&apos;, content: &apos;Tell me more about yourself, what brings you here today?&apos; },
    { action: &apos;do&apos;, content: &apos;Show viewers your outfit with a quick spin&apos; },
    { action: &apos;say&apos;, content: &apos;I appreciate all of you being here with me today!&apos; }
  ];
  
  // Pick a random response
  const randomResponse = mockResponses[Math.floor(Math.random() * mockResponses.length)];
  
  // Generate a mock session key
  const sessionKey = `mock-${Date.now()}-${Math.random().toString(36).substring(2, 15)}`;
  const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now
  
  res.json({
    ...randomResponse,
    sessionKey,
    expiresAt
  });
});

// Handle HTML5 history API for SPA routing
app.get(&apos;*&apos;, (req, res) =&gt; {
  res.sendFile(path.join(__dirname, &apos;index.html&apos;));
});

// Start the server
app.listen(PORT, () =&gt; {
  console.log(`Server is running at http://localhost:${PORT}`);
  console.log(`Open your browser to view the application`);
});

    </content>
  </file>
  <file path="src/index.js">
    <name>index.js</name>
    <size>10504</size>
    <modified>2025-03-17T06:30:39.592Z</modified>
    <content>
      // Import AI model configuration from centralized source
const { AI_MODELS, DEFAULT_MODEL, APPROVED_MODELS } = require(&apos;./models.js&apos;);

const promptTemplate = `
You are a real-time coach for a Chaturbate broadcaster named {{broadcaster}}. 
Your job is to provide short, actionable suggestions that the broadcaster can hear through an earpod while streaming.

Recent events in the chat room:
{{context}}

Broadcaster preferences/restrictions: {{preferences}}

Based on this context, provide ONE brief coaching suggestion (max 15 words) that the broadcaster can say or do right now to better engage with viewers. 
Make it conversational, natural, and easy to say. Focus on being helpful without being verbose.
When you are referencing peoples names don&apos;t read out the special symbols or numbers, for example &quot;john_doe&quot; should just be refered to as &quot;John&quot; aod &quot;Mary1999TX&quot; would just be &quot;Mary&quot;; try to work out a reasonable spoken name.

Give the broadcaster suggestions of things to say that will be open ended and help the coverstation move forward.

Don&apos;t repeat yourself, if you have given one piece of advice don&apos;t immediately give the same adavice again.

Your response should ONLY include the exact words the broadcaster should SAY or a very brief action to DO.

The response should be in JSON format, containing an &quot;action&quot; key (the suggestion for the broadcaster) and a &quot;content&quot; key (the full text of the suggestion).

For Example of saying something:

{
  &quot;action&quot;: &quot;say&quot;,
  &quot;content&quot;: &quot;John, that sounds great, what would you like to do next?&quot;
}


For example of doing something: 

{
  &quot;action&quot;: &quot;do&quot;,
  &quot;content&quot;: &quot;Turn around briefly so the viewers can see your outfit&quot;
}

`;


// Simple native JavaScript hashing function
function simpleHash(input) {
  let hash = 0;
  if (input.length === 0) return hash.toString();
  for (let i = 0; i &lt; input.length; i++) {
    const char = input.charCodeAt(i);
    hash = (hash &lt;&lt; 5) - hash + char; // Bitwise operations to create a hash
    hash |= 0; // Convert to 32-bit integer
  }
  return Math.abs(hash).toString(16); // Return as a hexadecimal string
}

function generateSessionKey(broadcasterName) {
  const salt = &apos;your-secret-salt&apos;; // Replace with a secure salt or store in environment variables
  const timestamp = new Date().toISOString(); // Use ISO string for consistency

  // Generate the hash using the simpleHash function
  const hash = simpleHash(`${broadcasterName}:${timestamp}:${salt}`);
  return { sessionKey: `${hash}|${timestamp}`, timestamp }; // Use &apos;|&apos; as the separator
}

function validateSessionKey(sessionKey, broadcasterName) {
  if (!sessionKey || !broadcasterName) return false;

  const [hash, timestamp] = sessionKey.split(&apos;|&apos;);
  if (!hash || !timestamp) return false;

  const sessionDate = new Date(timestamp);
  if (isNaN(sessionDate.getTime())) {
    console.error(&apos;Invalid timestamp:&apos;, timestamp);
    return false;
  }

  const now = new Date();
  const diffInHours = (now - sessionDate) / (1000 * 60 * 60);

  if (diffInHours &gt; 24) return false;

  const salt = &apos;your-secret-salt&apos;;
  const expectedHash = simpleHash(`${broadcasterName}:${timestamp}:${salt}`);
  return hash === expectedHash;
}

export default {
  async fetch(request, env) {
    console.log(&apos;Request received:&apos;, request.url);
    
    const url = new URL(request.url);
    
    // Handle the /api/get-models endpoint for all HTTP methods
    if (url.pathname === &apos;/api/get-models&apos;) {
      try {
        console.log(&apos;Sending models list response...&apos;);
        return new Response(JSON.stringify(AI_MODELS), {
          headers: { 
            &apos;Content-Type&apos;: &apos;application/json&apos;,
            &apos;Access-Control-Allow-Origin&apos;: &apos;*&apos;
          }
        });
      } catch (error) {
        console.error(&apos;Error in /api/get-models:&apos;, error.message);
        return new Response(JSON.stringify({ error: error.message }), {
          status: 500,
          headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
        });
      }
    }
    
    // For non-POST requests, fallback to static assets
    if (request.method !== &apos;POST&apos;) {
      return env.ASSETS.fetch(request);
    }

    // New endpoint to get a session key
    if (url.pathname === &apos;/api/get-session-key&apos; &amp;&amp; request.method === &apos;POST&apos;) {
      try {
        const requestBody = await request.json();
        const { username, broadcaster } = requestBody;

        // Validate the request body
        if (!username || !broadcaster) {
          return new Response(
            JSON.stringify({ error: &apos;Missing username or broadcaster name&apos; }),
            { status: 400, headers: { &apos;Content-Type&apos;: &apos;application/json&apos; } }
          );
        }

        // Generate a session key
        const { sessionKey, timestamp } = generateSessionKey(broadcaster);

        return new Response(
          JSON.stringify({ sessionKey, expiresAt: new Date(timestamp).toISOString() }),
          { status: 200, headers: { &apos;Content-Type&apos;: &apos;application/json&apos; } }
        );
      } catch (error) {
        console.error(&apos;Error in /api/get-session-key:&apos;, error.message);
        return new Response(JSON.stringify({ error: error.message }), {
          status: 500,
          headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
        });
      }
    }

    // Existing endpoint for generating prompts
    if (url.pathname === &apos;/api/generate-prompt&apos; &amp;&amp; request.method === &apos;POST&apos;) {
      try {
        console.log(&apos;Parsing request body...&apos;);
        const requestBody = await request.json();
        console.log(&apos;Parsed request body:&apos;, requestBody);

        const { context, broadcaster, preferences, aimodel, sessionKey } = requestBody;

        // Validate the request body fields
        if (!Array.isArray(context) || context.length === 0) {
          console.error(&apos;Invalid or missing context&apos;);
          return new Response(JSON.stringify({ error: &apos;Invalid or missing context&apos; }), {
            status: 400,
            headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
          });
        }

        if (!broadcaster || typeof broadcaster !== &apos;string&apos; || broadcaster.trim() === &apos;&apos;) {
          console.error(&apos;Invalid or missing broadcaster&apos;);
          return new Response(JSON.stringify({ error: &apos;Invalid or missing broadcaster&apos; }), {
            status: 400,
            headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
          });
        }

        // Validate the session key
        if (!validateSessionKey(sessionKey, broadcaster)) {
          console.error(&apos;Invalid or missing session key&apos;);
          return new Response(JSON.stringify({ error: &apos;Invalid or missing session key&apos; }), {
            status: 401,
            headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
          });
        }

        console.log(&apos;Preparing prompt template...&apos;);
        // Get requested model or use default
        const requestedModel = aimodel || APPROVED_MODELS[0];
        
        // Validate the model
        if (!APPROVED_MODELS.includes(requestedModel)) {
          console.error(&apos;Invalid model requested:&apos;, requestedModel);
          return new Response(JSON.stringify({ 
            error: `Invalid model. Only approved models are supported.`,
            errorType: &apos;model_validation&apos;
          }), {
            status: 403,
            headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
          });
        }
        
        const model = requestedModel;
        console.log(&apos;Using AI model:&apos;, model);

        const formattedContext = context
          .map(item =&gt; `${item.type}: ${item.text} (${new Date(item.timestamp).toLocaleString()})`)
          .join(&apos;\n&apos;);

        console.log(&apos;Formatted context:&apos;, formattedContext);

        const finalPrompt = promptTemplate
          .replace(&apos;{{context}}&apos;, formattedContext)
          .replace(&apos;{{broadcaster}}&apos;, broadcaster || &apos;Unknown Broadcaster&apos;)
          .replace(&apos;{{preferences}}&apos;, preferences || &apos;No preferences specified&apos;);

        console.log(&apos;Final prompt:&apos;, finalPrompt);

        console.log(&apos;Running AI inference...&apos;);
        const aiResponse = await env.AI.run(model, {
          prompt: finalPrompt,
        });

        // double escaping of special characters is happening here; test_user becomes test\\_user

        console.log(&apos;AI response:&apos;, aiResponse);

        const parseResponse = (response) =&gt; {
          try {
            const responseText = response.response; // Get the actual text from the response
            
            // Basic text processing to clean the response text
            const startIndex = responseText.indexOf(&apos;{&apos;);
            const endIndex = responseText.lastIndexOf(&apos;}&apos;);
            if (startIndex !== -1 &amp;&amp; endIndex !== -1) {
              
              // trim  to open close braqckets look for extraneous double backslashes and remove them
              const cleanedResponseText = responseText.substring(startIndex, endIndex + 1).replace(/\\\\/g, &apos;\\&apos;);;


              const parsed = JSON.parse(cleanedResponseText);
              return {
                action: parsed.action || &apos;unknown&apos;,
                content: parsed.content || &apos;No suggestion available.&apos;,
              };
            } else {
              throw new Error(&apos;Invalid JSON format&apos;);
            }
          } catch (error) {
            console.error(&apos;Error parsing AI response:&apos;, error);
            console.log(&apos;Raw AI response text:&apos;, response.response); // Log the actual text if an error occurs
            return {
              action: &apos;unknown&apos;,
              content: &apos;Error parsing AI response.&apos;,
            };
          }
        };

        const structuredResponse = parseResponse(aiResponse);

        // Generate a new session key to refresh it
        const { sessionKey: newSessionKey, timestamp } = generateSessionKey(broadcaster);

        // Add the new session key to the response
        structuredResponse.sessionKey = newSessionKey;
        structuredResponse.expiresAt = new Date(timestamp).toISOString();

        console.log(&apos;Structured response:&apos;, structuredResponse);

        return new Response(JSON.stringify(structuredResponse), {
          headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
        });
      } catch (error) {
        console.error(&apos;Error in /api/generate-prompt:&apos;, error.message);
        return new Response(JSON.stringify({ error: error.message }), {
          status: 500,
          headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
        });
      }
    }

    // If no routes match
    return new Response(&apos;Not Found&apos;, { status: 404 });
  },
};

    </content>
  </file>
  <file path="src/models.js">
    <name>models.js</name>
    <size>1867</size>
    <modified>2025-03-17T05:11:09.352Z</modified>
    <content>
      // Centralized AI model configuration
// This is the single source of truth for AI models in the application

const AI_MODELS = [
    {
        id: &apos;@hf/mistral/mistral-7b-instruct-v0.2&apos;,
        provider: &apos;Cloudflare-Worker-AI&apos;,
        name: &apos;Mistral 7B Instruct v0.2&apos;,
        description: &apos;Fast, adult-friendly&apos;
    },
    {
        id: &apos;@cf/meta/llama-3.2-1b-instruct&apos;,
        provider: &apos;Cloudflare-Worker-AI&apos;,
        name: &apos;Llama 3.2 1B&apos;,
        description: &apos;Basic fast&apos;
    },
    {
        id: &apos;@cf/meta/llama-3.3-70b-instruct-fp8-fast&apos;,
        provider: &apos;Cloudflare-Worker-AI&apos;,
        name: &apos;Llama 3.3 70B FP8 Fast&apos;,
        description: &apos;Fast but better for complex prompts&apos;
    },

    // Commented out models for future use
    // {
    //   id: &apos;meta-llama/llama-3.2-3b-instruct:free&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Llama 3.2 3B Instruct&apos;,
    //   description: &apos;Fast free model with basic capabilities&apos;
    // },
    // {
    //   id: &apos;google/gemini-2.0-flash-lite-001&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Gemini 2.0 Flash Lite&apos;,
    //   description: &apos;Fast and affordable option&apos;
    // },
    // {
    //   id: &apos;mistralai/mistral-small-24b-instruct-2501&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Mistral Small&apos;,
    //   description: &apos;Adult-friendly model with good performance&apos;
    // },
    // {
    //   id: &apos;anthropic/claude-3.7-sonnet&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Claude 3.7 Sonnet&apos;,
    //   description: &apos;Smart but expensive premium option&apos;
    // }
];

// Export the default model (first in the list)
const DEFAULT_MODEL = AI_MODELS[0].id;

// Export the list of approved model IDs for validation
const APPROVED_MODELS = AI_MODELS.map(model =&gt; model.id);

// Export all configurations
module.exports = {
    AI_MODELS,
    DEFAULT_MODEL,
    APPROVED_MODELS
};

    </content>
  </file>
  <file path="start-local.sh">
    <name>start-local.sh</name>
    <size>397</size>
    <modified>2025-03-14T06:31:01.245Z</modified>
    <content>
      #!/bin/bash

echo &quot;=== Starting Broadcasting Coach Worker ===&quot;

# Install dependencies if needed
if [ ! -d &quot;node_modules&quot; ]; then
  echo &quot;Installing dependencies...&quot;
  npm install
fi

# Run the worker locally
echo &quot;Starting local development server...&quot;
echo &quot;The application will be available at http://localhost:8787&quot;
echo &quot;Static files are being served from the ./static directory&quot;
wrangler dev

    </content>
  </file>
  <file path="static/index.html">
    <name>index.html</name>
    <size>6071</size>
    <modified>2025-03-19T05:56:25.151Z</modified>
    <content>
      &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;Broadcasting Real-Time Coach&lt;/title&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;styles/main.css&quot;&gt;
    &lt;!-- QR Code Scanner Library --&gt;
    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js&quot;&gt;&lt;/script&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css&quot;&gt;
    &lt;link rel=&quot;icon&quot;
        href=&quot;https://www.adult-webcam-faq.com/wp-content/uploads/cropped-adult-webcam-faq-logo-compressed-1-192x192.png&quot;
        sizes=&quot;192x192&quot;&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div class=&quot;app-container&quot;&gt;
        &lt;header&gt;
            &lt;h1&gt;CB Broadcasting Real-Time Coach&lt;/h1&gt;
            &lt;button id=&quot;configToggle&quot; class=&quot;btn&quot;&gt;⚙️ Settings&lt;/button&gt;
        &lt;/header&gt;

        &lt;div id=&quot;configSection&quot; class=&quot;config-section hidden&quot;&gt;
            &lt;h2&gt;Configuration&lt;/h2&gt;
            &lt;!-- OpenRouter API Key no longer needed with new backend --&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;aiModel&quot;&gt;AI Model:&lt;/label&gt;
                &lt;select id=&quot;aiModel&quot;&gt;
                    &lt;option value=&quot;loading&quot;&gt;Loading available models...&lt;/option&gt;
                &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;scannedUrl&quot;&gt;Scanned URL:&lt;/label&gt;
                &lt;input type=&quot;text&quot; id=&quot;scannedUrl&quot; placeholder=&quot;URL from scanned QR code&quot;&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;broadcasterName&quot;&gt;Broadcaster Username:&lt;/label&gt;
                &lt;input type=&quot;text&quot; id=&quot;broadcasterName&quot; placeholder=&quot;Your Chaturbate username&quot;&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;promptLanguage&quot;&gt;Prompt Language:&lt;/label&gt;
                &lt;select id=&quot;promptLanguage&quot;&gt;
                    &lt;option value=&quot;en-US&quot;&gt;English (US)&lt;/option&gt;
                    &lt;option value=&quot;es-ES&quot;&gt;Spanish&lt;/option&gt;
                    &lt;option value=&quot;fr-FR&quot;&gt;French&lt;/option&gt;
                    &lt;option value=&quot;de-DE&quot;&gt;German&lt;/option&gt;
                    &lt;option value=&quot;it-IT&quot;&gt;Italian&lt;/option&gt;
                    &lt;option value=&quot;ja-JP&quot;&gt;Japanese&lt;/option&gt;
                    &lt;option value=&quot;ko-KR&quot;&gt;Korean&lt;/option&gt;
                    &lt;option value=&quot;pt-BR&quot;&gt;Portuguese&lt;/option&gt;
                    &lt;option value=&quot;ru-RU&quot;&gt;Russian&lt;/option&gt;
                &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;promptDelay&quot;&gt;Delay Between Prompts (seconds):&lt;/label&gt;
                &lt;input type=&quot;number&quot; id=&quot;promptDelay&quot; min=&quot;1&quot; max=&quot;30&quot; value=&quot;5&quot;&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;preferences&quot;&gt;Preferences/Restrictions:&lt;/label&gt;
                &lt;textarea id=&quot;preferences&quot; placeholder=&quot;Enter any preferences or topics to avoid...&quot;&gt;&lt;/textarea&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;button id=&quot;saveConfig&quot; class=&quot;btn primary&quot;&gt;Save Configuration&lt;/button&gt;
                &lt;button id=&quot;testApiConnection&quot; class=&quot;btn&quot;&gt;Test API Connection&lt;/button&gt;
                &lt;div id=&quot;apiTestResult&quot; class=&quot;hidden&quot; style=&quot;margin-top: 10px; padding: 10px; border-radius: 4px;&quot;&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;button id=&quot;factoryReset&quot; class=&quot;action-button&quot;&gt;Factory Reset&lt;/button&gt;
        &lt;/div&gt;

        &lt;div class=&quot;main-content&quot;&gt;
            &lt;div class=&quot;scanner-section&quot;&gt;
                &lt;h2&gt;Connect to Stream&lt;/h2&gt;
                &lt;div id=&quot;qrScannerContainer&quot;&gt;
                    &lt;video id=&quot;qrScanner&quot; playsinline&gt;&lt;/video&gt;
                    &lt;canvas id=&quot;qrCanvas&quot; class=&quot;hidden&quot;&gt;&lt;/canvas&gt;
                &lt;/div&gt;
                &lt;button id=&quot;startScan&quot; class=&quot;btn primary&quot;&gt;Scan QR Code&lt;/button&gt;
                &lt;div id=&quot;scanResult&quot; class=&quot;hidden&quot;&gt;
                    &lt;p&gt;Connected to: &lt;span id=&quot;apiEndpoint&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                    &lt;button id=&quot;disconnect&quot; class=&quot;btn&quot;&gt;Disconnect&lt;/button&gt;
                &lt;/div&gt;
                &lt;div&gt;Events API QRCode from the bottom of Broadcast / Settings &amp; Privacy page &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class=&quot;activity-section&quot;&gt;
                &lt;h2&gt;Activity Feed&lt;/h2&gt;
                &lt;div id=&quot;activityFeed&quot; class=&quot;feed&quot;&gt;&lt;/div&gt;
            &lt;/div&gt;

            &lt;div class=&quot;prompt-section&quot;&gt;
                &lt;h2&gt;Coach Prompts&lt;/h2&gt;
                &lt;div id=&quot;promptFeed&quot; class=&quot;feed&quot;&gt;&lt;/div&gt;
                &lt;div class=&quot;audio-controls&quot;&gt;
                    &lt;label class=&quot;switch&quot;&gt;
                        &lt;input type=&quot;checkbox&quot; id=&quot;audioEnabled&quot; checked&gt;
                        &lt;span class=&quot;slider round&quot;&gt;&lt;/span&gt;
                    &lt;/label&gt;
                    &lt;span&gt;Audio Prompts&lt;/span&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div id=&quot;usersSection&quot;&gt;
                &lt;h2&gt;Users&lt;/h2&gt;
                &lt;div id=&quot;userList&quot; class=&quot;user-list&quot;&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;


        &lt;div class=&quot;status-bar&quot;&gt;
            &lt;span id=&quot;connectionStatus&quot;&gt;Disconnected&lt;/span&gt;
            &lt;span id=&quot;lastPromptTime&quot;&gt;&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;


    &lt;!-- Footer --&gt;
    &lt;footer class=&quot;footer&quot;&gt;
        &lt;div class=&quot;footer-content&quot;&gt;
            &lt;p&gt;
                &lt;a href=&quot;https://broadcasting-coach.adult-webcam-faq.com&quot; target=&quot;_blank&quot;&gt;CB Broadcasting Coach&lt;/a&gt; •
                &lt;a href=&quot;https://github.com/honytsoi/CBBroadcastingCoach&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;
                    GitHub&lt;/a&gt; •
                &lt;a href=&quot;https://x.com/honytsoi&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;fab fa-twitter&quot;&gt;&lt;/i&gt; Twitter&lt;/a&gt;
                &lt;a href=&quot;https://chaturbate.com/ctmhhac/&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;fab fa-chaturbate&quot;&gt;&lt;/i&gt; My CB
                    room&lt;/a&gt;
            &lt;/p&gt;
            &lt;p class=&quot;copyright&quot;&gt;© 2025 &lt;a href=&quot;https://www.adult-webcam-faq.com/hony-tsoi.html&quot;&gt;Hony&lt;/a&gt; @ &lt;a
                    href=&quot;https://www.adult-webcam-faq.com/&quot;&gt;Adult Webcam FAQ&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;

    &lt;!-- Application Scripts --&gt;
    &lt;script type=&quot;module&quot; src=&quot;src/app.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
    </content>
  </file>
  <file path="static/src/api/cloudflareWorker.js">
    <name>cloudflareWorker.js</name>
    <size>9038</size>
    <modified>2025-03-17T03:45:19.479Z</modified>
    <content>
      // src/api/cloudflareWorker.js
const AI_API_ENDPOINT = &apos;/api/generate-prompt&apos;; // Relative URL!
const SESSION_KEY_ENDPOINT = &apos;/api/get-session-key&apos;; // Session key endpoint
const GET_MODELS_ENDPOINT = &apos;/api/get-models&apos;; // Models endpoint

// We&apos;ll fetch the approved models from the backend
let APPROVED_MODELS = [];

let aiState = {
    isGeneratingPrompt: false,
};

// Initialize or refresh session key
async function getSessionKey(username, broadcaster) {
    try {
        const response = await fetch(SESSION_KEY_ENDPOINT, {
            method: &apos;POST&apos;,
            headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
            body: JSON.stringify({
                username: username || &apos;anonymous&apos;,
                broadcaster: broadcaster || &apos;anonymous&apos;
            })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        return {
            sessionKey: data.sessionKey,
            expiresAt: data.expiresAt
        };
    } catch (error) {
        console.error(&apos;Error getting session key:&apos;, error);
        throw error;
    }
}

// Load session data from localStorage
function loadSessionData() {
    try {
        const sessionData = localStorage.getItem(&apos;chatCoachSession&apos;);
        if (!sessionData) return null;
        
        const data = JSON.parse(sessionData);
        // Check if the session is expired
        if (new Date(data.expiresAt) &lt; new Date()) {
            localStorage.removeItem(&apos;chatCoachSession&apos;);
            return null;
        }
        return data;
    } catch (error) {
        console.error(&apos;Error loading session data:&apos;, error);
        return null;
    }
}

// Save session data to localStorage
function saveSessionData(sessionKey, expiresAt) {
    try {
        const sessionData = {
            sessionKey,
            expiresAt
        };
        localStorage.setItem(&apos;chatCoachSession&apos;, JSON.stringify(sessionData));
    } catch (error) {
        console.error(&apos;Error saving session data:&apos;, error);
    }
}

/**
 * Create or get the error display element
 */
function getOrCreateErrorDisplay() {
    let errorDisplay = document.getElementById(&apos;errorDisplay&apos;);
    
    if (!errorDisplay) {
        errorDisplay = document.createElement(&apos;div&apos;);
        errorDisplay.id = &apos;errorDisplay&apos;;
        errorDisplay.style.position = &apos;fixed&apos;;
        errorDisplay.style.bottom = &apos;20px&apos;;
        errorDisplay.style.right = &apos;20px&apos;;
        errorDisplay.style.padding = &apos;15px&apos;;
        errorDisplay.style.backgroundColor = &apos;#ffebee&apos;;
        errorDisplay.style.border = &apos;1px solid #ffcdd2&apos;;
        errorDisplay.style.borderRadius = &apos;4px&apos;;
        errorDisplay.style.boxShadow = &apos;0 2px 8px rgba(0,0,0,0.2)&apos;;
        errorDisplay.style.zIndex = &apos;1000&apos;;
        errorDisplay.style.display = &apos;none&apos;;
        errorDisplay.style.maxWidth = &apos;400px&apos;;
        errorDisplay.style.wordWrap = &apos;break-word&apos;;
        document.body.appendChild(errorDisplay);
    }
    
    return errorDisplay;
}

/**
 * Display an error message on the screen
 */
function displayError(error) {
    const errorDisplay = getOrCreateErrorDisplay();
    const isQuotaError = error.message.toLowerCase().includes(&apos;quota&apos;) || 
                         error.message.toLowerCase().includes(&apos;limit&apos;) ||
                         error.message.toLowerCase().includes(&apos;exceeded&apos;);
    
    // Set title based on error type
    let errorTitle = &apos;Error&apos;;
    if (isQuotaError) {
        errorTitle = &apos;Quota Exceeded Error&apos;;
        errorDisplay.style.backgroundColor = &apos;#fff3cd&apos;;
        errorDisplay.style.borderColor = &apos;#ffecb5&apos;;
    } else {
        errorDisplay.style.backgroundColor = &apos;#ffebee&apos;;
        errorDisplay.style.borderColor = &apos;#ffcdd2&apos;;
    }
    
    // Build error message HTML
    errorDisplay.innerHTML = `
        &lt;div style=&quot;font-weight: bold; margin-bottom: 8px;&quot;&gt;${errorTitle}&lt;/div&gt;
        &lt;div&gt;${error.message}&lt;/div&gt;
        &lt;div style=&quot;text-align: right; margin-top: 10px;&quot;&gt;
            &lt;button onclick=&quot;document.getElementById(&apos;errorDisplay&apos;).style.display=&apos;none&apos;&quot; 
                    style=&quot;padding: 5px 10px; background: #f1f1f1; border: none; border-radius: 3px; cursor: pointer;&quot;&gt;
                Dismiss
            &lt;/button&gt;
        &lt;/div&gt;
    `;
    
    errorDisplay.style.display = &apos;block&apos;;
    
    // Auto-hide after 20 seconds if it&apos;s not a quota error
    if (!isQuotaError) {
        setTimeout(() =&gt; {
            if (errorDisplay) {
                errorDisplay.style.display = &apos;none&apos;;
            }
        }, 20000);
    }
}

// We no longer need the determineSayOrDoPrompt function since the backend provides this information

async function generateCoachingPrompt(config, context, onPromptGenerated) {
    // debugging
    console.log(&apos;generateCoachingPrompt&apos;, config, context);
    if (context.length === 0 || aiState.isGeneratingPrompt) return;

    aiState.isGeneratingPrompt = true;
    try {
        // Validate the AI model if we have APPROVED_MODELS loaded
        if (APPROVED_MODELS.length &gt; 0 &amp;&amp; !APPROVED_MODELS.includes(config.aiModel)) {
            throw new Error(`AI model ${config.aiModel} is not approved. Please select from the approved model list.`);
        }
        
        // Ensure we have a valid session key
        let sessionKey = config.sessionKey;
        
        // If no session key in config, try to load from localStorage
        if (!sessionKey) {
            const sessionData = loadSessionData();
            if (sessionData) {
                sessionKey = sessionData.sessionKey;
            } else {
                // If no valid session in localStorage, get a new one
                const { sessionKey: newKey, expiresAt } = await getSessionKey(
                    &apos;user&apos;, // You might want to pass a real username here
                    config.broadcasterName
                );
                sessionKey = newKey;
                // Update config with the new session key
                config.sessionKey = sessionKey;
                // Save to localStorage
                saveSessionData(sessionKey, expiresAt);
            }
        }

        // Format context as expected by the backend (array of objects)
        const contextArray = context.map(item =&gt; ({
            type: item.type,
            text: item.text,
            timestamp: item.timestamp || new Date().toISOString()
        }));

        const response = await fetch(AI_API_ENDPOINT, {
            method: &apos;POST&apos;,
            headers: { &apos;Content-Type&apos;: &apos;application/json&apos; },
            body: JSON.stringify({
                context: contextArray,
                broadcaster: config.broadcasterName,
                preferences: config.preferences,
                aimodel: config.aiModel,  // Pass AI model to backend
                sessionKey: sessionKey
            })
        });

        // Handle HTTP errors
        if (!response.ok) {
            const errorData = await response.json().catch(() =&gt; ({}));
            const errorMessage = errorData.error || `HTTP error! status: ${response.status}`;
            throw new Error(errorMessage);
        }

        const data = await response.json();
        
        // Store the new session key if it&apos;s provided in the response
        if (data.sessionKey &amp;&amp; data.expiresAt) {
            config.sessionKey = data.sessionKey;
            saveSessionData(data.sessionKey, data.expiresAt);
        }
        // Get the content and action from the response
        const suggestion = data.content?.trim() || &apos;&apos;;
        const promptType = data.action || &apos;do&apos;; // Default to &apos;do&apos; if not provided
        
        // Pass both the suggestion and the prompt type to the callback
        if (onPromptGenerated &amp;&amp; typeof onPromptGenerated === &apos;function&apos;) {
            onPromptGenerated(suggestion, promptType);
        }

        return suggestion;
    } catch (error) {
        console.error(&apos;Error generating coaching prompt:&apos;, error);
        
        // Display error on screen
        displayError(error);
        
        // Add to activity feed
        window.addActivityItem(`Error generating prompt: ${error.message}`, &apos;event&apos;);
        return null;
    } finally {
        aiState.isGeneratingPrompt = false;
    }
}

/**
 * Fetch the available AI models from the backend
 */
async function getAvailableModels() {
    try {
        const response = await fetch(GET_MODELS_ENDPOINT);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const models = await response.json();
        // Update APPROVED_MODELS for validation
        APPROVED_MODELS = models.map(model =&gt; model.id);
        return models;
    } catch (error) {
        console.error(&apos;Error fetching AI models:&apos;, error);
        // Return empty array as we no longer have local fallback
        return [];
    }
}

export default {
    generateCoachingPrompt,
    getSessionKey,
    loadSessionData,
    saveSessionData,
    getAvailableModels
};

    </content>
  </file>
  <file path="static/src/app.js">
    <name>app.js</name>
    <size>19176</size>
    <modified>2025-03-19T06:55:15.861Z</modified>
    <content>
      // src/app.js
import { initConfig, configState, clearLocalStorage } from &apos;./config.js&apos;;
import { initQRScanner } from &apos;./qr-scanner.js&apos;;
import * as CloudflareWorkerAPI from &apos;./api/cloudflareWorker.js&apos;;
import UserManager from &apos;./user-manager.js&apos;;

// App State
const appState = {
    connected: false,
    apiEndpoint: null,
    lastEventId: null,
    context: [],
    lastPromptTimestamp: null,
    broadcasterInfo: null,
    userManager: new UserManager()
};

// DOM Elements
let disconnectBtn;
let activityFeed;
let promptFeed;
let audioEnabled;
let connectionStatus;
let lastPromptTime;
let usersSection;
let userList;

// Initialize the application
document.addEventListener(&apos;DOMContentLoaded&apos;, () =&gt; {
    // Get DOM elements
    disconnectBtn = document.getElementById(&apos;disconnect&apos;);
    activityFeed = document.getElementById(&apos;activityFeed&apos;);
    promptFeed = document.getElementById(&apos;promptFeed&apos;);
    audioEnabled = document.getElementById(&apos;audioEnabled&apos;);
    connectionStatus = document.getElementById(&apos;connectionStatus&apos;);
    lastPromptTime = document.getElementById(&apos;lastPromptTime&apos;);
    
    // Initialize modules
    initConfig();
    initQRScanner(connectToEventAPI);
    
    // Add event listeners
    disconnectBtn.addEventListener(&apos;click&apos;, disconnectFromEventAPI);
    
// Make addActivityItem available globally for other modules
window.addActivityItem = addActivityItem;

// Add event listener for factory reset button
document.getElementById(&apos;factoryReset&apos;).addEventListener(&apos;click&apos;, () =&gt; {
    if (confirm(&apos;Are you sure you want to reset all settings? This action cannot be undone.&apos;)) {
        clearLocalStorage();
        window.location.reload();
    }
});
    // Setup users section
    setupUsersSection();
    
    // Check if we have a saved scanned URL and connect automatically
    setTimeout(() =&gt; {
        if (configState.config.scannedUrl) {
            // Update UI to show the saved URL
            const apiEndpointEl = document.getElementById(&apos;apiEndpoint&apos;);
            const scanResult = document.getElementById(&apos;scanResult&apos;);
            
            if (apiEndpointEl &amp;&amp; scanResult) {
                apiEndpointEl.textContent = configState.config.scannedUrl;
                scanResult.classList.remove(&apos;hidden&apos;);
                
                // Connect to the saved URL
                connectToEventAPI(configState.config.scannedUrl);
                addActivityItem(&apos;Reconnected to previously scanned QR code URL&apos;, &apos;event&apos;);
            }
        }
    }, 500); // Short delay to ensure config is loaded
});

// Add item to activity feed
function addActivityItem(text, type = &apos;event&apos;) {
    const item = document.createElement(&apos;div&apos;);
    item.className = `feed-item ${type}`;
    item.textContent = text;
    activityFeed.appendChild(item);
    activityFeed.scrollTop = activityFeed.scrollHeight;

    // Add to context for AI
    if (appState.context.length &gt;= 10) {
        appState.context.shift(); // Remove oldest item if we have more than 10
    }
    appState.context.push({ text, type, timestamp: new Date().toISOString() });
}

// Add prompt to prompt feed
function addPromptItem(text, voiceType = &apos;do&apos;) {
    const item = document.createElement(&apos;div&apos;);
    item.className = `feed-item prompt ${voiceType}-prompt`;
    item.textContent = text;
    
    // Add a visual indicator for the voice type
    const voiceIndicator = document.createElement(&apos;span&apos;);
    voiceIndicator.className = &apos;voice-indicator&apos;;
    voiceIndicator.textContent = voiceType === &apos;say&apos; ? &apos;🗣️ Say:&apos; : &apos;🎯 Do:&apos;;
    item.prepend(voiceIndicator);
    
    promptFeed.appendChild(item);
    promptFeed.scrollTop = promptFeed.scrollHeight;
    
    // Update last prompt time
    appState.lastPromptTimestamp = new Date();
    lastPromptTime.textContent = `Last prompt: ${appState.lastPromptTimestamp.toLocaleTimeString()}`;
    
    // Speak the prompt if audio is enabled
    if (audioEnabled.checked) {
        speakText(text, voiceType);
    }
}

// Text-to-speech function with voice type support
function speakText(text, voiceType = &apos;do&apos;) {
    if (&apos;speechSynthesis&apos; in window) {
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = configState.config.promptLanguage;
        
        // Use appropriate voice based on voiceType
        if (voiceType === &apos;say&apos; &amp;&amp; configState.config.sayVoice) {
            utterance.voice = configState.config.sayVoice;
        } else if (voiceType === &apos;do&apos; &amp;&amp; configState.config.doVoice) {
            utterance.voice = configState.config.doVoice;
        }
        
        speechSynthesis.speak(utterance);
    }
}

// Connect to Chaturbate Events API
function connectToEventAPI(url) {
    appState.apiEndpoint = url;
    
    addActivityItem(`Connecting to: ${url}`, &apos;event&apos;);
    connectionStatus.textContent = &apos;Connected&apos;;
    appState.connected = true;

    // Fetch broadcaster profile info if username is available
    if (configState.config.broadcasterName) {
        fetchBroadcasterProfile();
    }

    // Start polling for events
    getEvents(url);
}

// Recursive function to poll for events
function getEvents(url) {
    if (!appState.connected) return;
    
    fetch(url)
        .then(response =&gt; {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(jsonResponse =&gt; {
            // Process events
            if (jsonResponse.events &amp;&amp; Array.isArray(jsonResponse.events)) {
                for (const message of jsonResponse.events) {
                    processEvent(message);
                }
            }
            
            // Continue polling with the next URL
            if (jsonResponse.nextUrl) {
                getEvents(jsonResponse.nextUrl);
            } else {
                // If no nextUrl, wait a bit and retry with the same URL
                setTimeout(() =&gt; getEvents(url), 3000);
            }
        })
        .catch(error =&gt; {
            console.error(&quot;Error fetching events:&quot;, error);
            connectionStatus.textContent = &apos;Connection Error&apos;;
            addActivityItem(`Connection error: ${error.message}`, &apos;event&apos;);
            
            // Try to reconnect after a delay
            setTimeout(() =&gt; {
                if (appState.connected) {
                    getEvents(url);
                }
            }, 5000);
        });
}

// Disconnect from Chaturbate Events API
function disconnectFromEventAPI() {
    appState.connected = false;
    appState.apiEndpoint = null;
    connectionStatus.textContent = &apos;Disconnected&apos;;
    document.getElementById(&apos;scanResult&apos;).classList.add(&apos;hidden&apos;);
    addActivityItem(&apos;Disconnected from event stream&apos;, &apos;event&apos;);
}

// Process individual events from the API
function processEvent(message) {
    const method = message.method;
    const object = message.object;
    
    // Store the last event ID for potential reconnection
    if (message.id) {
        appState.lastEventId = message.id;
    }
    
    // Process different event types
    if (method === &quot;broadcastStart&quot;) {
        addActivityItem(&quot;Broadcast started&quot;, &apos;event&apos;);
    } else if (method === &quot;broadcastStop&quot;) {
        addActivityItem(&quot;Broadcast stopped&quot;, &apos;event&apos;);
    } else if (method === &quot;userEnter&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        addActivityItem(`${username} entered the room`, &apos;event&apos;);
        
        // Track user in user manager
        if (username !== &apos;Anonymous&apos;) {
            appState.userManager.addUser(username);
            appState.userManager.markUserOnline(username);
            updateUsersUI();
        }
    } else if (method === &quot;userLeave&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        addActivityItem(`${username} left the room`, &apos;event&apos;);
        
        // Update user status
        if (username !== &apos;Anonymous&apos;) {
            appState.userManager.markUserOffline(username);
            updateUsersUI();
        }
    } else if (method === &quot;follow&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        addActivityItem(`${username} has followed`, &apos;event&apos;);
        
        // Track user activity and mark active
        if (username !== &apos;Anonymous&apos;) {
            appState.userManager.addUser(username);
            appState.userManager.markUserActive(username);
            updateUsersUI();
        }
    } else if (method === &quot;unfollow&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        addActivityItem(`${username} has unfollowed`, &apos;event&apos;);
    } else if (method === &quot;fanclubJoin&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        addActivityItem(`${username} joined the fan club`, &apos;event&apos;);
        
        // Track user activity and mark active
        if (username !== &apos;Anonymous&apos;) {
            appState.userManager.addUser(username);
            appState.userManager.markUserActive(username);
            updateUsersUI();
        }
    } else if (method === &quot;chatMessage&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        const messageText = object.message.message || &apos;&apos;;
        const isFromBroadcaster = username.toLowerCase() === configState.config.broadcasterName.toLowerCase();
        
        if (isFromBroadcaster) {
            addActivityItem(`You: ${messageText}`, &apos;chat&apos;);
        } else {
            addActivityItem(`${username}: ${messageText}`, &apos;chat&apos;);
            
            // Track user message and mark active
            if (username !== &apos;Anonymous&apos;) {
                appState.userManager.addUser(username);
                appState.userManager.addUserMessage(username, messageText);
                appState.userManager.markUserActive(username);
                updateUsersUI();
            }
        }
    } else if (method === &quot;privateMessage&quot;) {
        const fromUser = object.message.fromUser || &apos;Anonymous&apos;;
        const toUser = object.message.toUser || &apos;Anonymous&apos;;
        const messageText = object.message.message || &apos;&apos;;
        addActivityItem(`${fromUser} sent private message to ${toUser}: ${messageText}`, &apos;chat&apos;);
        
        // Track private message and mark active
        if (fromUser !== &apos;Anonymous&apos;) {
            appState.userManager.addUser(fromUser);
            appState.userManager.addUserMessage(fromUser, messageText);
            appState.userManager.markUserActive(fromUser);
            updateUsersUI();
        }
    } else if (method === &quot;tip&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        const tokens = object.tip.tokens || 0;
        const isAnon = object.tip.isAnon || false;
        const message = object.tip.message || &apos;&apos;;
        
        let tipText = `${isAnon ? &apos;Anonymous&apos; : username} tipped ${tokens} tokens`;
        if (message) {
            tipText += ` with message: ${message}`;
        }
        
        addActivityItem(tipText, &apos;tip&apos;);
        
        // Track user tip and mark active
        if (!isAnon &amp;&amp; username !== &apos;Anonymous&apos;) {
            appState.userManager.addUser(username);
            appState.userManager.recordUserTip(username, tokens);
            appState.userManager.markUserActive(username);
            updateUsersUI();
        }
    } else if (method === &quot;roomSubjectChange&quot;) {
        const subject = object.subject || &apos;&apos;;
        addActivityItem(`Room Subject changed to ${subject}`, &apos;event&apos;);
    } else if (method === &quot;mediaPurchase&quot;) {
        const username = object.user.username || &apos;Anonymous&apos;;
        const mediaType = object.media.type || &apos;&apos;;
        const mediaName = object.media.name || &apos;&apos;;
        addActivityItem(`${username} purchased ${mediaType} set: ${mediaName}`, &apos;event&apos;);
        
        // Track user purchase and mark active
        if (username !== &apos;Anonymous&apos;) {
            appState.userManager.addUser(username);
            appState.userManager.markUserActive(username);
            updateUsersUI();
        }
    } else {
        addActivityItem(`Event: ${method}`, &apos;event&apos;);
    }
    
    // Generate AI coaching prompt if enough time has passed
    const now = new Date();
    const timeSinceLastPrompt = appState.lastPromptTimestamp 
        ? (now - appState.lastPromptTimestamp) / 1000 
        : configState.config.promptDelay + 1;
            
    if (timeSinceLastPrompt &gt; configState.config.promptDelay) {
        // Changed reference to CloudflareWorkerAPI.generateCoachingPrompt
        CloudflareWorkerAPI.default.generateCoachingPrompt(configState.config, appState.context, addPromptItem);
    }
}

// Setup the users section in the UI
// Configure the users section in the UI
function setupUsersSection() {
    // Get the existing users section
    usersSection = document.getElementById(&apos;usersSection&apos;);
    userList = document.getElementById(&apos;userList&apos;);

    if (usersSection &amp;&amp; userList) {
        // Show the section if it was hidden
        usersSection.classList.remove(&apos;hidden&apos;);

        // Initial UI update
        updateUsersUI();
        console.log(&apos;Users section configured and made visible&apos;);
    } else {
        console.error(&apos;Users section or user list not found in the DOM&apos;);
    }
    // Initial UI update
    updateUsersUI();
}


// Update the user interface with current user information
function updateUsersUI() {
    if (!userList) return;
    
    // Clear current list
    userList.innerHTML = &apos;&apos;;
    
    // Get sorted users
    const users = appState.userManager.getAllUsers();
    
    if (users.length === 0) {
        const noUsers = document.createElement(&apos;div&apos;);
        noUsers.className = &apos;no-users&apos;;
        noUsers.textContent = &apos;No users yet&apos;;
        userList.appendChild(noUsers);
        return;
    }
    
    // Create user items
    users.forEach(user =&gt; {
        const userItem = document.createElement(&apos;div&apos;);
        userItem.className = &apos;user-item&apos;;
        userItem.dataset.username = user.username;
        
        // Create summary (always visible)
        const summary = document.createElement(&apos;div&apos;);
        summary.className = `user-summary ${user.isOnline ? &apos;online&apos; : &apos;&apos;}`;
        
        const username = document.createElement(&apos;span&apos;);
        username.className = &apos;username&apos;;
        username.textContent = user.username;
        
        const status = document.createElement(&apos;span&apos;);
        status.className = &apos;status&apos;;
        status.textContent = user.isOnline ? &apos;● Online&apos; : &apos;○ Offline&apos;;
        
        const expandBtn = document.createElement(&apos;button&apos;);
        expandBtn.className = &apos;expand-button&apos;;
        expandBtn.textContent = &apos;▼&apos;;
        
        summary.appendChild(username);
        summary.appendChild(status);
        summary.appendChild(expandBtn);
        
        // Create details (initially hidden)
        const details = document.createElement(&apos;div&apos;);
        details.className = &apos;user-details&apos;;
        
        // Add detail rows
        details.innerHTML = `
            &lt;div class=&quot;detail-row&quot;&gt;
                &lt;label&gt;First Seen:&lt;/label&gt;
                &lt;span&gt;${new Date(user.firstSeenDate).toLocaleString()}&lt;/span&gt;
            &lt;/div&gt;
            &lt;div class=&quot;detail-row&quot;&gt;
                &lt;label&gt;Last Seen:&lt;/label&gt;
                &lt;span&gt;${new Date(user.lastSeenDate).toLocaleString()}&lt;/span&gt;
            &lt;/div&gt;
            &lt;div class=&quot;detail-row&quot;&gt;
                &lt;label&gt;Total Tips:&lt;/label&gt;
                &lt;span&gt;${user.amountTippedTotal || 0} tokens&lt;/span&gt;
            &lt;/div&gt;
            ${user.mostRecentTipAmount ? `
                &lt;div class=&quot;detail-row&quot;&gt;
                    &lt;label&gt;Last Tip:&lt;/label&gt;
                    &lt;span&gt;${user.mostRecentTipAmount} tokens (${user.mostRecentTipDatetime ? new Date(user.mostRecentTipDatetime).toLocaleString() : &apos;unknown&apos;})&lt;/span&gt;
                &lt;/div&gt;
            ` : &apos;&apos;}
            ${user.realName ? `
                &lt;div class=&quot;detail-row&quot;&gt;
                    &lt;label&gt;Real Name:&lt;/label&gt;
                    &lt;span&gt;${user.realName}&lt;/span&gt;
                &lt;/div&gt;
            ` : &apos;&apos;}
            ${user.realLocation ? `
                &lt;div class=&quot;detail-row&quot;&gt;
                    &lt;label&gt;Location:&lt;/label&gt;
                    &lt;span&gt;${user.realLocation}&lt;/span&gt;
                &lt;/div&gt;
            ` : &apos;&apos;}
            ${user.preferences ? `
                &lt;div class=&quot;detail-row&quot;&gt;
                    &lt;label&gt;Preferences:&lt;/label&gt;
                    &lt;span&gt;${user.preferences}&lt;/span&gt;
                &lt;/div&gt;
            ` : &apos;&apos;}
            ${user.interests ? `
                &lt;div class=&quot;detail-row&quot;&gt;
                    &lt;label&gt;Interests:&lt;/label&gt;
                    &lt;span&gt;${user.interests}&lt;/span&gt;
                &lt;/div&gt;
            ` : &apos;&apos;}
            ${user.numberOfPrivateShowsTaken ? `
                &lt;div class=&quot;detail-row&quot;&gt;
                    &lt;label&gt;Private Shows:&lt;/label&gt;
                    &lt;span&gt;${user.numberOfPrivateShowsTaken}&lt;/span&gt;
                &lt;/div&gt;
            ` : &apos;&apos;}
        `;
        
        // Add recent messages if available
        if (user.mostRecentlySaidThings &amp;&amp; user.mostRecentlySaidThings.length &gt; 0) {
            const messagesContainer = document.createElement(&apos;div&apos;);
            messagesContainer.className = &apos;detail-row&apos;;
            
            const label = document.createElement(&apos;label&apos;);
            label.textContent = &apos;Recent Messages:&apos;;
            
            const messagesList = document.createElement(&apos;ul&apos;);
            messagesList.className = &apos;recent-messages&apos;;
            
            user.mostRecentlySaidThings.slice(0, 5).forEach(message =&gt; {
                const listItem = document.createElement(&apos;li&apos;);
                listItem.textContent = message;
                messagesList.appendChild(listItem);
            });
            
            messagesContainer.appendChild(label);
            messagesContainer.appendChild(messagesList);
            details.appendChild(messagesContainer);
        }
        
        // Assemble the user item
        userItem.appendChild(summary);
        userItem.appendChild(details);
        userList.appendChild(userItem);
        
        // Add click event to toggle details
        summary.addEventListener(&apos;click&apos;, () =&gt; {
            details.classList.toggle(&apos;expanded&apos;);
            expandBtn.textContent = details.classList.contains(&apos;expanded&apos;) ? &apos;▲&apos; : &apos;▼&apos;;
        });
    });
}
// Fetch broadcaster profile information
async function fetchBroadcasterProfile() {
    if (!configState.config.broadcasterName) return;
    
    try {
        // This is a mock function as we can&apos;t directly access Chaturbate profiles
        // In a real implementation, you might use a proxy or alternative method
        addActivityItem(`Fetching profile info for ${configState.config.broadcasterName}...`, &apos;event&apos;);
        
        // For demo purposes, we&apos;ll just add this to context
        appState.broadcasterInfo = {
            username: configState.config.broadcasterName,
            // Other profile info would go here
        };
        
        addActivityItem(&apos;Profile information loaded&apos;, &apos;event&apos;);
    } catch (error) {
        console.error(&apos;Error fetching broadcaster profile:&apos;, error);
    }
}

    </content>
  </file>
  <file path="static/src/config.js">
    <name>config.js</name>
    <size>21108</size>
    <modified>2025-03-19T06:55:18.840Z</modified>
    <content>
      // Configuration handling for Broadcasting Real-Time Coach
import CloudflareWorkerAPI from &apos;./api/cloudflareWorker.js&apos;;
import UserManager from &apos;./user-manager.js&apos;;
import { loadModels } from &apos;./modelLoader.js&apos;;

// App State - Configuration related
const configState = {
    config: {
        aiModel: null, // Will be populated after loading models from backend

        broadcasterName: &apos;&apos;,
        promptLanguage: &apos;en-US&apos;,
        promptDelay: 5,
        preferences: &apos;&apos;,
        sessionKey: null,
        scannedUrl: &apos;&apos;, // New field to store scanned QR code URL
        sayVoice: null, // Voice for &quot;say&quot; prompts (things to repeat)
        doVoice: null   // Voice for &quot;do&quot; prompts (instructions)
    },

    // Method to update config
    updateConfig(newConfig) {
        this.config = { ...this.config, ...newConfig };
        localStorage.setItem(&apos;chatCoachConfig&apos;, JSON.stringify(this.config));
        return this.config;
    }
};

// DOM Elements
let configToggle;
let configSection;
let saveConfigBtn;
let apiTestResult;
let userManager;

// Initialize configuration module
async function initConfig() {
    // Get DOM elements
    configToggle = document.getElementById(&apos;configToggle&apos;);
    configSection = document.getElementById(&apos;configSection&apos;);
    saveConfigBtn = document.getElementById(&apos;saveConfig&apos;);

    // Initialize UserManager if it doesn&apos;t exist in window
    if (!window.userManager) {
        window.userManager = new UserManager();
    }
    userManager = window.userManager;

    // Add event listeners
    configToggle.addEventListener(&apos;click&apos;, toggleConfig);
    saveConfigBtn.addEventListener(&apos;click&apos;, saveConfig);
    document.getElementById(&apos;testApiConnection&apos;).addEventListener(&apos;click&apos;, testApiConnection);

    // Add voice selection UI
    addVoiceSelectionUI();

    // Add data export/import UI
    addDataManagementUI();

    // Load saved configuration
    loadConfig();

    // Load AI models from backend
    await loadModels();

    // Try to load session key from localStorage
    const sessionData = CloudflareWorkerAPI.loadSessionData();
    if (sessionData) {
        configState.config.sessionKey = sessionData.sessionKey;
    } else if (configState.config.broadcasterName) {
        // If we have a broadcaster name but no session, try to get a new session key
        try {
            const { sessionKey, expiresAt } = await CloudflareWorkerAPI.getSessionKey(
                &apos;user&apos;, // Default username
                configState.config.broadcasterName
            );
            configState.config.sessionKey = sessionKey;
            CloudflareWorkerAPI.saveSessionData(sessionKey, expiresAt);
        } catch (error) {
            console.error(&apos;Error getting session key during init:&apos;, error);
        }
    }
}

// Load saved configuration from localStorage
function loadConfig() {
    const savedConfig = localStorage.getItem(&apos;chatCoachConfig&apos;);
    if (savedConfig) {
        try {
            const parsedConfig = JSON.parse(savedConfig);
            configState.config = { ...configState.config, ...parsedConfig };

            // Don&apos;t populate aiModel here - it will be handled by modelLoader
            document.getElementById(&apos;scannedUrl&apos;).value = configState.config.scannedUrl || &apos;&apos;;
            document.getElementById(&apos;broadcasterName&apos;).value = configState.config.broadcasterName || &apos;&apos;;
            document.getElementById(&apos;promptLanguage&apos;).value = configState.config.promptLanguage || &apos;en-US&apos;;
            document.getElementById(&apos;promptDelay&apos;).value = configState.config.promptDelay || 5;
            document.getElementById(&apos;preferences&apos;).value = configState.config.preferences || &apos;&apos;;
        } catch (error) {
            console.error(&apos;Error loading saved configuration:&apos;, error);
        }
    }

    // Return the loaded config
    return configState.config;
}

// Save configuration to localStorage
async function saveConfig() {
    configState.config.aiModel = document.getElementById(&apos;aiModel&apos;).value;
    configState.config.scannedUrl = document.getElementById(&apos;scannedUrl&apos;).value;
    configState.config.broadcasterName = document.getElementById(&apos;broadcasterName&apos;).value;
    configState.config.promptLanguage = document.getElementById(&apos;promptLanguage&apos;).value;
    configState.config.promptDelay = parseInt(document.getElementById(&apos;promptDelay&apos;).value) || 5;
    configState.config.preferences = document.getElementById(&apos;preferences&apos;).value;

    // Save voice selections with null checks
    const sayVoiceSelect = document.getElementById(&apos;sayVoiceSelect&apos;);
    const doVoiceSelect = document.getElementById(&apos;doVoiceSelect&apos;);
    const voices = speechSynthesis.getVoices() || [];

    // Update voice settings in config
    if (sayVoiceSelect.value &amp;&amp; voices.length &gt; 0) {
        const voiceIndex = parseInt(sayVoiceSelect.value);
        if (voiceIndex &gt;= 0 &amp;&amp; voiceIndex &lt; voices.length) {
            configState.config.sayVoiceName = voices[voiceIndex].name;
            configState.config.sayVoiceLang = voices[voiceIndex].lang;
        }
    } else {
        configState.config.sayVoiceName = null;
        configState.config.sayVoiceLang = null;
    }

    if (doVoiceSelect.value &amp;&amp; voices.length &gt; 0) {
        const voiceIndex = parseInt(doVoiceSelect.value);
        if (voiceIndex &gt;= 0 &amp;&amp; voiceIndex &lt; voices.length) {
            configState.config.doVoiceName = voices[voiceIndex].name;
            configState.config.doVoiceLang = voices[voiceIndex].lang;
        }
    } else {
        configState.config.doVoiceName = null;
        configState.config.doVoiceLang = null;
    }

    // Ensure session key update doesn&apos;t block config save
    try {
        const { sessionKey, expiresAt } = await CloudflareWorkerAPI.getSessionKey(
            &apos;user&apos;,
            configState.config.broadcasterName
        );
        configState.config.sessionKey = sessionKey;
        CloudflareWorkerAPI.saveSessionData(sessionKey, expiresAt);
    } catch (error) {
        console.error(&apos;Error getting session key during save:&apos;, error);
        window.addActivityItem(&apos;Error refreshing session key, but configuration saved&apos;, &apos;event&apos;);
    } finally {
        // Always save config even if session key fails
        localStorage.setItem(&apos;chatCoachConfig&apos;, JSON.stringify(configState.config));
        window.addActivityItem(&apos;Configuration saved&apos;, &apos;event&apos;);
        configSection.classList.add(&apos;hidden&apos;);
    }

    // Return the updated config
    return configState.config;
}

// Toggle configuration section visibility
function toggleConfig() {
    configSection.classList.toggle(&apos;hidden&apos;);
}

/**
 * Add voice selection UI elements
 */
function addVoiceSelectionUI() {
    // Create voice settings section
    const settingsSection = document.getElementById(&apos;configSection&apos;);
    const voiceSection = document.createElement(&apos;div&apos;);
    voiceSection.className = &apos;settings-group&apos;;
    voiceSection.innerHTML = `
        &lt;h3&gt;Voice Settings&lt;/h3&gt;
        &lt;p&gt;Select different voices for different prompt types:&lt;/p&gt;
        &lt;div class=&quot;settings-row&quot;&gt;
            &lt;label for=&quot;sayVoiceSelect&quot;&gt;Say Voice:&lt;/label&gt;
            &lt;div class=&quot;voice-control&quot;&gt;
                &lt;select id=&quot;sayVoiceSelect&quot;&gt;&lt;/select&gt;
                &lt;button id=&quot;testSayVoice&quot; class=&quot;action-button&quot;&gt;Test&lt;/button&gt;
            &lt;/div&gt;
            &lt;p class=&quot;help-text&quot;&gt;&quot;Say&quot; voice is used for prompts that the broadcaster should repeat aloud.&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;settings-row&quot;&gt;
            &lt;label for=&quot;doVoiceSelect&quot;&gt;Do Voice:&lt;/label&gt;
            &lt;div class=&quot;voice-control&quot;&gt;
                &lt;select id=&quot;doVoiceSelect&quot;&gt;&lt;/select&gt;
                &lt;button id=&quot;testDoVoice&quot; class=&quot;action-button&quot;&gt;Test&lt;/button&gt;
            &lt;/div&gt;
            &lt;p class=&quot;help-text&quot;&gt;&quot;Do&quot; voice is used for instructions and actions the broadcaster should perform.&lt;/p&gt;
        &lt;/div&gt;
        &lt;div id=&quot;voiceLoadingStatus&quot; style=&quot;margin-top: 10px;&quot;&gt;&lt;/div&gt;
    `;

    // Add the voice section to the settings section
    settingsSection.appendChild(voiceSection);

    // Initialize voice selects
    initVoiceSelects();

    // Add test button event listeners
    document.getElementById(&apos;testSayVoice&apos;).addEventListener(&apos;click&apos;, () =&gt; testVoice(&apos;say&apos;));
    document.getElementById(&apos;testDoVoice&apos;).addEventListener(&apos;click&apos;, () =&gt; testVoice(&apos;do&apos;));
}

// Initialize voice selection dropdowns
function initVoiceSelects() {
    const voiceLoadingStatus = document.getElementById(&apos;voiceLoadingStatus&apos;);
    voiceLoadingStatus.textContent = &apos;Loading available voices...&apos;;

    // Function to populate voice selects
    function populateVoiceSelects() {
        const voices = speechSynthesis.getVoices();
        const saySelect = document.getElementById(&apos;sayVoiceSelect&apos;);
        const doSelect = document.getElementById(&apos;doVoiceSelect&apos;);

        if (voices.length === 0) {
            voiceLoadingStatus.textContent = &apos;No voices available. Try reloading the page.&apos;;
            return;
        }

        voiceLoadingStatus.textContent = `${voices.length} voices available.`;

        // Clear and populate both selects
        [saySelect, doSelect].forEach(select =&gt; {
            // Save the current selected value if any
            const currentValue = select.value;

            // Clear options
            select.innerHTML = &apos;&apos;;

            // Add default option
            const defaultOption = document.createElement(&apos;option&apos;);
            defaultOption.value = &apos;&apos;;
            defaultOption.textContent = &apos;Default Voice&apos;;
            select.appendChild(defaultOption);

            // Add voice options
            voices.forEach((voice, index) =&gt; {
                const option = document.createElement(&apos;option&apos;);
                option.value = index;
                option.textContent = `${voice.name} (${voice.lang})`;
                select.appendChild(option);
            });

            // Restore the previous value if it exists
            if (currentValue) {
                select.value = currentValue;
            }
        });

        // Try to select saved voices by name and language
        if (configState.config.sayVoiceName) {
            const sayVoiceIndex = voices.findIndex(voice =&gt;
                voice.name === configState.config.sayVoiceName &amp;&amp;
                voice.lang === configState.config.sayVoiceLang
            );

            if (sayVoiceIndex &gt;= 0) {
                saySelect.value = sayVoiceIndex;
                // Also set the actual voice object for immediate use
                configState.config.sayVoice = voices[sayVoiceIndex];
            }
        }

        if (configState.config.doVoiceName) {
            const doVoiceIndex = voices.findIndex(voice =&gt;
                voice.name === configState.config.doVoiceName &amp;&amp;
                voice.lang === configState.config.doVoiceLang
            );

            if (doVoiceIndex &gt;= 0) {
                doSelect.value = doVoiceIndex;
                // Also set the actual voice object for immediate use
                configState.config.doVoice = voices[doVoiceIndex];
            }
        }
    }

    // Try to load voices
    populateVoiceSelects();

    // Set up the event to load voices when they change
    if (speechSynthesis.onvoiceschanged !== undefined) {
        speechSynthesis.onvoiceschanged = populateVoiceSelects;
    }

    // Add change event listeners to save voice selections
    document.getElementById(&apos;sayVoiceSelect&apos;).addEventListener(&apos;change&apos;, (e) =&gt; {
        const voices = speechSynthesis.getVoices();
        const selectedIndex = e.target.value;
        configState.config.sayVoice = selectedIndex ? voices[selectedIndex] : null;
    });

    document.getElementById(&apos;doVoiceSelect&apos;).addEventListener(&apos;change&apos;, (e) =&gt; {
        const voices = speechSynthesis.getVoices();
        const selectedIndex = e.target.value;
        configState.config.doVoice = selectedIndex ? voices[selectedIndex] : null;
    });
}

// Test a selected voice
function testVoice(voiceType) {
    const selectId = voiceType === &apos;say&apos; ? &apos;sayVoiceSelect&apos; : &apos;doVoiceSelect&apos;;
    const select = document.getElementById(selectId);
    const selectedIndex = select.value;

    if (!selectedIndex) {
        // Using default voice
        const utterance = new SpeechSynthesisUtterance(
            voiceType === &apos;say&apos;
                ? &apos;This is the default &quot;Say&quot; voice test. Repeat this aloud.&apos;
                : &apos;This is the default &quot;Do&quot; voice test. This would be an instruction.&apos;
        );
        utterance.lang = configState.config.promptLanguage;
        speechSynthesis.speak(utterance);
        return;
    }

    const voices = speechSynthesis.getVoices();
    const selectedVoice = voices[selectedIndex];

    if (selectedVoice) {
        const sampleText = voiceType === &apos;say&apos;
            ? &apos;This is the &quot;Say&quot; voice test. Repeat this aloud.&apos;
            : &apos;This is the &quot;Do&quot; voice test. This would be an instruction.&apos;;

        const utterance = new SpeechSynthesisUtterance(sampleText);
        utterance.voice = selectedVoice;
        speechSynthesis.speak(utterance);
    } else {
        alert(&apos;Please select a valid voice or try reloading the page.&apos;);
    }
}

/**
 * Add data management UI elements
 */
function addDataManagementUI() {
    // Create data management section
    const settingsSection = document.getElementById(&apos;configSection&apos;);
    const dataSection = document.createElement(&apos;div&apos;);
    dataSection.className = &apos;settings-group&apos;;
    dataSection.innerHTML = `
        &lt;h3&gt;Data Management&lt;/h3&gt;
        &lt;div class=&quot;settings-row&quot;&gt;
            &lt;label&gt;Import/Export Data:&lt;/label&gt;
            &lt;div class=&quot;button-group&quot;&gt;
                &lt;button id=&quot;exportData&quot; class=&quot;action-button&quot;&gt;Export Data&lt;/button&gt;
                &lt;button id=&quot;importData&quot; class=&quot;action-button&quot;&gt;Import Data&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
&lt;div class=&quot;settings-row hidden&quot; id=&quot;importOptions&quot;&gt;
    &lt;label&gt;Import Options:&lt;/label&gt;
    &lt;div class=&quot;checkbox-group&quot;&gt;
        &lt;label class=&quot;switch&quot;&gt;
            &lt;input type=&quot;checkbox&quot; id=&quot;mergeData&quot; name=&quot;mergeData&quot;&gt;
            &lt;span class=&quot;slider round&quot;&gt;&lt;/span&gt;
        &lt;/label&gt;
        &lt;span&gt;Merge with existing data&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;div id=&quot;dataManagementResult&quot; class=&quot;result-box hidden&quot;&gt;&lt;/div&gt;
    `;

    // Add the data section to the settings section
    settingsSection.appendChild(dataSection);

    // Get DOM elements
    const exportButton = document.getElementById(&apos;exportData&apos;);
    const importButton = document.getElementById(&apos;importData&apos;);
    const dataResult = document.getElementById(&apos;dataManagementResult&apos;);
    const importOptions = document.getElementById(&apos;importOptions&apos;);
    const mergeCheckbox = document.getElementById(&apos;mergeData&apos;);

    // Add event listeners
    exportButton.addEventListener(&apos;click&apos;, () =&gt; {
        try {
            const blob = new Blob([userManager.exportData(configState.config)], { type: &apos;application/json&apos; });
            const url = URL.createObjectURL(blob);
            const a = document.createElement(&apos;a&apos;);
            a.href = url;
            a.download = `broadcasting-coach-data-${new Date().toISOString().slice(0,10)}.json`;
            a.click();

            // Show success message
            dataResult.textContent = &apos;Data exported successfully!&apos;;
            dataResult.style.backgroundColor = &apos;#d4edda&apos;;
            dataResult.classList.remove(&apos;hidden&apos;);

            // Hide after 3 seconds
            setTimeout(() =&gt; {
                dataResult.classList.add(&apos;hidden&apos;);
            }, 3000);
        } catch (error) {
            // Show error message
            dataResult.textContent = `Export failed: ${error.message}`;
            dataResult.style.backgroundColor = &apos;#f8d7da&apos;;
            dataResult.classList.remove(&apos;hidden&apos;);
        }
    });

    importButton.addEventListener(&apos;click&apos;, () =&gt; {
        // Toggle import options
        importOptions.classList.toggle(&apos;hidden&apos;);

        // Show file picker
        const input = document.createElement(&apos;input&apos;);
        input.type = &apos;file&apos;;
        input.accept = &apos;.json&apos;;

        input.addEventListener(&apos;change&apos;, (e) =&gt; {
            const file = e.target.files[0];
            if (!file) return;

            // Check file size
            if (file.size &gt; 10 * 1024 * 1024) {
                dataResult.textContent = &apos;File size exceeds 10MB limit&apos;;
                dataResult.style.backgroundColor = &apos;#f8d7da&apos;;
                dataResult.classList.remove(&apos;hidden&apos;);
                return;
            }

            // Read file
            const reader = new FileReader();
            reader.onload = (event) =&gt; {
                try {
                    // Get file content
                    const fileContent = event.target.result;

                    // Confirm import
                    if (confirm(&apos;This will replace your current data. Are you sure you want to proceed?&apos;)) {
                        // Import data
                        const mergeMode = mergeCheckbox.checked;
                        const result = userManager.importData(fileContent, configState, mergeMode);

                        if (result.success) {
                            // Show success message
                            dataResult.textContent = result.message;
                            dataResult.style.backgroundColor = &apos;#d4edda&apos;;
                            dataResult.classList.remove(&apos;hidden&apos;);

                            // Reload page after short delay
                            setTimeout(() =&gt; {
                                window.location.reload();
                            }, 1500);
                        } else {
                            // Show error message
                            dataResult.textContent = result.message;
                            dataResult.style.backgroundColor = &apos;#f8d7da&apos;;
                            dataResult.classList.remove(&apos;hidden&apos;);
                        }
                    }
                } catch (error) {
                    // Show error message
                    dataResult.textContent = `Import failed: ${error.message}`;
                    dataResult.style.backgroundColor = &apos;#f8d7da&apos;;
                    dataResult.classList.remove(&apos;hidden&apos;);
                }
            };

            reader.onerror = () =&gt; {
                dataResult.textContent = &apos;Error reading file&apos;;
                dataResult.style.backgroundColor = &apos;#f8d7da&apos;;
                dataResult.classList.remove(&apos;hidden&apos;);
            };

            reader.readAsText(file);
        });

        input.click();
    });
}

// Test backend API connection
async function testApiConnection() {
    // Initialize UI elements
    apiTestResult = document.getElementById(&apos;apiTestResult&apos;);
    apiTestResult.classList.remove(&apos;hidden&apos;);
    apiTestResult.style.backgroundColor = &apos;#f8f9fa&apos;;
    apiTestResult.textContent = &apos;Testing API connection...&apos;;

    try {
        // Step 1: Get Session Key using our CloudflareWorkerAPI
        const { sessionKey, expiresAt } = await CloudflareWorkerAPI.getSessionKey(
            &apos;test_user&apos;,
            configState.config.broadcasterName || &apos;test_broadcaster&apos;
        );

        if (!sessionKey || !expiresAt) {
            throw new Error(&apos;Invalid session key response&apos;);
        }

        // Update the config with this session key
        configState.config.sessionKey = sessionKey;
        CloudflareWorkerAPI.saveSessionData(sessionKey, expiresAt);

        // Step 2: Test Generate Prompt
        const testContext = [{
            type: &apos;chat&apos;,
            text: &apos;test_user says hello!&apos;,
            timestamp: new Date().toISOString()
        }];

        // Use current config with our new session key
        const result = await CloudflareWorkerAPI.generateCoachingPrompt(
            configState.config,
            testContext,
            null // No callback needed for test
        );

        if (!result) {
            throw new Error(&apos;Failed to generate prompt&apos;);
        }

        // Update UI with success
        apiTestResult.style.backgroundColor = &apos;#d4edda&apos;;
        apiTestResult.textContent = &apos;API connection test successful!&apos;;
        apiTestResult.innerHTML += `
            &lt;div class=&quot;test-details&quot;&gt;
                &lt;p&gt;Session Key: ${sessionKey}&lt;/p&gt;
                &lt;p&gt;Expires At: ${expiresAt}&lt;/p&gt;
                &lt;p&gt;Test Result: ${result}&lt;/p&gt;
            &lt;/div&gt;
        `;

    } catch (error) {
        // Handle errors
        apiTestResult.style.backgroundColor = &apos;#f8d7da&apos;;
        apiTestResult.textContent = `Error: ${error.message}`;
        console.error(&apos;API Test Error:&apos;, error);
    }
}

// Factory reset function to clear all local storage
function clearLocalStorage() {
    localStorage.removeItem(&apos;chatCoachConfig&apos;);
    localStorage.removeItem(&apos;broadcastCoachUsers&apos;);
    localStorage.removeItem(&apos;broadcastCoachBackup&apos;);
    localStorage.removeItem(&apos;chatCoachSession&apos;);
    window.addActivityItem(&apos;Local storage cleared&apos;, &apos;event&apos;);
}

// Export functions and state
export {
    initConfig,
    loadConfig,
    saveConfig,
    toggleConfig,
    testApiConnection,
    configState,
    clearLocalStorage
};

    </content>
  </file>
  <file path="static/src/data-manager.js">
    <name>data-manager.js</name>
    <size>7064</size>
    <modified>2025-03-14T07:50:54.884Z</modified>
    <content>
      // Data management for Broadcasting Real-Time Coach
// Handles export/import functionality

/**
 * Validates imported data structure
 * @param {Object} data - The parsed JSON data
 * @returns {Object} - Validation result {valid: boolean, error: string}
 */
export function validateImportData(data) {
    if (!data) {
        return {valid: false, error: &apos;No data provided&apos;};
    }

    // Check version
    if (!data.version || data.version !== &apos;1.0&apos;) {
        return {valid: false, error: &apos;Invalid data version. Expected: 1.0&apos;};
    }

    // Check timestamp
    if (!data.timestamp || !isValidISODate(data.timestamp)) {
        return {valid: false, error: &apos;Invalid or missing timestamp&apos;};
    }

    // Check users array
    if (!Array.isArray(data.users)) {
        return {valid: false, error: &apos;Users data must be an array&apos;};
    }

    // Check settings object
    if (!data.settings || typeof data.settings !== &apos;object&apos;) {
        return {valid: false, error: &apos;Settings data must be an object&apos;};
    }

    // Required settings fields
    const requiredSettingsFields = [&apos;broadcasterName&apos;, &apos;promptLanguage&apos;, &apos;promptDelay&apos;, &apos;scannedUrl&apos;];
    const missingSettings = requiredSettingsFields.filter(field =&gt; !data.settings.hasOwnProperty(field));
    if (missingSettings.length &gt; 0) {
        return {valid: false, error: `Missing required settings: ${missingSettings.join(&apos;, &apos;)}`};
    }

    // Validate each user
    for (let i = 0; i &lt; data.users.length; i++) {
        const user = data.users[i];
        const userValidation = validateUserData(user);
        if (!userValidation.valid) {
            return {valid: false, error: `Invalid user at index ${i}: ${userValidation.error}`};
        }
    }

    return {valid: true};
}

/**
 * Validates user data
 * @param {Object} user - The user object
 * @returns {Object} - Validation result {valid: boolean, error: string}
 */
function validateUserData(user) {
    // Required user fields with their expected types
    const requiredFields = {
        &apos;username&apos;: &apos;string&apos;,
        &apos;firstSeenDate&apos;: &apos;isodate&apos;,
        &apos;lastSeenDate&apos;: &apos;isodate&apos;,
        &apos;mostRecentlySaidThings&apos;: &apos;array&apos;,
        &apos;amountTippedTotal&apos;: &apos;number&apos;,
        &apos;mostRecentTipAmount&apos;: &apos;number&apos;,
        &apos;mostRecentTipDatetime&apos;: &apos;isodate|null&apos;,
        &apos;realName&apos;: &apos;string|null&apos;,
        &apos;realLocation&apos;: &apos;string|null&apos;,
        &apos;preferences&apos;: &apos;string|null&apos;,
        &apos;interests&apos;: &apos;string|null&apos;,
        &apos;numberOfPrivateShowsTaken&apos;: &apos;number&apos;,
        &apos;isOnline&apos;: &apos;boolean&apos;
    };

    // Check each required field
    for (const [field, type] of Object.entries(requiredFields)) {
        // Check if field exists
        if (!user.hasOwnProperty(field)) {
            return {valid: false, error: `Missing required field: ${field}`};
        }

        // Check field type
        if (!isValidFieldType(user[field], type)) {
            return {valid: false, error: `Invalid type for field ${field}. Expected: ${type}, Got: ${typeof user[field]}`};
        }
    }

    return {valid: true};
}

/**
 * Checks if a value matches the expected type
 * @param {any} value - The value to check
 * @param {string} type - The expected type
 * @returns {boolean} - True if valid, false otherwise
 */
function isValidFieldType(value, type) {
    // Handle null values for nullable types
    if (value === null &amp;&amp; type.includes(&apos;null&apos;)) {
        return true;
    }

    // Check against possible types
    const types = type.split(&apos;|&apos;);
    for (const t of types) {
        switch (t) {
            case &apos;string&apos;:
                if (typeof value === &apos;string&apos;) return true;
                break;
            case &apos;number&apos;:
                if (typeof value === &apos;number&apos;) return true;
                break;
            case &apos;boolean&apos;:
                if (typeof value === &apos;boolean&apos;) return true;
                break;
            case &apos;array&apos;:
                if (Array.isArray(value)) return true;
                break;
            case &apos;isodate&apos;:
                if (isValidISODate(value)) return true;
                break;
        }
    }

    return false;
}

/**
 * Checks if a string is a valid ISO date
 * @param {string} dateString - The date string to check
 * @returns {boolean} - True if valid, false otherwise
 */
function isValidISODate(dateString) {
    if (typeof dateString !== &apos;string&apos;) return false;
    
    // Allow null for optional date fields
    if (dateString === null) return true;
    
    // Try parsing the date
    const date = new Date(dateString);
    return !isNaN(date) &amp;&amp; dateString.includes(&apos;T&apos;);
}

/**
 * Creates a backup of current data
 * @param {Object} userData - User data to backup
 * @param {Object} configData - Config data to backup
 * @returns {string} - JSON string of backup data
 */
export function createBackup(userData, configData) {
    const backup = {
        version: &apos;1.0&apos;,
        timestamp: new Date().toISOString(),
        users: userData,
        settings: configData,
        backupType: &apos;pre-import&apos;
    };
    
    return JSON.stringify(backup, null, 2);
}

/**
 * Checks if a file size is within the limit
 * @param {number} size - File size in bytes
 * @param {number} limit - Size limit in bytes (default: 10MB)
 * @returns {boolean} - True if within limit, false otherwise
 */
export function isFileSizeValid(size, limit = 10 * 1024 * 1024) {
    return size &lt;= limit;
}

/**
 * Merge imported users with existing users
 * @param {Array} existingUsers - Array of existing user objects
 * @param {Array} importedUsers - Array of imported user objects
 * @returns {Array} - Merged user array
 */
export function mergeUsers(existingUsers, importedUsers) {
    const mergedUsers = [...existingUsers];
    const existingUsernames = new Set(existingUsers.map(user =&gt; user.username));
    
    // Process each imported user
    for (const importedUser of importedUsers) {
        if (existingUsernames.has(importedUser.username)) {
            // Update existing user
            const existingIndex = mergedUsers.findIndex(u =&gt; u.username === importedUser.username);
            const existingUser = mergedUsers[existingIndex];
            
            // Keep most recent data
            const merged = {
                ...existingUser,
                ...importedUser,
                // Special handling for arrays and incrementing values
                mostRecentlySaidThings: [...new Set([...importedUser.mostRecentlySaidThings, ...existingUser.mostRecentlySaidThings])],
                amountTippedTotal: Math.max(existingUser.amountTippedTotal, importedUser.amountTippedTotal),
                // Use newer date
                lastSeenDate: new Date(existingUser.lastSeenDate) &gt; new Date(importedUser.lastSeenDate) 
                    ? existingUser.lastSeenDate : importedUser.lastSeenDate
            };
            
            mergedUsers[existingIndex] = merged;
        } else {
            // Add new user
            mergedUsers.push(importedUser);
            existingUsernames.add(importedUser.username);
        }
    }
    
    return mergedUsers;
}

    </content>
  </file>
  <file path="static/src/modelLoader.js">
    <name>modelLoader.js</name>
    <size>2179</size>
    <modified>2025-03-17T03:43:56.693Z</modified>
    <content>
      // Model loader functionality for fetching and populating model selection

import { configState } from &apos;./config.js&apos;;

/**
 * Fetch models from the backend API and populate the select dropdown
 */
export async function loadModels() {
  const select = document.getElementById(&apos;aiModel&apos;);
  
  try {
    // Fetch models from the backend
    const response = await fetch(&apos;/api/get-models&apos;);
    if (!response.ok) throw new Error(`Failed to fetch models: ${response.status} ${response.statusText}`);
    
    const models = await response.json();
    
    // Clear loading option
    select.innerHTML = &apos;&apos;;
    
    // Populate with models
    models.forEach(model =&gt; {
      const option = document.createElement(&apos;option&apos;);
      option.value = model.id;
      option.textContent = `${model.name} (${model.description})`;
      select.appendChild(option);
    });
    
    // Store models for future reference
    window.availableAIModels = models;
    
    // Set default model (first in the list if no other specified)
    const defaultModel = models.length &gt; 0 ? models[0].id : null;
    
    // Set selection based on saved config or default
    const savedModel = configState.config.aiModel || defaultModel;
    
    // If the saved model is in the list, select it
    const modelExists = Array.from(select.options).some(option =&gt; option.value === savedModel);
    select.value = modelExists ? savedModel : defaultModel;
    
    // Update config if model doesn&apos;t exist
    if (!modelExists &amp;&amp; savedModel !== defaultModel) {
      configState.config.aiModel = defaultModel;
      localStorage.setItem(&apos;chatCoachConfig&apos;, JSON.stringify(configState.config));
    }
    
    return models;
  } catch (error) {
    console.error(&apos;Error loading models:&apos;, error);
    
    // Show error in select
    select.innerHTML = &apos;&lt;option value=&quot;error&quot;&gt;Error loading models&lt;/option&gt;&apos;;
    
    // Fallback to first model if available
    if (select.options.length &gt; 0) {
      select.innerHTML = &apos;&lt;option value=&quot;error&quot;&gt;Error loading models - using fallback&lt;/option&gt;&apos;;
      configState.config.aiModel = &apos;@cf/meta/llama-3.2-1b-instruct&apos;; // Hardcoded fallback
    }
    
    return null;
  }
}

    </content>
  </file>
  <file path="static/src/models.js">
    <name>models.js</name>
    <size>1588</size>
    <modified>2025-03-17T03:38:49.179Z</modified>
    <content>
      // Centralized AI model configuration

export const AI_MODELS = [
    {
        id: &apos;@cf/meta/llama-3.2-1b-instruct&apos;,
        provider: &apos;Cloudflare-Worker-AI&apos;,
        name: &apos;Llama 3.2 1B&apos;,
        description: &apos;Basic fast&apos;
    },
    {
        id: &apos;@cf/meta/llama-3.3-70b-instruct-fp8-fast&apos;,
        provider: &apos;Cloudflare-Worker-AI&apos;,
        name: &apos;Llama 3.3 70B FP8 Fast&apos;,
        description: &apos;Fast but better for complex prompts&apos;
    },
    {
        id: &apos;@hf/mistral/mistral-7b-instruct-v0.2&apos;,
        provider: &apos;Cloudflare-Worker-AI&apos;,
        name: &apos;Mistral 7B Instruct v0.2&apos;,
        description: &apos;Fast, adult-friendly&apos;
    },
    // Commented out models for future use
    // {
    //   id: &apos;meta-llama/llama-3.2-3b-instruct:free&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Llama 3.2 3B Instruct&apos;,
    //   description: &apos;Fast free model with basic capabilities&apos;
    // },
    // {
    //   id: &apos;google/gemini-2.0-flash-lite-001&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Gemini 2.0 Flash Lite&apos;,
    //   description: &apos;Fast and affordable option&apos;
    // },
    // {
    //   id: &apos;mistralai/mistral-small-24b-instruct-2501&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Mistral Small&apos;,
    //   description: &apos;Adult-friendly model with good performance&apos;
    // },
    // {
    //   id: &apos;anthropic/claude-3.7-sonnet&apos;,
    //   provider: &apos;OpenRouter.AI&apos;,
    //   name: &apos;Claude 3.7 Sonnet&apos;,
    //   description: &apos;Smart but expensive premium option&apos;
    // }
];

// Export the default model (first in the list)
export const DEFAULT_MODEL = AI_MODELS[0].id;

    </content>
  </file>
  <file path="static/src/qr-scanner.js">
    <name>qr-scanner.js</name>
    <size>4878</size>
    <modified>2025-03-14T07:19:54.173Z</modified>
    <content>
      // QR Scanner Module for Broadcasting Real-Time Coach
import { configState } from &apos;./config.js&apos;;

// State related to QR scanning
const scannerState = {
    scanning: false
};

// DOM Elements
let qrScanner;
let qrCanvas;
let startScanBtn;
let scanResult;
let apiEndpointEl;

// Initialize QR scanner module
function initQRScanner(onQRCodeDetected) {
    // Get DOM elements
    qrScanner = document.getElementById(&apos;qrScanner&apos;);
    qrCanvas = document.getElementById(&apos;qrCanvas&apos;);
    startScanBtn = document.getElementById(&apos;startScan&apos;);
    scanResult = document.getElementById(&apos;scanResult&apos;);
    apiEndpointEl = document.getElementById(&apos;apiEndpoint&apos;);
    
    // Add event listeners
    startScanBtn.addEventListener(&apos;click&apos;, () =&gt; {
        if (!scannerState.scanning) {
            startQRScanner(onQRCodeDetected);
        } else {
            stopQRScanner();
        }
    });
}

// Start QR code scanner
async function startQRScanner(onQRCodeDetected) {
    if (!scannerState.scanning) {
        try {
            const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: &quot;environment&quot; } });
            qrScanner.srcObject = stream;
            await qrScanner.play();
            scannerState.scanning = true;
            startScanBtn.textContent = &apos;Cancel Scan&apos;;
            qrScanner.classList.remove(&apos;hidden&apos;);
            scanForQRCode(onQRCodeDetected);
        } catch (error) {
            console.error(&apos;Error accessing camera:&apos;, error);
            window.addActivityItem(&apos;Error accessing camera. Please check permissions.&apos;, &apos;event&apos;);
        }
    } else {
        stopQRScanner();
        startScanBtn.textContent = &apos;Scan QR Code&apos;;
    }
}

// Stop QR code scanner
function stopQRScanner() {
    if (qrScanner.srcObject) {
        qrScanner.srcObject.getTracks().forEach(track =&gt; track.stop());
        qrScanner.srcObject = null;
    }
    scannerState.scanning = false;
    qrScanner.classList.add(&apos;hidden&apos;);
}

// Scan for QR code in video stream
function scanForQRCode(onQRCodeDetected) {
    if (!scannerState.scanning) return;

    const context = qrCanvas.getContext(&apos;2d&apos;, { willReadFrequently: true });
    qrCanvas.width = qrScanner.videoWidth;
    qrCanvas.height = qrScanner.videoHeight;
    
    if (qrScanner.videoWidth === 0) {
        // Video not ready yet, try again soon
        requestAnimationFrame(() =&gt; scanForQRCode(onQRCodeDetected));
        return;
    }

    context.drawImage(qrScanner, 0, 0, qrCanvas.width, qrCanvas.height);
    const imageData = context.getImageData(0, 0, qrCanvas.width, qrCanvas.height);
    
    try {
        const code = jsQR(imageData.data, imageData.width, imageData.height);
        
        if (code) {
            // QR code detected
            const url = code.data;
            if (url.includes(&apos;eventsapi.chaturbate.com/events/&apos;)) {
                stopQRScanner();
                if (onQRCodeDetected &amp;&amp; typeof onQRCodeDetected === &apos;function&apos;) {
                    onQRCodeDetected(url);
                }
                displayQRCodeResult(url);
            } else {
                window.addActivityItem(&apos;Invalid QR code. Please scan a valid Chaturbate events API QR code.&apos;, &apos;event&apos;);
                requestAnimationFrame(() =&gt; scanForQRCode(onQRCodeDetected));
            }
        } else {
            // No QR code found, continue scanning
            requestAnimationFrame(() =&gt; scanForQRCode(onQRCodeDetected));
        }
    } catch (error) {
        console.error(&apos;Error scanning QR code:&apos;, error);
        requestAnimationFrame(() =&gt; scanForQRCode(onQRCodeDetected));
    }
}

// Display QR code scan result
function displayQRCodeResult(url) {
    // Store URL in config
    configState.config.scannedUrl = url;
    
    // Parse broadcaster name from URL
    // Format: https://eventsapi.chaturbate.com/events/username/token/
    const urlParts = url.split(&apos;/&apos;);
    if (urlParts.length &gt;= 5) {
        const username = urlParts[4]; // Get the part after &apos;events&apos;
        configState.config.broadcasterName = username;
        
        // Save the updated configuration
        localStorage.setItem(&apos;chatCoachConfig&apos;, JSON.stringify(configState.config));
        window.addActivityItem(`Broadcaster username set to: ${username}`, &apos;event&apos;);
        
        // Update UI elements
        const broadcasterNameInput = document.getElementById(&apos;broadcasterName&apos;);
        if (broadcasterNameInput) {
            broadcasterNameInput.value = username;
        }
        
        const scannedUrlInput = document.getElementById(&apos;scannedUrl&apos;);
        if (scannedUrlInput) {
            scannedUrlInput.value = url;
        }
    }
    
    // Show scan result
    apiEndpointEl.textContent = url;
    scanResult.classList.remove(&apos;hidden&apos;);
}

// Export functions and state
export {
    initQRScanner,
    startQRScanner,
    stopQRScanner,
    scannerState
};

    </content>
  </file>
  <file path="static/src/user-manager.js">
    <name>user-manager.js</name>
    <size>10310</size>
    <modified>2025-03-14T08:02:13.321Z</modified>
    <content>
      // User management system for Broadcasting Real-Time Coach
// Tracks users and their interactions in the broadcast
import { validateImportData, createBackup, isFileSizeValid, mergeUsers } from &apos;./data-manager.js&apos;;

export class UserManager {
    constructor() {
        this.users = new Map();
        this.saveDebounceTimeout = null;
        this.maxChatHistory = 50; // Limit chat history per user
        this.loadUsers();
    }

    // Add a new user if they don&apos;t already exist
    addUser(username) {
        if (!username || typeof username !== &apos;string&apos; || username === &apos;Anonymous&apos;) return;
        
        if (!this.users.has(username)) {
            const newUser = this.getDefaultUser(username);
            this.users.set(username, newUser);
            this.debouncedSave();
            return true;
        }
        return false;
    }

    // Update an existing user&apos;s information
    updateUser(username, updates) {
        if (!username || username === &apos;Anonymous&apos;) return false;
        
        let user = this.users.get(username);
        if (!user) {
            user = this.getDefaultUser(username);
            this.users.set(username, user);
        }
        
        // Special handling for chat messages
        if (updates.recentMessage) {
            user.mostRecentlySaidThings.unshift(updates.recentMessage);
            if (user.mostRecentlySaidThings.length &gt; this.maxChatHistory) {
                user.mostRecentlySaidThings.pop();
            }
            delete updates.recentMessage;
        }
        
        // Handle tip updates
        if (updates.tipAmount) {
            user.amountTippedTotal += updates.tipAmount;
            user.mostRecentTipAmount = updates.tipAmount;
            user.mostRecentTipDatetime = new Date().toISOString();
            delete updates.tipAmount;
        }
        
        // Apply remaining updates
        Object.assign(user, updates);
        
        // Always update last seen date on any update
        user.lastSeenDate = new Date().toISOString();
        
        this.debouncedSave();
        return true;
    }

    // Get user by username
    getUser(username) {
        return this.users.get(username);
    }

    // Get all users, sorted by online status and then last seen date
    getAllUsers() {
        return Array.from(this.users.values()).sort((a, b) =&gt; {
            // Online users first
            if (a.isOnline &amp;&amp; !b.isOnline) return -1;
            if (!a.isOnline &amp;&amp; b.isOnline) return 1;
            
            // Then sort by last seen date (most recent first)
            return new Date(b.lastSeenDate) - new Date(a.lastSeenDate);
        });
    }

    // Mark a user as active and online
    markUserActive(username) {
        return this.updateUser(username, { isOnline: true });
    }

    // Mark a user as online
    markUserOnline(username) {
        return this.markUserActive(username);
    }

    // Mark a user as offline
    markUserOffline(username) {
        return this.updateUser(username, { isOnline: false });
    }

    // Add a message to a user&apos;s recent messages
    addUserMessage(username, message) {
        return this.updateUser(username, { recentMessage: message });
    }

    // Record a tip from a user
    recordUserTip(username, amount) {
        return this.updateUser(username, { tipAmount: amount });
    }

    // Debounce save operations to avoid excessive localStorage writes
    debouncedSave() {
        clearTimeout(this.saveDebounceTimeout);
        this.saveDebounceTimeout = setTimeout(() =&gt; this.saveUsers(), 1000);
    }

    // Save all users to localStorage
    saveUsers() {
        try {
            const usersArray = Array.from(this.users).map(([key, value]) =&gt; {
                return [key, {
                    ...value,
                    // Ensure we don&apos;t store too many messages per user
                    mostRecentlySaidThings: value.mostRecentlySaidThings.slice(0, this.maxChatHistory)
                }];
            });
            localStorage.setItem(&apos;broadcastCoachUsers&apos;, JSON.stringify(usersArray));
        } catch (error) {
            console.error(&apos;Error saving users:&apos;, error);
            this.handleStorageError(error);
        }
    }

    // Handle localStorage errors
    handleStorageError(error) {
        if (error.name === &apos;QuotaExceededError&apos;) {
            // Implement cleanup strategy - remove half of the least recently seen users
            const sortedUsers = Array.from(this.users.entries())
                .sort((a, b) =&gt; new Date(a[1].lastSeenDate) - new Date(b[1].lastSeenDate));
            
            const usersToKeep = sortedUsers.slice(Math.floor(sortedUsers.length / 2));
            this.users = new Map(usersToKeep);
            this.saveUsers();
        }
    }

    // Load users from localStorage
    loadUsers() {
        try {
            const storedUsers = localStorage.getItem(&apos;broadcastCoachUsers&apos;);
            if (storedUsers) {
                const parsedUsers = JSON.parse(storedUsers);
                this.users = new Map(parsedUsers.map(([key, value]) =&gt; {
                    // Ensure all fields exist with proper defaults
                    return [key, {
                        ...this.getDefaultUser(key),
                        ...value,
                        // Reset online status on load
                        isOnline: false
                    }];
                }));
            }
        } catch (error) {
            console.error(&apos;Error loading users:&apos;, error);
            this.users = new Map();
        }
    }
    
    /**
     * Export all data as JSON
     * @param {Object} configData - Configuration data to include
     * @returns {string} - JSON string of exported data
     */
    exportData(configData) {
        const data = {
            version: &quot;1.0&quot;,
            timestamp: new Date().toISOString(),
            users: this.getAllUsers(),
            settings: configData
        };
        return JSON.stringify(data, null, 2);
    }
    
    /**
     * Import data from JSON
     * @param {string} jsonData - JSON string to import
     * @param {Object} configState - Configuration state object to update
     * @param {boolean} merge - Whether to merge with existing data
     * @returns {Object} - Result {success: boolean, message: string}
     */
    importData(jsonData, configState, merge = false) {
        try {
            // Check file size (approximate check based on string length)
            if (!isFileSizeValid(jsonData.length)) {
                return { success: false, message: &apos;File size exceeds 10MB limit&apos; };
            }
            
            // Parse data
            const data = JSON.parse(jsonData);
            
            // Validate data structure
            const validation = validateImportData(data);
            if (!validation.valid) {
                return { success: false, message: validation.error };
            }
            
            // Create backup before import
            const backupData = this.getAllUsers();
            const backupConfig = { ...configState.config };
            const backup = createBackup(backupData, backupConfig);
            localStorage.setItem(&apos;broadcastCoachBackup&apos;, backup);
            
            if (merge) {
                // Merge users instead of replacing
                const currentUsers = this.getAllUsers();
                const mergedUsers = mergeUsers(currentUsers, data.users);
                
                // Clear existing data
                this.clearAllUsers();
                
                // Import merged users
                mergedUsers.forEach(user =&gt; this.addUserObject(user));
            } else {
                // Clear existing data
                this.clearAllUsers();
                
                // Import users
                data.users.forEach(user =&gt; this.addUserObject(user));
            }
            
            // Update settings
            configState.updateConfig(data.settings);
            
            return { success: true, message: &apos;Data imported successfully&apos; };
        } catch (error) {
            console.error(&apos;Import failed:&apos;, error);
            return { success: false, message: `Import failed: ${error.message}` };
        }
    }
    
    /**
     * Add a user object directly (for import)
     * @param {Object} userObject - Complete user object
     * @returns {boolean} - Success status
     */
    addUserObject(userObject) {
        if (!userObject || !userObject.username) return false;
        
        this.users.set(userObject.username, {
            ...this.getDefaultUser(userObject.username),
            ...userObject,
            // Reset online status on import
            isOnline: false
        });
        
        this.debouncedSave();
        return true;
    }
    
    /**
     * Clear all user data
     * @returns {boolean} - Success status
     */
    clearAllUsers() {
        this.users = new Map();
        this.debouncedSave();
        return true;
    }
    
    /**
     * Restore from backup
     * @param {Object} configState - Configuration state object to update
     * @returns {Object} - Result {success: boolean, message: string}
     */
    restoreFromBackup(configState) {
        try {
            const backup = localStorage.getItem(&apos;broadcastCoachBackup&apos;);
            if (!backup) {
                return { success: false, message: &apos;No backup found&apos; };
            }
            
            return this.importData(backup, configState);
        } catch (error) {
            console.error(&apos;Restore failed:&apos;, error);
            return { success: false, message: `Restore failed: ${error.message}` };
        }
    }

    // Default user object template
    getDefaultUser(username) {
        return {
            username,
            firstSeenDate: new Date().toISOString(),
            lastSeenDate: new Date().toISOString(),
            mostRecentlySaidThings: [],
            amountTippedTotal: 0,
            mostRecentTipAmount: 0,
            mostRecentTipDatetime: null,
            realName: null,
            realLocation: null,
            preferences: &apos;&apos;,
            interests: &apos;&apos;,
            numberOfPrivateShowsTaken: 0,
            isOnline: false
        };
    }
}

export default UserManager;

    </content>
  </file>
  <file path="static/styles/main.css">
    <name>main.css</name>
    <size>14038</size>
    <modified>2025-03-17T07:37:37.850Z</modified>
    <content>
      /* Global Styles */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: &apos;Segoe UI&apos;, Tahoma, Geneva, Verdana, sans-serif;
}
body {
    background-color: #f5f5f5;
    color: #333;
    line-height: 1.6;
}
.app-container {
    max-width: 100%;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

/* Header Styles */
header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    border-bottom: 1px solid #ddd;
    margin-bottom: 1rem;
}
h1 {
    font-size: 1.8rem;
    color: #333;
}
.config-section.hidden {
    display: none;
}

/* Footer Styles */
.footer {
    background-color: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    margin-top: 1.5rem;
    text-align: center;
}
.footer-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}
.footer a {
    color: #4a90e2;
    text-decoration: none;
    font-weight: bold;
    transition: color 0.3s;
}
.footer a:hover {
    color: #3a80d2;
    text-decoration: underline;
}
.copyright {
    font-size: 0.9rem;
    color: #666;
    margin-top: 0.5rem;
}
@media (max-width: 600px) {
    .footer {
        padding: 1rem;
    }
}

/* Main Content Container */
.main-content {
    display: grid;
    grid-template-columns: 1fr; /* Single column layout by default */
    gap: 1.5rem;
    flex-grow: 1;
}

/* Activity, Prompt, and Users Sections */
.activity-section,
.prompt-section,
#usersSection {
    background-color: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
}

/* Section Titles */
.activity-section h2,
.prompt-section h2,
#usersSection h2 {
    font-size: 1.4rem;
    margin-bottom: 1rem;
    color: #444;
    border-bottom: 2px solid #4a90e2;
    padding-bottom: 0.75rem;
}

/* Feed Styling */
.feed {
    flex-grow: 1;
    overflow-y: auto;
    max-height: 300px;
    border: 1px solid #eee;
    padding: 1rem;
    border-radius: 4px;
    background-color: #fafafa;
    margin-bottom: 1rem;
}

/* Feed Items */
.feed-item {
    padding: 0.8rem;
    border-bottom: 1px solid #eee;
    font-size: 1rem;
}
.feed-item:last-child {
    border-bottom: none;
}
.feed-item.event {
    color: #666;
    font-style: italic;
}
.feed-item.chat {
    color: #333;
}
.feed-item.tip {
    color: #28a745;
    font-weight: bold;
}
.feed-item.prompt {
    position: relative;
    color: #4a90e2;
    font-weight: bold;
    padding-left: 50px; /* Make space for the voice indicator */
}

/* Audio Controls */
.audio-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

/* Status Bar */
.status-bar {
    display: flex;
    justify-content: space-between;
    padding: 1rem 0;
    border-top: 1px solid #ddd;
    margin-top: 1rem;
    font-size: 0.9rem;
    color: #666;
}



/* User List */
.user-list {
    flex-grow: 1;
    overflow-y: auto;
    max-height: 100%;
    border: 1px solid #eee;
    border-radius: 4px;
    background-color: #fafafa;
    margin-bottom: 1rem;
}

/* User Item */
.user-item {
    margin-bottom: 8px;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    overflow: hidden;
    transition: box-shadow 0.3s;
}
.user-item:hover {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Hover effect */
}

/* User Summary */
.user-summary {
    padding: 12px;
    background-color: #f0f0f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    transition: background-color 0.3s;
}
.user-summary:hover {
    background-color: #e0e0e0; /* Slightly darker on hover */
}
.user-summary.online {
    background-color: #d4edda;
    border-left: 4px solid #28a745; /* Green indicator for online users */
}
.user-summary .username {
    font-weight: bold;
    color: #333;
}
.user-summary .status {
    font-size: 0.9rem;
    color: #666;
}
.user-summary .status.online {
    color: #28a745; /* Green text for online status */
}

/* Expand Button */
.expand-button {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 12px;
    color: #666;
    padding: 0 5px;
    transition: color 0.3s;
}
.expand-button:hover {
    color: #333; /* Darker color on hover */
}

/* User Details */
.user-details {
    display: none;
    padding: 12px;
    background-color: white;
    border-top: 1px solid #e0e0e0;
}
.user-details.expanded {
    display: block;
}

/* Detail Row */
.detail-row {
    margin-bottom: 5px;
    display: flex;
    align-items: center;
}
.detail-row label {
    font-weight: bold;
    width: 140px;
    flex-shrink: 0;
    color: #444;
}
.detail-row span {
    color: #333;
}

/* Recent Messages */
.recent-messages {
    margin: 8px 0;
    padding-left: 20px;
    max-height: 100px;
    overflow-y: auto;
    font-size: 0.9rem;
    color: #555;
}

/* No Users Message */
.no-users {
    padding: 15px;
    text-align: center;
    color: #666;
    font-style: italic;
    font-size: 1rem;
}

/* Tablet and Desktop Layout */
@media (min-width: 768px) {
    .main-content {
        grid-template-columns: 1fr 1fr; /* Two columns */
        gap: 2rem;
    }
    .scanner-section {
        grid-column: 1 / -1; /* Span all columns */
        margin-bottom: 1.5rem;
    }
    .activity-section {
        grid-column: 1; /* First column */
    }
    .prompt-section {
        grid-column: 2; /* Second column */
    }
    #usersSection {
        grid-column: 1 / -1; /* Span all columns */
        margin-top: 1.5rem;
    }
}

@media (min-width: 768px) {
    .feed {
        max-height: 400px; /* Increase feed height for tablets and desktops */
    }
}


@media (min-width: 768px) {
    .activity-section,
    .prompt-section {
        height: calc(100vh - 300px); /* Adjust based on header/footer height */
        min-height: 400px;
        transition: all 0.3s ease;
    }
}


/* Scanner Section */
.scanner-section {
    background-color: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}
#qrScannerContainer {
    position: relative;
    width: 100%;
    max-width: 500px;
    margin: 0 auto 1rem;
    overflow: hidden;
    border-radius: 8px;
    border: 2px solid #ddd;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}
#qrScanner {
    width: 100%;
    height: auto;
    background-color: #000;
    border-radius: 8px;
}
#qrCanvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Ensure canvas doesn&apos;t block interactions */
}
#startScan {
    margin-top: 1rem;
}
#scanResult {
    margin-top: 1rem;
    font-size: 1rem;
    color: #333;
}
#apiEndpoint {
    font-weight: bold;
    color: #4a90e2;
}


/* Scanner Buttons */
#startScan {
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 4px;
    background-color: #4a90e2; /* Primary blue color */
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s;
    font-weight: bold;
}
#startScan:hover {
    background-color: #3a80d2; /* Darker blue on hover */
}

#disconnect {
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 4px;
    background-color: #e74c3c; /* Red color for disconnect */
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s;
    font-weight: bold;
}
#disconnect:hover {
    background-color: #c0392b; /* Darker red on hover */
}

/* Scan Result Text */
#scanResult {
    margin-top: 1rem;
    font-size: 1rem;
    color: #333;
}
#apiEndpoint {
    font-weight: bold;
    color: #4a90e2;
}


/* Settings Button */
#configToggle {
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 4px;
    background-color: #ff9f43; /* Warm orange color */
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: 0.5rem; /* Space between icon and text */
}
#configToggle:hover {
    background-color: #e68a3b; /* Darker orange on hover */
    transform: scale(1.05); /* Slight zoom effect */
}
#configToggle:active {
    transform: scale(0.95); /* Slight shrink effect on click */
}


/* Config Section */
.config-section {
    background-color: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    margin-bottom: 1.5rem;
    transition: box-shadow 0.3s;
}
.config-section:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15); /* Subtle hover effect */
}

/* Form Group */
.form-group {
    margin-bottom: 1.5rem;
}
.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: bold;
    color: #444;
}
.form-group input,
.form-group select,
.form-group textarea {
    width: 100%;
    padding: 1rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
    transition: border-color 0.3s;
}
.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
    border-color: #4a90e2; /* Highlight on focus */
    outline: none;
    box-shadow: 0 0 5px rgba(74, 144, 226, 0.5); /* Soft glow effect */
}

/* Textarea Adjustments */
textarea {
    min-height: 120px;
    resize: vertical; /* Allow vertical resizing */
}

/* Buttons in Config Section */
#saveConfig,
#testApiConnection {
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
    font-weight: bold;
    margin-right: 0.5rem;
}
#saveConfig {
    background-color: #4a90e2;
    color: white;
}
#saveConfig:hover {
    background-color: #3a80d2;
    transform: scale(1.05);
}
#testApiConnection {
    background-color: #ff9f43;
    color: white;
}
#testApiConnection:hover {
    background-color: #e68a3b;
    transform: scale(1.05);
}

/* API Test Result */
#apiTestResult {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: 4px;
    font-size: 1rem;
    color: #333;
    background-color: #f0f7ff;
    border: 1px solid #cce5ff;
}
#apiTestResult.success {
    background-color: #d4edda;
    border-color: #c3e6cb;
    color: #155724;
}
#apiTestResult.error {
    background-color: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
}

/* Factory Reset Button */
#factoryReset {
    margin-top: 1.5rem;
    padding: 0.7rem 1.2rem;
    border: none;
    border-radius: 4px;
    background-color: #e74c3c;
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
    font-weight: bold;
}
#factoryReset:hover {
    background-color: #c0392b;
    transform: scale(1.05);
}


/* Voice Selection Dropdowns */
#sayVoiceSelect,
#doVoiceSelect {
    padding: 0.8rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
    background-color: white;
    color: #333;
    transition: border-color 0.3s;
}
#sayVoiceSelect:focus,
#doVoiceSelect:focus {
    border-color: #4a90e2;
    outline: none;
    box-shadow: 0 0 5px rgba(74, 144, 226, 0.5);
}

/* Voice Test Buttons */
.voice-test-button {
    padding: 0.7rem 1.2rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
    font-weight: bold;
    margin-top: 0.5rem;
}
#testSayVoice {
    background-color: #0066cc;
    color: white;
}
#testSayVoice:hover {
    background-color: #004c99;
    transform: scale(1.05);
}
#testDoVoice {
    background-color: #444;
    color: white;
}
#testDoVoice:hover {
    background-color: #333;
    transform: scale(1.05);
}

/* Data Management Section */
.data-management {
    margin-top: 1.5rem;
    padding: 1.5rem;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}
.data-management h3 {
    font-size: 1.2rem;
    margin-bottom: 1rem;
    color: #444;
    border-bottom: 2px solid #4a90e2;
    padding-bottom: 0.5rem;
}
.button-group {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
}
.action-button {
    padding: 0.7rem 1.2rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
    font-weight: bold;
}
#exportDataButton {
    background-color: #28a745;
    color: white;
}
#exportDataButton:hover {
    background-color: #218838;
    transform: scale(1.05);
}
#importDataButton {
    background-color: #ffc107;
    color: black;
}
#importDataButton:hover {
    background-color: #e0a800;
    transform: scale(1.05);
}
.checkbox-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}
.checkbox-group label {
    font-size: 1rem;
    color: #444;
}
.checkbox-group input[type=&quot;checkbox&quot;] {
    width: 18px;
    height: 18px;
    accent-color: #4a90e2;
}
.result-box {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: 4px;
    background-color: #f0f7ff;
    border: 1px solid #cce5ff;
    color: #333;
    font-size: 1rem;
}
.result-box.error {
    background-color: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
}

/* Toggle Switch */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: 0.4s;
}
.slider:before {
    position: absolute;
    content: &quot;&quot;;
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: 0.4s;
}
input:checked + .slider {
    background-color: #4a90e2; /* Primary blue color */
}
input:focus + .slider {
    box-shadow: 0 0 1px #4a90e2;
}
input:checked + .slider:before {
    transform: translateX(26px);
}
.slider.round {
    border-radius: 34px;
}
.slider.round:before {
    border-radius: 50%;
}
    </content>
  </file>
  <file path="test-factory-reset.js">
    <name>test-factory-reset.js</name>
    <size>875</size>
    <modified>2025-03-17T05:49:55.677Z</modified>
    <content>
      const puppeteer = require(&apos;puppeteer&apos;);

(async () =&gt; {
    const browser = await puppeteer.launch({ headless: false });
    const page = await browser.newPage();
    await page.goto(&apos;http://localhost:8787&apos;);

    // Wait for the configuration section to be visible
    await page.waitForSelector(&apos;#configSection&apos;);

    // Click the configuration toggle button to open the configuration section
    await page.click(&apos;#configToggle&apos;);

    // Wait for the factory reset button to be visible
    await page.waitForSelector(&apos;#factoryReset&apos;);

    // Click the factory reset button
    await page.click(&apos;#factoryReset&apos;);

    // Confirm the factory reset action
    await page.on(&apos;dialog&apos;, async dialog =&gt; {
        await dialog.accept();
    });

    // Wait for the page to reload
    await page.waitForNavigation();

    // Close the browser
    await browser.close();
})();

    </content>
  </file>
  <file path="wrangler.jsonc">
    <name>wrangler.jsonc</name>
    <size>341</size>
    <modified>2025-03-13T09:26:16.388Z</modified>
    <content>
      {
  &quot;$schema&quot;: &quot;node_modules/wrangler/config-schema.json&quot;,
  &quot;name&quot;: &quot;broadcasting-coach&quot;,
  &quot;main&quot;: &quot;src/index.js&quot;,
  &quot;compatibility_date&quot;: &quot;2025-03-12&quot;,
  &quot;assets&quot;: {
    &quot;directory&quot;: &quot;./static&quot;,
    &quot;binding&quot;: &quot;ASSETS&quot;
  },
  &quot;ai&quot;: {
    &quot;binding&quot;: &quot;AI&quot;
  },
  &quot;observability&quot;: {
    &quot;enabled&quot;: true
  },
  &quot;dev&quot;: {
    &quot;port&quot;: 8787
  }
}
    </content>
  </file>
</merged_files>